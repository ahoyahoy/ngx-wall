{"version":3,"file":"ngx-wall.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-wall/lib/modules/utils/guid.ts","ng://ngx-wall/lib/modules/utils/base64-to-file.ts","ng://ngx-wall/lib/modules/utils/img-encoder.service.ts","ng://ngx-wall/lib/wall/model/wall-brick.model.ts","ng://ngx-wall/lib/wall/plugins/core/events/add-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/before-change.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/move-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-bricks.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/set-plan.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/turn-brick-into.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/update-brick-state.event.ts","ng://ngx-wall/lib/wall/plugins/core/layout-walker.class.ts","ng://ngx-wall/lib/wall/plugins/core/wall-layout.model.ts","ng://ngx-wall/lib/wall/plugins/core/wall-core.plugin.ts","ng://ngx-wall/lib/wall/model/events/wall-plugin-initialized.event.ts","ng://ngx-wall/lib/wall/model/wall.model.ts","ng://ngx-wall/lib/wall/registry/brick-registry.service.ts","ng://ngx-wall/lib/wall/factory/wall-model.factory.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/component/placeholder.component.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.service.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.module.ts","ng://ngx-wall/lib/wall/components/wall-canvas/wall-canvas.component.ts","ng://ngx-wall/lib/modules/radar/events/location-updated.event.ts","ng://ngx-wall/lib/modules/radar/spot.model.ts","ng://ngx-wall/lib/modules/radar/radar-coordinator.service.ts","ng://ngx-wall/lib/modules/radar/radar.service.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component.ts","ng://ngx-wall/lib/wall/components/wall/events/selected-brick.event.ts","ng://ngx-wall/lib/wall/components/wall/wall-view.model.ts","ng://ngx-wall/lib/wall/components/wall/wall.component.ts","ng://ngx-wall/lib/modules/tow/events/start-working.event.ts","ng://ngx-wall/lib/modules/tow/events/stop-working.event.ts","ng://ngx-wall/lib/modules/tow/events/work-in-progress.event.ts","ng://ngx-wall/lib/modules/tow/tow-coordinator.service.ts","ng://ngx-wall/lib/modules/tow/tow-slave/tow-slave.directive.ts","ng://ngx-wall/lib/modules/tow/tow.service.ts","ng://ngx-wall/lib/modules/radar/directive/spot.directive.ts","ng://ngx-wall/lib/modules/radar/radar.module.ts","ng://ngx-wall/lib/modules/tow/tow.module.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.component.ts","ng://ngx-wall/lib/modules/pick-out/events/end-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/pick-out-items.event.ts","ng://ngx-wall/lib/modules/pick-out/events/start-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/stop-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-coordinator.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.constant.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.model.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.directive.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.module.ts","ng://ngx-wall/lib/wall/wall.module.ts","ng://ngx-wall/lib/modules/helper-components/brick-input-placeholder/brick-input-placeholder.component.ts","ng://ngx-wall/lib/modules/helper-components/loading-wrapper/loading-wrapper.component.ts","ng://ngx-wall/lib/modules/helper-components/helper-components.module.ts","ng://ngx-wall/lib/wall/components/wall/wall.constant.ts","ng://ngx-wall/lib/plugins/copy/copy.plugin.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.constant.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.plugin.ts","ng://ngx-wall/lib/modules/tow/tow.constant.ts","ng://ngx-wall/lib/plugins/selections/selection.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.constant.ts","ng://ngx-wall/lib/bricks/divider-brick/component/divider-brick.component.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.module.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-representation.class.ts","ng://ngx-wall/lib/modules/utils/deep-left-node-child.ts","ng://ngx-wall/lib/modules/utils/deep-right-node-child.ts","ng://ngx-wall/lib/modules/utils/first-sub-string-node.ts","ng://ngx-wall/lib/modules/utils/node/caret-start-end-position.ts","ng://ngx-wall/lib/modules/utils/node/cursor-left-coordinate.ts","ng://ngx-wall/lib/modules/utils/node/cursor-position-in-line.ts","ng://ngx-wall/lib/modules/utils/node/place-caret-to-position.ts","ng://ngx-wall/lib/modules/utils/node/string-without-empty-nodes.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.constant.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/bottom-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/enter-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/left-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/right-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/top-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.component.ts","ng://ngx-wall/lib/bricks/header-brick/component/header-brick.component.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.directive.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.module.ts","ng://ngx-wall/lib/bricks/header-brick/header-brick.module.ts","ng://ngx-wall/lib/modules/file-uploader/file-uploader.token.ts","ng://ngx-wall/lib/bricks/img-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/img-brick/component/img-brick.component.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-destructor.class.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-text-representation.class.ts","ng://ngx-wall/lib/modules/resizable/resizable-handler.component.ts","ng://ngx-wall/lib/modules/resizable/resizable.const.ts","ng://ngx-wall/lib/modules/resizable/resizable.directive.ts","ng://ngx-wall/lib/modules/resizable/resizable.module.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick.module.ts","ng://ngx-wall/lib/bricks/quote-brick/component/quote-brick.component.ts","ng://ngx-wall/lib/bricks/quote-brick/quote-brick.module.ts","ng://ngx-wall/lib/bricks/video-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/video-brick/component/video-brick.component.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick-text-representation.class.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick.module.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/component/web-bookmark-brick.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/web-bookmark-brick.module.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.constant.ts","ng://ngx-wall/lib/bricks/code-brick/mode-list/mode-list.component.ts","ng://ngx-wall/lib/bricks/code-brick/component/code-brick.component.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.module.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.constant.ts","ng://ngx-wall/lib/bricks/text-brick/bricks-list/bricks-list.component.ts","ng://ngx-wall/lib/modules/utils/node-tree-split.ts","ng://ngx-wall/lib/modules/utils/node/tree-node-traverse.ts","ng://ngx-wall/lib/bricks/text-brick/text-context-menu/text-context-menu.component.ts","ng://ngx-wall/lib/bricks/text-brick/component/text-brick.component.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.module.ts","ng://ngx-wall/lib/modules/radar/events/location-to-top-left-point.event.ts","ng://ngx-wall/lib/modules/radar/events/location-to-left-center-point.event.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class Guid {\n    get() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n}\n","export class Base64ToFile {\n    constructor(private base64: string, private fileName: string) {\n    }\n\n    getFile(): File {\n        const arr = this.base64.split(',');\n        const mime = arr[0].match(/:(.*?);/)[1];\n        const bstr = atob(arr[1]);\n        let n = bstr.length;\n        const u8arr = new Uint8Array(n);\n\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], this.fileName, {type: mime});\n    }\n}\n","export class ImgEncoder {\n    constructor(private image: File) {\n    }\n\n    getBase64Representation(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                resolve(event.target.result);\n            };\n\n            reader.onerror = (event: any) => {\n                reject(event);\n            };\n\n            reader.readAsDataURL(this.image);\n        });\n    }\n}\n","import {IBrickSnapshot} from './interfaces/brick-snapshot.interface';\n\nexport class WallBrick {\n    id: string;\n    tag: string;\n    meta: any;\n    state: any = {};\n\n    constructor(id: string, tag: string, meta: any) {\n        this.id = id;\n        this.tag = tag;\n        this.meta = meta;\n    }\n\n    getState(): any {\n        return JSON.parse(JSON.stringify(this.state));\n    }\n\n    updateState(newState) {\n        if (Object.keys(newState).length) {\n            Object.assign(this.state, newState);\n        } else {\n            this.state = {};\n        }\n\n        return this;\n    }\n\n    turnInto(tag: string) {\n        this.tag = tag;\n\n        this.updateState({});\n\n        return this;\n    }\n\n    getSnapshot(): IBrickSnapshot {\n        return {\n            id: this.id,\n            tag: this.tag,\n            meta: this.meta,\n            state: this.getState()\n        };\n    }\n}\n","export class AddBrickEvent {\n    constructor(public brickId: string) {\n    }\n}\n","export class BeforeChangeEvent {\n    constructor(public beforeEventType: any) {\n    }\n}\n","export class MoveBrickEvent {\n    constructor(public movedBrickIds: string[], beforeBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBrickEvent {\n    constructor(public brick: IBrickSnapshot,\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBricksEvent {\n    constructor(public bricks: IBrickSnapshot[],\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","export class SetPlanEvent {\n}\n\n","export class TurnBrickIntoEvent {\n    constructor(public brickId: string,\n                public newTag: string,\n                public oldTag: string) {\n    }\n}\n","export class UpdateBrickStateEvent {\n    constructor(public brickId: string,\n                public brickState: any,\n                public oldBrickState: any) {\n    }\n}\n","import {BrickRegistry} from '../../registry/brick-registry.service';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Execute queries commands over rows\n* */\nexport class LayoutWalker {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // public API\n\n    getRowCount() {\n        return this.rows.length;\n    }\n\n    isBrickAheadOf(firstBrickId: string, secondBrickId: string): boolean {\n        const brickIdsSequence = this.getBrickSequence(() => true).map((brick) => brick.id);\n\n        return brickIdsSequence.indexOf(firstBrickId) < brickIdsSequence.indexOf(secondBrickId);\n    }\n\n    getBrickTag(brickId: string): string {\n        return this.getBrickById(brickId).tag;\n    }\n\n    getBrickById(brickId: string): WallBrick {\n        return this.getBrickSequence((brick: WallBrick) => {\n            return brick.id === brickId;\n        })[0];\n    }\n\n    getBrickIds(): string[] {\n        return this.getBrickSequence(() => true).map((brick) => brick.id);\n    }\n\n    filterBricks(predictor: (brick: IBrickSnapshot) => boolean) {\n        return this.getBrickSequence((wallBrick) => {\n            return predictor(wallBrick.getSnapshot());\n        });\n    }\n\n    getBrickPosition(brickId: string) {\n        const brickPosition = {\n            rowIndex: null,\n            columnIndex: null,\n            brickIndex: null\n        };\n\n        let i = 0;\n\n        while (brickPosition.rowIndex === null && i < this.rows.length) {\n            this.rows[i].columns.forEach((column, columnIndex) => {\n                let brickIndex = null;\n\n                column.bricks.forEach((brick, index) => {\n                    if (brick.id === brickId) {\n                        brickIndex = index;\n                    }\n                });\n\n                if (brickIndex || brickIndex === 0) {\n                    brickPosition.rowIndex = i;\n                    brickPosition.columnIndex = columnIndex;\n                    brickPosition.brickIndex = brickIndex;\n                }\n            });\n\n            i++;\n        }\n\n        return brickPosition;\n    }\n\n    getColumnCount(rowIndex: number): number {\n        return this.rows[rowIndex].columns.length;\n    }\n\n    getBricksCount(): number {\n        return this.getBrickSequence(() => true).length;\n    }\n\n    getNextBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex + 1];\n    }\n\n    getNextBrickId(brickId: string): string {\n        const nextBrick = this.getNextBrick(brickId);\n\n        return nextBrick && nextBrick.id;\n    }\n\n    getPreviousBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex - 1];\n    }\n\n    getPreviousBrickId(brickId: string): string {\n        const previousBrick = this.getPreviousBrick(brickId);\n\n        return previousBrick && previousBrick.id;\n    }\n\n    getBrickSequence(predicate): WallBrick[] {\n        const brickSequence = [];\n\n        this.traverse((row: IWallRow) => {\n            row.columns.forEach((column) => {\n                column.bricks.forEach((brick) => {\n                    if (predicate(brick)) {\n                        brickSequence.push(brick);\n                    }\n                });\n            });\n        });\n\n        return brickSequence;\n    }\n\n    getNextTextBrickId(brickId: string): string {\n        const nextTextBrick = this.getNextTextBrick(brickId);\n\n        return nextTextBrick && nextTextBrick.id;\n    }\n\n    getPreviousTextBrickId(brickId: string): string {\n        const previousTextBrick = this.getPreviousTextBrick(brickId);\n\n        return previousTextBrick && previousTextBrick.id;\n    }\n\n    // end public API\n\n    getNextTextBrick(brickId: string): WallBrick {\n        const nextTextBricks = this.findBricksAfter(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return nextTextBricks[0];\n    }\n\n    getPreviousTextBrick(brickId: string): WallBrick {\n        const previousTextBricks = this.findBrickBefore(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return previousTextBricks[previousTextBricks.length - 1];\n    }\n\n    findBricksAfter(brickId: string, predicate): WallBrick[] {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsAfter = brickIdsSequence.splice(currentBrickIdIndex + 1);\n\n            brickIdsAfter.forEach((brickIdAfter) => {\n                const currentBrick = bricksSequence.find((brick) => {\n                    return brick.id === brickIdAfter;\n                });\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    findBrickBefore(brickId: string, predicate) {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsBefore = brickIdsSequence.splice(0, currentBrickIdIndex);\n\n            brickIdsBefore.forEach((brickIdBefore) => {\n                const currentBrick = bricksSequence.find((brick) => brick.id === brickIdBefore);\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    setLayout(rows: IWallRow[]) {\n        this.rows = rows;\n    }\n\n    traverse(fn: (row: IWallRow) => void) {\n        this.rows.forEach((row) => {\n            fn(row);\n        });\n    }\n}\n","import {Guid} from '../../../modules/utils/utils';\nimport {BrickRegistry} from '../../registry/public_api';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {LayoutWalker} from './layout-walker.class';\n\n/*\n* Modify layout wall rows\n* */\nexport class WallLayout {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry, private layoutWalker: LayoutWalker) {\n    }\n\n    // create new row and one column inside\n    addBrickToNewRow(rowIndex: number, brick: WallBrick, rowId?: string) {\n        const totalRowCount = this.rows.length;\n        const lastRowIndex = totalRowCount - 1;\n\n        // user cannot create row in position more than last row index + 1\n        // todo: remove helper checks, lets face the problem earlier\n        if (rowIndex > (lastRowIndex + 1)) {\n            rowIndex = lastRowIndex + 1;\n        }\n\n        this.createNewRow(rowIndex, rowId || this.generateId());\n\n        this.addBrick(rowIndex, 0, 0, brick);\n    }\n\n    // add only in already existing row and column\n    addBrickToExistingColumn(rowIndex: number, columnIndex: number, brickIndex: number, brick: WallBrick) {\n        const column = this.getColumn(rowIndex, columnIndex);\n\n        if (column) {\n            const bricksCount = column.bricks.length;\n\n            // user cannot put brick in position more than total brick count + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (brickIndex > (bricksCount + 1)) {\n                brickIndex = bricksCount + 1;\n            }\n\n            this.addBrick(rowIndex, columnIndex, brickIndex, brick);\n        }\n    }\n\n    // create new column in existing row\n    addBrickToNewColumn(rowIndex, columnIndex, brick: WallBrick) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            const columnCount = row.columns.length;\n\n            // user cannot create column in position more than total column cound + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (columnIndex > (columnCount + 1)) {\n                columnIndex = columnCount + 1;\n            }\n\n            this.createNewColumn(rowIndex, columnIndex);\n\n            this.addBrick(rowIndex, columnIndex, 0, brick);\n        }\n    }\n\n    moveBrickAfterInNewRow(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            const newRowIndex = afterBrickPosition.rowIndex + 1;\n\n            this.addBrickToNewRow(newRowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickAfterInSameColumn(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            this.addBrickToExistingColumn(\n                afterBrickPosition.rowIndex,\n                afterBrickPosition.columnIndex,\n                afterBrickPosition.brickIndex + index + 1,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInNewRow(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            let beforeBrickPosition;\n\n            if (index === 0) {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            } else {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(movedBrickIds[index - 1]);\n            }\n\n            this.addBrickToNewRow(beforeBrickPosition.rowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInSameColumn(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n            this.addBrickToExistingColumn(\n                beforeBrickPosition.rowIndex,\n                beforeBrickPosition.columnIndex,\n                beforeBrickPosition.brickIndex,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickToNewColumn(movedBrickIds, beforeBrickId, side): void {\n        const movedBricks = movedBrickIds.map((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            return currentMovedBrick;\n        });\n\n        const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n        let columnIndex;\n\n        // todo: move side to constant\n        // todo: search across project for all hard coded variables\n        if (side === 'left') {\n            columnIndex = beforeBrickPosition.columnIndex;\n        } else if (side === 'right') {\n            columnIndex = beforeBrickPosition.columnIndex + 1;\n        }\n\n        movedBricks.forEach((movedBrick, index) => {\n            if (index === 0) {\n                this.addBrickToNewColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    movedBrick\n                );\n            } else {\n                this.addBrickToExistingColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    index,\n                    movedBrick\n                );\n            }\n        });\n    }\n\n    removeBrick(brickId: string): void {\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n\n        const row = this.rows[brickPosition.rowIndex];\n        const column = row.columns[brickPosition.columnIndex];\n\n        // remove brick\n        column.bricks.splice(brickPosition.brickIndex, 1);\n\n        // remove column if there are no bricks inside\n        if (column.bricks.length === 0) {\n            row.columns.splice(brickPosition.columnIndex, 1);\n\n            // remove row if there are no columns inside\n            if (row.columns.length === 0) {\n                this.rows.splice(brickPosition.rowIndex, 1);\n\n                // if there are no rows, create default\n                if (this.rows.length === 0) {\n                    this.rows.push(this.initializeNewRow(this.generateId()));\n                }\n            }\n        }\n    }\n\n    // COMMANDS\n    private addBrick(rowIndex, columnIndex, brickIndex, brick) {\n        this.rows[rowIndex].columns[columnIndex].bricks.splice(brickIndex, 0, brick);\n    }\n\n    private getColumn(rowIndex: number, columnIndex: number): IWallColumn {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            return row.columns[columnIndex];\n        } else {\n            return null;\n        }\n    }\n\n    private createNewRow(rowIndex: number, rowId: string): void {\n        this.rows.splice(rowIndex, 0, this.initializeNewRow(rowId));\n    }\n\n    private createNewColumn(rowIndex: number, columnIndex: number): void {\n        this.rows[rowIndex].columns.splice(columnIndex, 0, this.initializeNewColumn());\n    }\n\n    private initializeNewRow(rowId: string): IWallRow {\n        return {\n            id: rowId,\n            columns: [\n                this.initializeNewColumn()\n            ]\n        };\n    }\n\n    private initializeNewColumn(): IWallColumn {\n        return {\n            bricks: []\n        };\n    }\n\n    private generateId(): string {\n        return (new Guid()).get();\n    }\n}\n","import {Subject, Subscription} from 'rxjs';\nimport {Guid} from '../../../modules/utils/utils';\nimport {IBrickDefinition} from '../../model/interfaces/brick-definition.interface';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallDefinition} from '../../model/interfaces/wall-definition.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {AddBrickEvent} from './events/add-brick.event';\nimport {BeforeChangeEvent} from './events/before-change.event';\nimport {MoveBrickEvent} from './events/move-brick.event';\nimport {RemoveBrickEvent} from './events/remove-brick.event';\nimport {RemoveBricksEvent} from './events/remove-bricks.event';\nimport {SetPlanEvent} from './events/set-plan.event';\nimport {TurnBrickIntoEvent} from './events/turn-brick-into.event';\nimport {UpdateBrickStateEvent} from './events/update-brick-state.event';\nimport {LayoutWalker} from './layout-walker.class';\nimport {WallLayout} from './wall-layout.model';\nimport {IWallPlugin} from '../../model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Contains Wall data structure and registers API for data manipulation.\n* Responsible to IWallDefinition->Layout and Layout->IWallDefinition transformation\n* */\nexport class WallCorePlugin implements IWallPlugin {\n    name = 'core';\n    version = '0.0.0';\n\n    // sub plugins\n    private layout: WallLayout;\n    private layoutWalker: LayoutWalker = new LayoutWalker(this.brickRegistry);\n\n    private wallModel: IWallModel;\n\n    private DEFAULT_BRICK = 'text';\n\n    private events: Subject<any> = new Subject();\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // START API\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        [\n            'getRowCount',\n            'getBrickTag',\n            'getPreviousBrickId',\n            'getNextBrickId',\n            'getColumnCount',\n            'getBrickIds',\n            'getBricksCount',\n            'getNextTextBrickId',\n            'getPreviousTextBrickId',\n            'filterBricks',\n            'isBrickAheadOf'\n        ].forEach((methodName) => {\n            this[methodName] = this.layoutWalker[methodName].bind(this.layoutWalker);\n        });\n\n        this.wallModel.registerApi(this.name, this);\n    }\n\n    // old\n\n    // COMMAND METHODS\n    setPlan(plan: IWallDefinition) {\n        this.dispatch(new BeforeChangeEvent(SetPlanEvent));\n\n        this.layout = new WallLayout(this.brickRegistry, this.layoutWalker);\n\n        this.layoutWalker.setLayout(this.layout.rows);\n\n        // build tree\n        plan.layout.bricks.forEach((row, rowIndex) => {\n            row.columns.forEach((column, columnIndex) => {\n                column.bricks.forEach((brick, brickIndex) => {\n                    const planBrick = plan.bricks.find((currentPlanBrick) => {\n                        return brick.id === currentPlanBrick.id;\n                    });\n\n                    const wallBrick = this.restoreBrick(planBrick);\n\n                    // first column in new row\n                    if (columnIndex === 0) {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewRow(rowIndex, wallBrick, row.id);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    } else {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewColumn(rowIndex, columnIndex, wallBrick);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    }\n                });\n            });\n        });\n\n        this.dispatch(new SetPlanEvent());\n    }\n\n    addBrickAfterBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex + 1, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex + 1,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    addBrickBeforeBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    // Add text brick to the bottom of wall in the new row\n    addDefaultBrick() {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickCount = this.layoutWalker.getBricksCount();\n        const newBrick = this.createBrick(this.DEFAULT_BRICK);\n        const rowIndex = brickCount ? this.layoutWalker.getRowCount() + 1 : 0;\n\n        this.layout.addBrickToNewRow(rowIndex, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n    }\n\n    addBrickAtStart(tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const newBrick = this.createBrick(tag, state);\n\n        this.layout.addBrickToNewRow(0, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    updateBrickState(brickId, brickState): void {\n        this.dispatch(new BeforeChangeEvent(UpdateBrickStateEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const oldState = JSON.parse(JSON.stringify(brick.getState()));\n\n        brick.updateState(JSON.parse(JSON.stringify(brickState)));\n\n        this.dispatch(new UpdateBrickStateEvent(\n            brickId,\n            JSON.parse(JSON.stringify(brick.getState())),\n            oldState\n        ));\n    }\n\n    // todo: should be async operation\n    removeBrick(brickId: string): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBrickEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextTextBrick(brickId);\n        const previousTextBrick = this.layoutWalker.getPreviousTextBrick(brickId);\n\n        this.clearBrickResources(brickId).then(() => {\n        });\n\n        const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n        this.layout.removeBrick(brickId);\n\n        this.dispatch(new RemoveBrickEvent(\n            removedBrick.getSnapshot(),\n            previousTextBrick && previousTextBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    // todo: should be async operation\n    removeBricks(brickIds): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBricksEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextBrick(brickIds[brickIds.length - 1]);\n        const previousBrick = this.layoutWalker.getPreviousBrick(brickIds[0]);\n\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        Promise.all(clearPromises).then(() => {\n        });\n\n        const removedBricks = brickIds.map((brickId) => {\n            const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n            this.layout.removeBrick(brickId);\n\n            return {\n                id: removedBrick.id,\n                tag: removedBrick.tag,\n                state: removedBrick.state\n            };\n        });\n\n        this.dispatch(new RemoveBricksEvent(\n            removedBricks,\n            previousBrick && previousBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    /**\n     * Remove all bricks from layout\n     * Clear all bricks external dependencies\n     */\n    clear(): Promise<any> {\n        const brickIds = this.layoutWalker.getBrickIds();\n\n        // todo: replace it after removeBricks will be async\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        return Promise.all(clearPromises).then(() => {\n            brickIds.forEach((brickId) => {\n                this.layout.removeBrick(brickId);\n            });\n        });\n    }\n\n    turnBrickInto(brickId: string, newTag: string, state: any = {}) {\n        this.dispatch(new BeforeChangeEvent(TurnBrickIntoEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n        const oldTag = brick.tag;\n\n        brick\n            .turnInto(newTag)\n            .updateState(state);\n\n        this.dispatch(new TurnBrickIntoEvent(brickId, newTag, oldTag));\n    }\n\n    moveBrickAfterBrickId(movedBrickIds: string[], afterBrickId: string): void {\n        if (movedBrickIds.indexOf(afterBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(afterBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickAfterInNewRow(afterBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickAfterInSameColumn(afterBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, afterBrickId));\n        }\n    }\n\n    moveBrickBeforeBrickId(movedBrickIds: string[], beforeBrickId: string): void {\n        if (movedBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(beforeBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickBeforeInNewRow(beforeBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickBeforeInSameColumn(beforeBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, beforeBrickId));\n        }\n    }\n\n    moveBrickToNewColumn(targetBrickIds: string[], beforeBrickId: string, side: string): void {\n        if (targetBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            this.layout.moveBrickToNewColumn(targetBrickIds, beforeBrickId, side);\n\n            this.dispatch(new MoveBrickEvent(targetBrickIds, beforeBrickId));\n        }\n    }\n\n    // QUERY METHODS\n    getPlan(): IWallDefinition {\n        const plan = {\n            bricks: [],\n            layout: {\n                bricks: []\n            }\n        };\n\n        this.layoutWalker.traverse((row: IWallRow) => {\n            const columns = [];\n\n            row.columns.forEach((column: IWallColumn) => {\n                const planColumn = {\n                    bricks: []\n                };\n\n                column.bricks.forEach((brick: WallBrick) => {\n                    plan.bricks.push({\n                        id: brick.id,\n                        tag: brick.tag,\n                        meta: brick.meta,\n                        data: brick.state\n                    });\n\n                    planColumn.bricks.push({\n                        id: brick.id\n                    });\n                });\n\n                columns.push(planColumn);\n            });\n\n            plan.layout.bricks.push({\n                columns,\n                id: row.id\n            });\n        });\n\n        return JSON.parse(JSON.stringify(plan));\n    }\n\n    sortBrickIdsByLayoutOrder(brickIds: string[]) {\n        const bricksSequence = this.layoutWalker.getBrickSequence(() => true);\n\n        return bricksSequence\n            .filter((brick) => brickIds.indexOf(brick.id) !== -1)\n            .map((brick) => brick.id);\n    }\n\n    traverse(fn): void {\n        return this.layoutWalker.traverse((row: IWallRow) => {\n            const preparedRow = {\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brick) => brick.getSnapshot())\n                    };\n                })\n            };\n\n            fn(preparedRow);\n        });\n    }\n\n    getBrickSnapshot(brickId: string): IBrickSnapshot {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        return brick ? brick.getSnapshot() : null;\n    }\n\n    getBrickResourcePaths(brickId: string): string[] {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (!brickSpecification.getBrickResourcePaths) {\n            return [];\n        }\n\n        return brickSpecification.getBrickResourcePaths(brick.getSnapshot());\n    }\n\n    getBrickTextRepresentation(brickId: string): string {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.textRepresentation) {\n            const brickTextRepresentation = new brickSpecification.textRepresentation(brick.getSnapshot());\n\n            return brickTextRepresentation.getText() || '';\n        } else {\n            return '';\n        }\n    }\n\n    subscribe(callback): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    isRegisteredBrick(tag: string): boolean {\n        return Boolean(this.brickRegistry.get(tag));\n    }\n\n    private dispatch(e: any): void {\n        this.events.next(e);\n    }\n\n    private createBrick(tag, state?: any) {\n        const id = this.generateGuid();\n        const meta = {};\n        const brick = new WallBrick(id, tag, meta);\n\n        if (state) {\n            brick.updateState(state);\n        }\n\n        return brick;\n    }\n\n    private restoreBrick(brickDefinition: IBrickDefinition): WallBrick {\n        const brick = new WallBrick(\n            brickDefinition.id,\n            brickDefinition.tag,\n            brickDefinition.meta\n        );\n\n        brick.updateState(brickDefinition.data);\n\n        return brick;\n    }\n\n    private clearBrickResources(brickId): Promise<any> {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.destructor) {\n            return brickSpecification.destructor(brick.getSnapshot());\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    private generateGuid(): string {\n        return (new Guid()).get();\n    }\n}\n","export class WallPluginInitializedEvent {\n    constructor(public pluginName: string) {\n    }\n}\n","import {Observable, Subject, Subscription} from 'rxjs';\nimport {IWallPlugin} from './interfaces/wall-plugin.interface';\nimport {WallPluginInitializedEvent} from './events/wall-plugin-initialized.event';\nimport {IWallModelConfig} from './interfaces/wall-model-config.interface';\nimport {IWallModel} from './interfaces/wall-model.interface';\nimport {IWallCorePluginApi} from './interfaces/wall-core-plugin-api.interface';\nimport {BrickRegistry} from '../registry/brick-registry.service';\n\nexport class WallModel implements IWallModel {\n    version: '0.0.0';\n\n    // plugin api\n    api: {\n        [apiName: string]: any;\n        core: IWallCorePluginApi\n    } = {\n        core: null\n    };\n\n    private events$: Observable<any> = new Subject();\n\n    private plugins: Map<string, IWallPlugin> = new Map();\n\n    constructor(private brickRegistry: BrickRegistry, config: IWallModelConfig) {\n        // initialize 3rd party plugins\n        config.plugins.forEach((plugin) => this.initializePlugin(plugin));\n    }\n\n    // register external API\n    registerApi(apiName: string, api: object) {\n        this.api[apiName] = api;\n    }\n\n    destroy() {\n        this.plugins.forEach((plugin) => this.destroyPlugin(plugin));\n    }\n\n    // proxy events from all plugins\n    subscribe(callback): Subscription {\n        return this.events$.subscribe(callback);\n    }\n\n    private dispatch(e: any): void {\n        (this.events$ as Subject<any>).next(e);\n    }\n\n    private initializePlugin(plugin: IWallPlugin) {\n        plugin.onWallInitialize(this);\n\n        this.plugins.set(plugin.name, plugin);\n\n        this.dispatch(new WallPluginInitializedEvent(plugin.name));\n    }\n\n    private destroyPlugin(plugin: IWallPlugin) {\n        if (plugin.onWallPluginDestroy) {\n            plugin.onWallPluginDestroy();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {IBrickSpecification} from './interfaces/brick-specification.interface';\n\n@Injectable()\nexport class BrickRegistry {\n    private bricks: IBrickSpecification[] = [];\n\n    // todo: add unregister functionality\n\n    register(brickConfiguration: IBrickSpecification) {\n        this.bricks.push(brickConfiguration);\n    }\n\n    get(tag: string): IBrickSpecification {\n        return this.bricks.find((brickConfiguration: IBrickSpecification) => brickConfiguration.tag === tag);\n    }\n\n    getAll(): IBrickSpecification[] {\n        return this.bricks;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {WallCorePlugin} from '../plugins/core/wall-core.plugin';\nimport {WallModel} from '../model/wall.model';\nimport {BrickRegistry} from '../registry/brick-registry.service';\nimport {IWallModel} from '../model/interfaces/wall-model.interface';\nimport {IWallModelConfig} from '../model/interfaces/wall-model-config.interface';\n\n@Injectable()\nexport class WallModelFactory {\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    create(config?: IWallModelConfig): IWallModel {\n        const defaultConfig = {\n            plan: {\n                bricks: [],\n                layout: {\n                    bricks: []\n                }\n            },\n            plugins: []\n        };\n\n        config = {\n            ...defaultConfig,\n            ...config\n        };\n\n        // inject core plugin as initial first plugin\n        // in this way factory will decouple WallModel from WallCorePlugin\n        config.plugins.unshift(new WallCorePlugin(this.brickRegistry));\n\n        const wallModel = new WallModel(\n            this.brickRegistry,\n            config\n        );\n\n        wallModel.api.core.setPlan(config.plan);\n\n        return wallModel;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './placeholder.component.html',\n    styleUrls: ['./placeholder.component.scss']\n})\nexport class PlaceholderComponent {\n    x: number;\n    y: number;\n    size: number;\n    isHorizontal: boolean;\n\n    setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.isHorizontal = isHorizontal;\n    }\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector\n} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\n\n@Injectable()\nexport class PlaceholderRenderer {\n    private placeholderComponentRef: ComponentRef<PlaceholderComponent> = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private injector: Injector) {\n    }\n\n    render(x: number, y: number, size: number, isHorizontal: boolean = true) {\n        if (!this.placeholderComponentRef) {\n            this.renderPlaceholderComponent();\n        }\n\n        this.setCoordinate(x, y, size, isHorizontal);\n    }\n\n    clear() {\n        if (this.placeholderComponentRef) {\n            this.removePlaceholderComponent();\n        }\n    }\n\n    private renderPlaceholderComponent() {\n        this.placeholderComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PlaceholderComponent)\n            .create(this.injector);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.placeholderComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.placeholderComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n        document.body.appendChild(domElem);\n    }\n\n    private removePlaceholderComponent() {\n        this.appRef.detachView(this.placeholderComponentRef.hostView);\n        this.placeholderComponentRef.destroy();\n\n        this.placeholderComponentRef = null;\n    }\n\n    private setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.placeholderComponentRef.instance.setCoordinate(x, y, size, isHorizontal);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\nimport {PlaceholderRenderer} from './placeholder-renderer.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        PlaceholderComponent\n    ],\n    providers: [\n        PlaceholderRenderer\n    ],\n    entryComponents: [\n        PlaceholderComponent\n    ]\n})\nexport class PlaceholderRendererModule {\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Component, ElementRef, EventEmitter, Inject, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IFocusedBrick} from '../wall/interfaces/focused-brick.interface';\n\n@Component({\n    selector: 'wall-canvas',\n    templateUrl: './wall-canvas-component.component.html',\n    styleUrls: ['./wall-canvas.component.scss']\n})\nexport class WallCanvasComponent implements OnChanges {\n    @Input() wallModel: IWallModel;\n    @Input() rows: IWallRow[] = [];\n\n    @Input() selectedBricks: string[] = null;\n    @Input() focusedBrick: IFocusedBrick = null;\n    @Input() isMediaInteractionEnabled$: Observable<boolean>;\n\n    @Output() canvasClick: EventEmitter<any> = new EventEmitter();\n    @Output() onBrickStateChanged: EventEmitter<any> = new EventEmitter();\n\n    // public API for sub components\n    focusedBrick$: Subject<IFocusedBrick> = new Subject();\n    selectedBricks$: Subject<string[]> = new Subject();\n\n    doc: any = null;\n\n    @ViewChild('expander') expander: ElementRef;\n\n    constructor(@Inject(DOCUMENT) doc) {\n        this.doc = doc;\n    }\n\n    onEditorClick(e: any) {\n        if (e.target === this.expander.nativeElement) {\n            this.canvasClick.emit();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.focusedBrick && changes.focusedBrick.currentValue) {\n            this.focusedBrick$.next(changes.focusedBrick.currentValue);\n        }\n\n        if (changes.selectedBricks) {\n            this.selectedBricks$.next(changes.selectedBricks.currentValue || []);\n        }\n    }\n\n    brickStateChanged(brickId: string, brickState: any) {\n        this.onBrickStateChanged.emit({\n            brickId,\n            brickState\n        });\n    }\n\n    trackRowsBy(index, item): string {\n        return item.id;\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationUpdatedEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {SpotDirective} from './directive/spot.directive';\nimport {ISpotPosition, ISpotSize} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\n\nexport class SpotModel {\n    id: SpotId;\n    data: any;\n    position: ISpotPosition;\n    size: ISpotSize;\n\n    private instance: SpotDirective;\n\n    constructor(instance: SpotDirective) {\n        this.id = instance.id;\n        this.instance = instance;\n\n        this.updateInfo();\n    }\n\n    updateInfo() {\n        const {position, size, data} = this.instance.getInfo();\n\n        this.data = data;\n        this.size = size;\n        this.position = position;\n    }\n\n    isCross13Line(y) {\n        return (y > this.position.y) && (y < this.position.y + this.size.height);\n    }\n\n    getMinimalDistanceToPoint(x: number, y: number) {\n        let minimalDistance = null;\n\n        // distances to horizontal lines\n        const distanceToLine12 = Math.abs(this.position.y - y);\n        const distanceToLine43 = Math.abs((this.position.y + this.size.height) - y);\n\n        // distances to vertical lines\n        const distanceToLine14 = Math.abs(this.position.x - x);\n        const distanceToLine23 = Math.abs((this.position.x + this.size.width) - x);\n\n        const minDistanceToHorizontalLine = Math.min.apply(null, [distanceToLine12, distanceToLine43]);\n        const minDistanceToVerticalLine = Math.min.apply(null, [distanceToLine14, distanceToLine23]);\n\n        if ((x > this.position.x) && (x < this.position.x + this.size.width)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToHorizontalLine;\n        } else if ((y > this.position.y) && (y < this.position.y + this.size.height)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToVerticalLine;\n        } else {\n            // point doesn't cross beacon, calculate shortest distance to beacon\n            minimalDistance = Math.sqrt(\n                minDistanceToHorizontalLine *\n                minDistanceToHorizontalLine +\n                minDistanceToVerticalLine *\n                minDistanceToVerticalLine\n            );\n        }\n\n        return minimalDistance;\n    }\n\n    getDistanceToTopLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToBottomLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + this.size.height - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToLeftCenterPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + (this.size.height / 2) - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    isPointInsideSpot(x: number, y: number): boolean {\n        if ((x > this.position.x) && (x < this.position.x + this.size.width) &&\n            (y > this.position.y) && (y < this.position.y + this.size.height)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {throttleTime} from 'rxjs/operators';\nimport {SpotDirective} from './directive/spot.directive';\nimport {LocationUpdatedEvent} from './events/location-updated.event';\nimport {IDistanceToSpot} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class RadarCoordinator {\n    private spots: Map<SpotId, SpotModel> = new Map();\n\n    private events: Subject<any> = new Subject();\n\n    private mouseMove$: Observable<MouseEvent>;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private zone: NgZone) {\n        this.mouseMove$ = fromEvent(doc, 'mousemove');\n\n        const throttleMouseTime = 30;\n\n        // run outside Angular Zone in order to decrease performance hit\n        this.zone.runOutsideAngular(() => {\n            this.mouseMove$\n                .pipe(\n                    throttleTime(throttleMouseTime)\n                )\n                .subscribe((event) => {\n                    this.updateSpotsInfo();\n                    this.updateLocationPosition(event.clientX, event.clientY);\n                });\n        });\n    }\n\n    register(spotId: SpotId, spotInstance: SpotDirective) {\n        this.spots.set(spotId, new SpotModel(spotInstance));\n    }\n\n    unRegister(spotId: SpotId) {\n        this.spots.delete(spotId);\n    }\n\n    updateSpotsInfo() {\n        this.spots.forEach((spot) => spot.updateInfo());\n    }\n\n    filterSpots(predicate: (spot: SpotModel) => void): SpotModel[] {\n        return Array.from(this.spots)\n            .map(([id, spot]) => spot)\n            .filter((spot) => predicate(spot));\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n\n    private updateLocationPosition(x: number, y: number) {\n        const sortedSpots: IDistanceToSpot[] = [];\n\n        this.spots.forEach((spot) => {\n            const minimalDistance = spot.getMinimalDistanceToPoint(x, y);\n            const topLeftPointDistance = spot.getDistanceToTopLeftPoint(x, y);\n            const bottomLeftPointDistance = spot.getDistanceToBottomLeftPoint(x, y);\n            const centerLeftPointDistance = spot.getDistanceToLeftCenterPoint(x, y);\n            const isCross13Line = spot.isCross13Line(y);\n\n            sortedSpots.push({\n                minimalDistance,\n                topLeftPointDistance,\n                bottomLeftPointDistance,\n                centerLeftPointDistance,\n                isCross13Line,\n                data: spot.data\n            });\n        });\n\n        this.events.next(new LocationUpdatedEvent(sortedSpots));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class Radar {\n    private events: Subject<any> = new Subject();\n\n    constructor(private radarCoordinator: RadarCoordinator) {\n        this.radarCoordinator.subscribe((event) => {\n            this.events.next(event);\n        });\n    }\n\n    filterSpots(fn: (spot: SpotModel) => void): SpotModel[] {\n        return this.radarCoordinator.filterSpots(fn);\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {WallCanvasComponent} from '../../wall-canvas.component';\nimport {Radar} from '../../../../../modules/radar/radar.service';\nimport {LocationUpdatedEvent} from '../../../../../modules/radar/events/location-updated.event';\nimport {IWallComponent} from '../../../wall/interfaces/wall-component/wall-component.interface';\n\n@Component({\n    selector: 'wall-canvas-brick',\n    templateUrl: './wall-canvas-brick.component.html',\n    styleUrls: ['./wall-canvas-brick.component.scss']\n})\nexport class WallCanvasBrickComponent implements OnInit, OnDestroy, OnChanges {\n    // todo add type\n    @Input() brick: any;\n\n    @ViewChild('brickContainer', {read: ViewContainerRef}) container: ViewContainerRef;\n\n    selected = false;\n\n    isMouseNear = false;\n\n    spot: any;\n\n    isMediaInteractionEnabled = true;\n\n    private componentReference: ComponentRef<any>;\n\n    private minimalDistanceToMouse = 100;\n\n    // subscriptions\n    private stateChangesSubscription: Subscription;\n    private radarSubscription: Subscription;\n    private focusedBrickSubscription: Subscription;\n    private selectedBricksSubscription: Subscription;\n    private isMediaInteractionEnabledSubscription: Subscription;\n\n    constructor(private injector: Injector,\n                private resolver: ComponentFactoryResolver,\n                private radar: Radar,\n                private cdRef: ChangeDetectorRef,\n                private wallCanvasComponent: WallCanvasComponent) {\n    }\n\n    ngOnInit() {\n        this.spot = {\n            brickId: this.brick.id,\n            isPickOutItem: true,\n            isBeacon: true\n        };\n\n        this.componentReference = this.renderBrick();\n\n        this.radarSubscription = this.radar.subscribe((e) => {\n            if (e instanceof LocationUpdatedEvent) {\n                const currentSpot = e.spots.find((spot) => spot.data.brickId === this.brick.id);\n\n                if (currentSpot.isCross13Line) {\n                    this.isMouseNear = currentSpot.topLeftPointDistance < this.minimalDistanceToMouse;\n                } else {\n                    this.isMouseNear = false;\n                }\n\n                this.cdRef.detectChanges();\n            }\n        });\n\n        this.focusedBrickSubscription = this.wallCanvasComponent.focusedBrick$.subscribe((focusedBrick) => {\n            if (focusedBrick.id === this.brick.id) {\n                this.callInstanceApi('onWallFocus', focusedBrick.context);\n            }\n        });\n\n        this.selectedBricksSubscription = this.wallCanvasComponent.selectedBricks$.subscribe((selectedBricks) => {\n            this.selected = !Boolean(selectedBricks.indexOf(this.brick.id) === -1);\n        });\n\n        this.isMediaInteractionEnabledSubscription = this.wallCanvasComponent.isMediaInteractionEnabled$\n            .subscribe((isMediaInteractionEnabled) => this.isMediaInteractionEnabled = isMediaInteractionEnabled);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.brick && !changes.brick.firstChange && changes.brick.currentValue) {\n            this.componentReference.instance.state = this.brick.state;\n\n            this.callInstanceApi('onWallStateChange', this.componentReference.instance.state);\n        }\n    }\n\n    ngOnDestroy() {\n        this.radarSubscription.unsubscribe();\n        this.focusedBrickSubscription.unsubscribe();\n        this.selectedBricksSubscription.unsubscribe();\n        this.isMediaInteractionEnabledSubscription.unsubscribe();\n\n        if (this.stateChangesSubscription) {\n            this.stateChangesSubscription.unsubscribe();\n        }\n    }\n\n    private callInstanceApi(methodName: string, data?: any) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName](data);\n        }\n    }\n\n    private renderBrick() {\n        const factory = this.resolver.resolveComponentFactory(this.brick.component);\n\n        const componentReference = this.container.createComponent(factory, null, this.injector);\n\n        const componentInstance = componentReference.instance as IWallComponent;\n\n        componentInstance.id = this.brick.id;\n        componentInstance.state = this.brick.state;\n        componentInstance.wallModel = this.wallCanvasComponent.wallModel;\n\n        if (componentInstance.stateChanges) {\n            this.stateChangesSubscription = componentInstance.stateChanges.subscribe((newState) => {\n                this.wallCanvasComponent.brickStateChanged(this.brick.id, newState);\n            });\n        }\n\n        return componentReference;\n    }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'wall-canvas-row',\n    templateUrl: './wall-canvas-row.component.html',\n    styleUrls: ['./wall-canvas-row.component.scss']\n})\nexport class WallCanvasRowComponent {\n    @Input() row: any; // todo add type\n\n    trackColumnsBy(index): number {\n        return index;\n    }\n\n    trackBricksBy(index, item) {\n        return item.hash;\n    }\n}\n","export class SelectedBrickEvent {\n    constructor(public selectedBrickIds: string[]) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {SelectedBrickEvent} from './events/selected-brick.event';\nimport {IFocusedBrick} from './interfaces/focused-brick.interface';\nimport {IWallUiApi} from './interfaces/ui-api.interface';\nimport {IFocusContext} from './interfaces/wall-component/wall-component-focus-context.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {RemoveBricksEvent} from '../../plugins/core/events/remove-bricks.event';\nimport {MoveBrickEvent} from '../../plugins/core/events/move-brick.event';\nimport {TurnBrickIntoEvent} from '../../plugins/core/events/turn-brick-into.event';\nimport {BeforeChangeEvent} from '../../plugins/core/events/before-change.event';\n\n@Injectable()\nexport class WallViewModel implements IWallUiApi {\n    wallModel: IWallModel = null;\n\n    events: Subject<any> = new Subject();\n\n    // UI\n    focusedBrick: IFocusedBrick = null;\n    selectedBricks: string[] = [];\n    isMediaInteractionEnabled$: Observable<boolean> = new BehaviorSubject(true);\n    canvasLayout: IWallRow[] = [];\n\n    private wallModelSubscription: Subscription;\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    getCanvasLayout(): IWallRow[] {\n        const rows = [];\n\n        this.wallModel.api.core.traverse((row) => {\n            rows.push({\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brickConfig) => {\n                            const component = this.brickRegistry.get(brickConfig.tag).component;\n\n                            return {\n                                id: brickConfig.id,\n                                hash: brickConfig.tag + brickConfig.id,\n                                state: brickConfig.state,\n                                component\n                            };\n                        })\n                    };\n                })\n            });\n        });\n\n        return rows;\n    }\n\n    initialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        // initialize view core API\n        const coreApi = [\n            // SELECTION\n            'getSelectedBrickIds',\n            'selectBrick',\n            'selectBricks',\n            'addBrickToSelection',\n            'removeBrickFromSelection',\n            'unSelectBricks',\n\n            // FOCUS\n            'focusOnBrickId',\n            'getFocusedBrickId',\n            'focusOnPreviousTextBrick',\n            'focusOnNextTextBrick',\n\n            // REMOVE BRICK\n            'removeBrick',\n            'removeBricks',\n\n            // BEHAVIOUR\n            'enableMediaInteraction',\n            'disableMediaInteraction',\n\n            // CLIENT\n            'subscribe'\n        ].reduce((result, methodName) => {\n            if (this[methodName].bind) {\n                result[methodName] = this[methodName].bind(this);\n            } else {\n                result[methodName] = this[methodName];\n            }\n\n            return result;\n        }, {});\n\n        // protect API from extending\n        Object.seal(coreApi);\n\n        // register methods on model itself\n        this.wallModel.registerApi('ui', coreApi);\n\n        this.wallModelSubscription = this.wallModel.api.core.subscribe((event) => {\n            if (event instanceof TurnBrickIntoEvent) {\n                this.focusOnBrickId(event.brickId);\n            }\n\n            if (event instanceof MoveBrickEvent) {\n                this.unSelectBricks();\n            }\n\n            if (event instanceof RemoveBricksEvent) {\n                if (!this.wallModel.api.core.getBricksCount()) {\n                    this.wallModel.api.core.addDefaultBrick();\n                }\n            }\n\n            if (!(event instanceof BeforeChangeEvent)) {\n                this.canvasLayout = this.getCanvasLayout();\n            }\n        });\n\n        this.canvasLayout = this.getCanvasLayout();\n    }\n\n    /**\n     * @public-api\n     */\n    selectBrick(brickId: string): void {\n        this.selectedBricks = [brickId];\n\n        this.focusedBrick = null;\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    selectBricks(brickIds: string[]) {\n        if (JSON.stringify(brickIds) !== JSON.stringify(this.selectedBricks)) {\n            this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(brickIds);\n\n            const selectedBricksClone = this.selectedBricks.slice(0);\n\n            this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n        }\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    addBrickToSelection(brickId: string): void {\n        const selectedBrickIds = this.selectedBricks.slice(0);\n\n        selectedBrickIds.push(brickId);\n\n        this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(selectedBrickIds);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    removeBrickFromSelection(brickId: string): void {\n        const brickIdIndex = this.selectedBricks.indexOf(brickId);\n\n        this.selectedBricks.splice(brickIdIndex, 1);\n\n        this.selectedBricks = this.selectedBricks.slice(0);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    unSelectBricks(): void {\n        this.selectedBricks = [];\n\n        this.dispatch(new SelectedBrickEvent([]));\n    }\n\n    /**\n     * @public-api\n     */\n    getSelectedBrickIds(): string[] {\n        return this.selectedBricks.slice(0);\n    }\n\n    /**\n     * @public-api\n     */\n    getFocusedBrickId(): string {\n        return this.focusedBrick && this.focusedBrick.id;\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnBrickId(brickId: string, focusContext?: IFocusContext): void {\n        this.focusedBrick = {\n            id: brickId,\n            context: focusContext\n        };\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnPreviousTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(brickId);\n\n        if (previousTextBrickId) {\n            this.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnNextTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(brickId);\n\n        if (nextTextBrickId) {\n            this.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    enableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(true);\n    }\n\n    /**\n     * @public-api\n     */\n    disableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(false);\n    }\n\n    /**\n     * @public-api\n     */\n    subscribe(callback: any): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBrick(brickId: string) {\n        this.removeBricks([brickId]);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBricks(brickIds: string[]) {\n        const currentBrickIds = this.wallModel.api.core.getBrickIds();\n\n        if (currentBrickIds.length > 1) {\n            this.wallModel.api.core.removeBricks(brickIds);\n        } else if (currentBrickIds.length === 1) {\n            const brickSnapshot = this.wallModel.api.core.getBrickSnapshot(currentBrickIds[0]);\n\n            if (brickSnapshot.tag !== 'text' || brickSnapshot.state.text) {\n                this.wallModel.api.core.removeBricks(brickIds);\n            } else {\n                this.focusOnBrickId(currentBrickIds[0]);\n            }\n        }\n    }\n\n    // canvas interaction\n    onCanvasClick() {\n        // check whether the last element is empty text brick\n        // which is inside one column row\n\n        const rowCount = this.wallModel.api.core.getRowCount();\n        const brickIds = this.wallModel.api.core.getBrickIds();\n\n        if (rowCount > 0\n            && this.wallModel.api.core.getColumnCount(rowCount - 1) === 1\n            && brickIds.length) {\n            const lastBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(brickIds[brickIds.length - 1]);\n\n            if (lastBrickSnapshot.tag === 'text' && !lastBrickSnapshot.state.text) {\n                this.focusOnBrickId(lastBrickSnapshot.id);\n            } else {\n                this.wallModel.api.core.addDefaultBrick();\n            }\n        } else {\n            this.wallModel.api.core.addDefaultBrick();\n        }\n    }\n\n    // canvas interaction\n    onBrickStateChanged(brickId: string, brickState: any): void {\n        this.wallModel.api.core.updateBrickState(brickId, brickState);\n    }\n\n    reset() {\n        this.wallModelSubscription.unsubscribe();\n\n        this.wallModelSubscription = null;\n\n        this.focusedBrick = null;\n\n        this.unSelectBricks();\n    }\n\n    private dispatch(e) {\n        this.events.next(e);\n    }\n}\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {WallViewModel} from './wall-view.model';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallConfiguration} from './interfaces/wall-configuration.interface';\n\n@Component({\n    selector: 'wall',\n    templateUrl: './wall.component.html',\n    styleUrls: ['./wall.component.scss'],\n    providers: [\n        WallViewModel\n    ]\n})\nexport class WallComponent implements OnChanges, OnDestroy {\n    @Input() model: IWallModel = null;\n    @Input() configuration: IWallConfiguration = null;\n\n    constructor(public wallViewModel: WallViewModel) {\n    }\n\n    // click on empty space\n    onCanvasClick() {\n        this.wallViewModel.onCanvasClick();\n    }\n\n    onBrickStateChanged(event) {\n        this.wallViewModel.onBrickStateChanged(event.brickId, event.brickState);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.model) {\n            if (!changes.model.firstChange) {\n                this.cleanUp();\n            }\n\n            this.initialize();\n        }\n    }\n\n    ngOnDestroy() {\n        this.cleanUp();\n    }\n\n    private initialize() {\n        // initialize view model by business model\n        this.wallViewModel.initialize(this.model);\n    }\n\n    private cleanUp() {\n        this.wallViewModel.reset();\n    }\n}\n","export class StartWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class StopWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class WorkInProgressEvent {\n    constructor(public mousePosition: {\n        clientX: number;\n        clientY: number;\n    }) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {StartWorkingEvent} from './events/start-working.event';\nimport {StopWorkingEvent} from './events/stop-working.event';\nimport {WorkInProgressEvent} from './events/work-in-progress.event';\n\n@Injectable()\nexport class TowCoordinator {\n    events: Subject<any> = new Subject();\n\n    // start track when slave start working\n    private isSlaveWorking = false;\n\n    constructor() {\n        document.addEventListener('dragover', (event: DragEvent) => {\n            if (this.isSlaveWorking) {\n                event.preventDefault();\n\n                event.dataTransfer.dropEffect = 'move';\n\n                this.slaveWorkProgress(event.clientX, event.clientY);\n            }\n        });\n    }\n\n    slaveStartWorking(id: string) {\n        this.isSlaveWorking = true;\n\n        this.events.next(new StartWorkingEvent(id));\n    }\n\n    slaveWorkProgress(clientX: number, clientY: number) {\n        this.events.next(new WorkInProgressEvent({\n            clientX,\n            clientY\n        }));\n    }\n\n    slaveStopWorking(id) {\n        this.isSlaveWorking = false;\n\n        this.events.next(new StopWorkingEvent(id));\n    }\n}\n","import {Directive, ElementRef, HostListener, Input, OnInit, Renderer2} from '@angular/core';\nimport {TowCoordinator} from '../tow-coordinator.service';\n\n// Notify Tow Coordinator about drag operation\n@Directive({selector: '[tow-slave]'})\nexport class TowSlaveDirective implements OnInit {\n    @Input('tow-slave') id;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private towCoordinator: TowCoordinator) {\n    }\n\n    @HostListener('dragstart', ['$event'])\n    dragStart(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n\n        event.dataTransfer.setData('FAKE', JSON.stringify({}));\n\n        this.towCoordinator.slaveStartWorking(this.id);\n    }\n\n    @HostListener('drag', ['$event'])\n    drag(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n    }\n\n    @HostListener('dragend', ['$event'])\n    dragEnd(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.towCoordinator.slaveStopWorking(this.id);\n    }\n\n    ngOnInit() {\n        this.renderer2.setAttribute(this.el.nativeElement, 'draggable', 'true');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {TowCoordinator} from './tow-coordinator.service';\n\n@Injectable()\nexport class TowService {\n    events: Subject<any> = new Subject();\n\n    constructor(private towCoordinator: TowCoordinator) {\n        this.towCoordinator.events.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {Directive, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\nimport {ISpotInfo, ISpotPosition, ISpotSize} from '../interfaces/distance-to-spot.interface';\nimport {SpotId} from '../interfaces/spot-id.type';\nimport {RadarCoordinator} from '../radar-coordinator.service';\n\n@Directive({\n    selector: '[spot]'\n})\nexport class SpotDirective implements OnInit, OnDestroy {\n    @Input() spot: any;\n\n    id: SpotId = String(Math.random());\n\n    constructor(private radarCoordinator: RadarCoordinator,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.radarCoordinator.register(this.id, this);\n    }\n\n    getInfo(): ISpotInfo {\n        return {\n            id: this.id,\n            data: this.getData(),\n            size: this.getSize(),\n            position: this.getPosition()\n        };\n    }\n\n    getData(): any {\n        return this.spot;\n    }\n\n    getSize(): ISpotSize {\n        return {\n            width: this.el.nativeElement.offsetWidth,\n            height: this.el.nativeElement.offsetHeight\n        };\n    }\n\n    getPosition(): ISpotPosition {\n        const offsets = this.el.nativeElement.getBoundingClientRect();\n\n        return {\n            x: offsets.left,\n            y: offsets.top\n        };\n    }\n\n    ngOnDestroy() {\n        this.radarCoordinator.unRegister(this.id);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {SpotDirective} from './directive/spot.directive';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {Radar} from './radar.service';\n\n@NgModule({\n    exports: [SpotDirective],\n    declarations: [SpotDirective],\n    providers: [\n        Radar,\n        RadarCoordinator\n    ]\n})\nexport class RadarModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TowCoordinator} from './tow-coordinator.service';\nimport {TowSlaveDirective} from './tow-slave/tow-slave.directive';\nimport {TowService} from './tow.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        TowSlaveDirective\n    ],\n\n    exports: [\n        TowSlaveDirective\n    ],\n\n    providers: [\n        TowService,\n        TowCoordinator\n    ]\n})\nexport class TowModule {\n}\n","import {Component} from '@angular/core';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Component({\n    templateUrl: './pick-out-area.component.html',\n    styleUrls: ['./pick-out-area.component.scss']\n})\nexport class PickOutAreaComponent {\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    initialize(pickOutAreaModel: PickOutAreaModel) {\n        this.pickOutAreaModel = pickOutAreaModel;\n    }\n}\n","export class EndPickOut {\n}\n","export class PickOutItems {\n    constructor(public ids: string[]) {\n    }\n}\n","export class StartPickOut {\n}\n","export class StopPickOut {\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {EndPickOut} from './events/end-pick-out.event';\nimport {PickOutItems} from './events/pick-out-items.event';\nimport {StartPickOut} from './events/start-pick-out.event';\nimport {StopPickOut} from './events/stop-pick-out.event';\nimport {Radar} from '../radar/radar.service';\nimport {SpotModel} from '../radar/spot.model';\n\n@Injectable()\nexport class PickOutCoordinator {\n    changes: Subject<any> = new Subject();\n\n    private isPickOutAllowed = true;\n\n    constructor(private radar: Radar) {\n    }\n\n    disablePickOut() {\n        this.isPickOutAllowed = false;\n    }\n\n    enablePickOut() {\n        this.isPickOutAllowed = true;\n    }\n\n    stopPickOut() {\n        this.changes.next(new StopPickOut());\n    }\n\n    startPickOut() {\n        this.changes.next(new StartPickOut());\n    }\n\n    pickOutChanged(range) {\n        const pickOutSpotModels = this.radar.filterSpots((spot: SpotModel) => spot.data.isPickOutItem);\n\n        pickOutSpotModels.forEach((spotModel) => {\n            spotModel.updateInfo();\n        });\n\n        this.changes.next(new PickOutItems(this.getSelectedItemIds(range, pickOutSpotModels)));\n    }\n\n    endPickOut() {\n        this.changes.next(new EndPickOut());\n    }\n\n    private getSelectedItemIds(range, pickOutsItem: SpotModel[]): string[] {\n        return pickOutsItem\n            .filter((pickOutItem) => {\n                return (range.x < (pickOutItem.position.x + pickOutItem.size.width) &&\n                    (range.x + range.width) > pickOutItem.position.x &&\n                    (range.y + range.height) > pickOutItem.position.y &&\n                    range.y < (pickOutItem.position.y + pickOutItem.size.height));\n            })\n            .map((pickOutItem) => pickOutItem.data.brickId);\n    }\n}\n","export const MOUSE_LEFT_KEY_CODE = 0;\n","export class PickOutAreaModel {\n    // brick ids allow to define should we render area component\n    initialBrickId: string;\n    currentBrickId: string;\n\n    // calculate pick out area width and height\n    initialX: number;\n    initialY: number;\n\n    // store last client X and Y position before scroll event\n    previousClientX: number;\n    previousClientY: number;\n\n    // coordinates inside scrollable container\n    x: number;\n    y: number;\n\n    // coordinates related to viewport\n    clientX: number;\n    clientY: number;\n\n    // size of pick out area\n    width: number;\n    height: number;\n\n    isPickOutProcessInitialized = false;\n\n    scrollableContainer: HTMLElement;\n\n    private minimumMoveDistance = 5;\n\n    constructor(scrollableContainer: HTMLElement,\n                x: number,\n                y: number,\n                overBrickId: string) {\n        this.scrollableContainer = scrollableContainer;\n\n        this.initialX = x;\n        this.initialY = y;\n\n        this.x = x;\n        this.y = y;\n\n        this.initialBrickId = overBrickId;\n        this.currentBrickId = overBrickId;\n    }\n\n    recalculatePositionAndSize() {\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        const pageX = this.previousClientX - scrollContextRect.left;\n        const pageY = this.previousClientY - scrollContextRect.top + this.scrollableContainer.scrollTop;\n\n        this.updatePickOutAreaPositionAndSize(pageX, pageY);\n    }\n\n    updateCurrentClientPosition(clientX: number, clientY: number) {\n        this.previousClientX = clientX;\n        this.previousClientY = clientY;\n\n        this.recalculatePositionAndSize();\n    }\n\n    updateCurrentBrickId(brickId: string): void {\n        this.currentBrickId = brickId;\n    }\n\n    canInitiatePickOutProcess(): boolean {\n        return this.isMouseMovedEnough() &&\n            (!this.currentBrickId || this.currentBrickId !== this.initialBrickId);\n    }\n\n    initiatePickOutProcess() {\n        this.isPickOutProcessInitialized = true;\n    }\n\n    private updatePickOutAreaPositionAndSize(x: number, y: number) {\n        // update x position and width\n        if (x < this.initialX) {\n            this.width = this.initialX - x;\n\n            this.x = x;\n        } else {\n            this.width = Math.abs(x - this.x);\n        }\n\n        // update y position and height\n        if (y < this.initialY) {\n            this.height = this.initialY - y;\n\n            this.y = y;\n        } else {\n            this.height = Math.abs(y - this.y);\n        }\n\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        this.clientX = scrollContextRect.left + this.x;\n        this.clientY = scrollContextRect.top + this.y - this.scrollableContainer.scrollTop;\n    }\n\n    private isMouseMovedEnough(): boolean {\n        return this.width > this.minimumMoveDistance ||\n            this.height > this.minimumMoveDistance;\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener,\n    Inject,\n    Injector,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {PickOutCoordinator} from '../pick-out-coordinator.service';\nimport {MOUSE_LEFT_KEY_CODE} from '../pick-out.constant';\nimport {IPickOutAreaConfig} from './pick-out-area-config.interface';\nimport {PickOutAreaComponent} from './pick-out-area.component';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Directive({\n    selector: '[pick-out-area]'\n})\nexport class PickOutAreaDirective implements OnInit, OnDestroy {\n    @Input('pick-out-area') config: IPickOutAreaConfig;\n\n    doc: any = null;\n\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    selectionRangeComponentRef: ComponentRef<PickOutAreaComponent> = null;\n\n    onMouseUpBound: () => any;\n    onMouseMoveBound: (event: MouseEvent) => void;\n    onSelectionStartBound: () => any;\n    onContainerScrollBound: () => any;\n\n    previousClientX: number;\n    previousClientY: number;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private pickOutCoordinator: PickOutCoordinator,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private zone: NgZone,\n                private el: ElementRef,\n                private injector: Injector) {\n        this.doc = doc;\n    }\n\n    ngOnInit() {\n        this.onMouseUpBound = this.onMouseUp.bind(this);\n        this.onMouseMoveBound = this.onMouseMove.bind(this);\n        this.onSelectionStartBound = this.onSelectionStart.bind(this);\n        this.onContainerScrollBound = this.onContainerScroll.bind(this);\n\n        this.doc.addEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.addEventListener('mouseup', this.onMouseUpBound);\n        this.doc.addEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.addEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    triggerPickOutChanged() {\n        this.pickOutCoordinator.pickOutChanged({\n            x: this.pickOutAreaModel.clientX,\n            y: this.pickOutAreaModel.clientY,\n            width: this.pickOutAreaModel.width,\n            height: this.pickOutAreaModel.height\n        });\n    }\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        if (event.button === MOUSE_LEFT_KEY_CODE && !this.isMouseOverDraggableElement(event.clientX, event.clientY)) {\n            const scrollContextRect = this.config.scrollableContainer.getBoundingClientRect();\n            const pageX = event.clientX - scrollContextRect.left;\n            const pageY = event.clientY - scrollContextRect.top + this.config.scrollableContainer.scrollTop;\n\n            const brickIdOverMouse = this.findBrickIdByCoordinate(event.clientX, event.clientY);\n\n            this.pickOutAreaModel = new PickOutAreaModel(\n                this.config.scrollableContainer,\n                pageX,\n                pageY,\n                brickIdOverMouse\n            );\n        }\n    }\n\n    onMouseMove(event: any) {\n        if (this.pickOutAreaModel) {\n            this.pickOutAreaModel.updateCurrentClientPosition(event.clientX, event.clientY);\n            this.pickOutAreaModel.updateCurrentBrickId(this.findBrickIdByCoordinate(event.clientX, event.clientY));\n\n            if (this.pickOutAreaModel.isPickOutProcessInitialized) {\n                event.preventDefault();\n\n                this.triggerPickOutChanged();\n            } else if (this.pickOutAreaModel.canInitiatePickOutProcess()) {\n                this.pickOutAreaModel.initiatePickOutProcess();\n\n                this.onStartPicKOut();\n            }\n        }\n    }\n\n    onMouseUp() {\n        this.onStopPickOut();\n    }\n\n    onContainerScroll() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.pickOutAreaModel.recalculatePositionAndSize();\n\n            this.triggerPickOutChanged();\n        }\n    }\n\n    onSelectionStart(e) {\n        // does not allow select text during pick out process\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            e.preventDefault();\n        }\n    }\n\n    renderRangeComponent() {\n        // https://medium.com/@caroso1222/angular-pro-tip-how-to-dynamically-create-components-in-body-ba200cc289e6\n\n        // 1. Create a component reference from the component\n        this.selectionRangeComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PickOutAreaComponent)\n            .create(this.injector);\n\n        this.selectionRangeComponentRef.instance.initialize(this.pickOutAreaModel);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.selectionRangeComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.selectionRangeComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n\n        this.config.scrollableContainer.appendChild(domElem);\n    }\n\n    removeRangeComponent() {\n        this.appRef.detachView(this.selectionRangeComponentRef.hostView);\n        this.selectionRangeComponentRef.destroy();\n        this.selectionRangeComponentRef = null;\n    }\n\n    onStartPicKOut() {\n        this.pickOutCoordinator.startPickOut();\n\n        this.doc.activeElement.blur();\n\n        this.renderRangeComponent();\n\n        this.clearSelection();\n    }\n\n    onStopPickOut() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.removeRangeComponent();\n\n            this.pickOutCoordinator.endPickOut();\n        }\n\n        this.pickOutAreaModel = null;\n    }\n\n    ngOnDestroy() {\n        this.doc.removeEventListener('mouseup', this.onMouseUpBound);\n        this.doc.removeEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.removeEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.removeEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    private clearSelection() {\n        window.getSelection().empty();\n    }\n\n    private findBrickIdByCoordinate(pageX: number, clientY: number): string {\n        let currentElement = document.elementFromPoint(pageX, clientY);\n\n        while (currentElement && currentElement.tagName !== 'WALL-CANVAS-BRICK') {\n            currentElement = currentElement.parentElement;\n        }\n\n        if (currentElement) {\n            // there is canvas bricks\n            return currentElement\n                .getElementsByClassName('wall-canvas-brick__wrapper')[0]\n                .getAttribute('id');\n        } else {\n            return null;\n        }\n    }\n\n    private isMouseOverDraggableElement(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement &&\n        !(currentElement as HTMLElement).draggable &&\n        !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\n\n@Injectable()\nexport class PickOutService {\n    events: Subject<any> = new Subject();\n\n    constructor(private pickOutHandlerService: PickOutCoordinator) {\n        this.pickOutHandlerService.changes.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    enablePickOut() {\n        this.pickOutHandlerService.enablePickOut();\n    }\n\n    disablePickOut() {\n        this.pickOutHandlerService.disablePickOut();\n    }\n\n    stopPickOut() {\n        this.pickOutHandlerService.stopPickOut();\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PickOutAreaComponent} from './pick-out-area/pick-out-area.component';\nimport {PickOutAreaDirective} from './pick-out-area/pick-out-area.directive';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\nimport {PickOutService} from './pick-out.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        PickOutAreaComponent,\n        PickOutAreaDirective\n    ],\n\n    providers: [\n        PickOutService,\n        PickOutCoordinator\n    ],\n\n    exports: [\n        PickOutAreaDirective\n    ],\n\n    entryComponents: [\n        PickOutAreaComponent\n    ]\n})\n\nexport class PickOutModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {WallModelFactory} from './factory/wall-model.factory';\nimport {BrickRegistry} from './registry/brick-registry.service';\nimport {MatIconModule} from '@angular/material';\nimport {PlaceholderRendererModule} from '../modules/components/placeholder-renderer/placeholder-renderer.module';\nimport {WallCanvasBrickComponent} from './components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component';\nimport {WallCanvasRowComponent} from './components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component';\nimport {WallCanvasComponent} from './components/wall-canvas/wall-canvas.component';\nimport {WallComponent} from './components/wall/wall.component';\nimport {TowModule} from '../modules/tow/tow.module';\nimport {RadarModule} from '../modules/radar/radar.module';\nimport {PickOutModule} from '../modules/pick-out/pick-out.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PickOutModule,\n        TowModule,\n        RadarModule,\n        PlaceholderRendererModule,\n        MatIconModule\n    ],\n\n    declarations: [\n        WallComponent,\n        WallCanvasComponent,\n        WallCanvasRowComponent,\n        WallCanvasBrickComponent\n    ],\n\n    exports: [\n        WallComponent\n    ]\n})\nexport class WallModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: WallModule,\n            providers: [\n                BrickRegistry,\n                WallModelFactory\n            ]\n        };\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'w-brick-input-placeholder',\n    templateUrl: './brick-input-placeholder.component.html',\n    styleUrls: ['./brick-input-placeholder.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BrickInputPlaceholderComponent implements OnInit {\n    @Input() text: string;\n    @Input() icon: string;\n    @Input() loading: boolean;\n    @Output() selected: EventEmitter<MouseEvent> = new EventEmitter();\n\n    constructor() {\n    }\n\n    onClick(event: MouseEvent) {\n        this.selected.emit(event);\n    }\n\n    ngOnInit() {\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'w-loading-wrapper',\n    templateUrl: './loading-wrapper.component.html',\n    styleUrls: ['./loading-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingWrapperComponent implements OnInit {\n    @Input() message: string;\n\n    ngOnInit() {\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {BrickInputPlaceholderComponent} from './brick-input-placeholder/brick-input-placeholder.component';\nimport {LoadingWrapperComponent} from './loading-wrapper/loading-wrapper.component';\nimport {MatIconModule} from '@angular/material';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    exports: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    declarations: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    providers: []\n})\nexport class HelperComponentsModule {\n}\n","export const WALL = {\n    MODES: {\n        EDIT: 'edit',\n        READ: 'READ'\n    }\n};\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {IWallModel, IWallPlugin} from '../../wall/wall';\n\nexport class CopyPlugin implements IWallPlugin {\n    name: 'copy';\n    version: '0.0.0';\n\n    doc: Document = null;\n\n    onCopyBound: any;\n\n    wallModel: IWallModel;\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n\n        this.onCopyBound = this.onCopy.bind(this);\n\n        this.doc.addEventListener('copy', this.onCopyBound);\n    }\n\n    onWallInitialize(model: IWallModel) {\n        this.wallModel = model;\n    }\n\n    onCopy(e: ClipboardEvent) {\n        const selectedTextRepresentation = this.getSelectedTextRepresentation();\n\n        if (selectedTextRepresentation.length) {\n            e.preventDefault();\n\n            this.addToClipboard(e, selectedTextRepresentation);\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('click', this.onCopy);\n    }\n\n    private addToClipboard(e: ClipboardEvent, str: string) {\n        e.clipboardData.setData('text/plain', str);\n    }\n\n    private getSelectedTextRepresentation(): string {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        return selectedBrickIds\n            .map((selectedBrickId) => this.wallModel.api.core.getBrickTextRepresentation(selectedBrickId))\n            .map((textRepresentation) => textRepresentation.trim())\n            .join('\\n');\n    }\n}\n","export const UNDO_REDO_API_NAME = 'undo';\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BeforeChangeEvent, IWallDefinition, IWallModel, IWallPlugin, SetPlanEvent} from '../../wall/wall';\nimport {IUndoRedoApi} from './undo-redo-api.interface';\nimport {UNDO_REDO_API_NAME} from './undo-redo.constant';\n\nexport class UndoRedoPlugin implements IWallPlugin {\n    name: 'undoredo';\n    version: '0.0.0';\n\n    private wallModel: IWallModel;\n\n    private doc: Document;\n\n    private onUndoKeyHandlerBound: any;\n\n    private apiSubscription: Subscription;\n\n    private processingUndo = false;\n\n    private undoPlanStack: IWallDefinition[] = [];\n    private redoPlanStack: IWallDefinition[] = [];\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.wallModel.registerApi(UNDO_REDO_API_NAME, {\n            undo: this.undo.bind(this),\n            undoSize: this.undoSize.bind(this),\n            redo: this.redo.bind(this),\n            redoSize: this.redoSize.bind(this),\n            clear: this.clear.bind(this)\n        } as IUndoRedoApi);\n\n        this.apiSubscription = this.wallModel.api.core.subscribe((e) => {\n            this.wallModelEventHandler(e);\n        });\n\n        this.onUndoKeyHandlerBound = this.onUndoKeyHandler.bind(this);\n\n        this.doc.addEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    onWallPluginDestroy() {\n        this.apiSubscription.unsubscribe();\n\n        this.doc.removeEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    private onUndoKeyHandler(e: KeyboardEvent) {\n        const CTRL_KEY = 90;\n\n        if (e.keyCode === CTRL_KEY && e.ctrlKey) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (e.shiftKey) {\n                this.redo();\n            } else {\n                this.undo();\n            }\n        }\n    }\n\n    private undoSize(): number {\n        return this.undoPlanStack.length;\n    }\n\n    private redoSize(): number {\n        return this.redoPlanStack.length;\n    }\n\n    private wallModelEventHandler(e: any): void {\n        if (!this.processingUndo) {\n            if (e instanceof BeforeChangeEvent && (e as BeforeChangeEvent).beforeEventType !== SetPlanEvent) {\n                this.undoPlanStack.push(this.wallModel.api.core.getPlan());\n\n                this.redoPlanStack = [];\n            }\n        }\n    }\n\n    private redo() {\n        const redoPlan = this.redoPlanStack.pop();\n\n        if (redoPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(redoPlan);\n\n            this.undoPlanStack.push(redoPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private undo() {\n        const previousPlan = this.undoPlanStack.pop();\n\n        if (previousPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(previousPlan);\n\n            this.redoPlanStack.push(previousPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private clear() {\n        this.undoPlanStack = [];\n        this.redoPlanStack = [];\n    }\n}\n","export const TOW = {\n    dropTypes: {\n        horizontal: 'horizontal',\n        vertical: 'vertical'\n    },\n\n    dropSides: {\n        left: 'left',\n        right: 'right',\n        top: 'top',\n        bottom: 'bottom'\n    }\n};\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {Radar} from '../../modules/radar/radar.service';\nimport {SpotModel} from '../../modules/radar/spot.model';\nimport {PickOutService} from '../../modules/pick-out/pick-out.service';\nimport {StartPickOut} from '../../modules/pick-out/events/start-pick-out.event';\nimport {PickOutItems} from '../../modules/pick-out/events/pick-out-items.event';\nimport {EndPickOut} from '../../modules/pick-out/events/end-pick-out.event';\nimport {IWallPlugin} from '../../wall/model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../wall/model/interfaces/wall-model.interface';\nimport {TowService} from '../../modules/tow/tow.service';\nimport {TOW} from '../../modules/tow/tow.constant';\nimport {StopWorkingEvent} from '../../modules/tow/events/stop-working.event';\nimport {WorkInProgressEvent} from '../../modules/tow/events/work-in-progress.event';\nimport {StartWorkingEvent} from '../../modules/tow/events/start-working.event';\nimport {PlaceholderRenderer} from '../../modules/components/placeholder-renderer/placeholder-renderer.service';\n\nexport interface ISelectionOptions {\n    shouldUnselectBrick: (e: MouseEvent) => boolean;\n}\n\nexport class SelectionPlugin implements IWallPlugin {\n    name: 'selection';\n    version: '0.0.0';\n\n    doc: Document;\n\n    isMouseSelection = false;\n    onMouseDownBound: any;\n    onKeyDownHandlerBound: any;\n\n    wallModel: IWallModel;\n\n    private pickOutService: PickOutService;\n    private radar: Radar;\n    private towService: TowService;\n    private placeholderRenderer: PlaceholderRenderer;\n\n    private nearestBrickToDrop: {\n        spot: SpotModel;\n        type: string;\n        side: string;\n    };\n    private placeholderHeight = 2;\n    private isEnableDropZoneHighlight = false;\n\n    private towServiceSubscription: Subscription;\n    private pickOutServiceSubscription: Subscription;\n\n    private options: ISelectionOptions;\n\n    constructor(private injector: Injector, options?: ISelectionOptions) {\n        // extension point for client to prevent brick un-selections\n        this.options = {\n            shouldUnselectBrick: () => true,\n            ...options\n        };\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.doc = this.injector.get(DOCUMENT);\n        this.pickOutService = this.injector.get(PickOutService);\n        this.radar = this.injector.get(Radar);\n        this.placeholderRenderer = this.injector.get(PlaceholderRenderer);\n        this.towService = this.injector.get(TowService);\n\n        this.onMouseDownBound = this.onMouseDown.bind(this);\n        this.onKeyDownHandlerBound = this.onKeyDownHandler.bind(this);\n\n        this.doc.addEventListener('mousedown', this.onMouseDownBound);\n        this.doc.addEventListener('keydown', this.onKeyDownHandlerBound);\n\n        // listen to picked out items and select appropriate bricks\n        this.pickOutServiceSubscription = this.pickOutService.subscribe((e) => {\n            if (e instanceof StartPickOut) {\n                this.isMouseSelection = true;\n\n                this.wallModel.api.ui.disableMediaInteraction();\n            }\n\n            if (e instanceof PickOutItems) {\n                this.wallModel.api.ui.selectBricks(e.ids);\n            }\n\n            if (e instanceof EndPickOut) {\n                this.wallModel.api.ui.enableMediaInteraction();\n            }\n        });\n\n        // listen for draggable operation and move bricks accordingly\n        this.towServiceSubscription = this.towService.subscribe((e) => {\n            if (e instanceof StartWorkingEvent) {\n                if (this.wallModel.api.core.getBrickSnapshot(e.slaveId)) {\n                    this.isEnableDropZoneHighlight = true;\n                } else {\n                    this.isEnableDropZoneHighlight = false;\n                }\n\n                this.nearestBrickToDrop = null;\n                this.placeholderRenderer.clear();\n            }\n\n            if (e instanceof StopWorkingEvent && this.nearestBrickToDrop) {\n                if (this.isEnableDropZoneHighlight) {\n                    let movedBrickIds = [];\n\n                    const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n                    if (selectedBrickIds.length > 1) {\n                        movedBrickIds = movedBrickIds.concat(selectedBrickIds);\n                    } else {\n                        movedBrickIds.push(e.slaveId);\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.horizontal) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.top) {\n                            this.wallModel.api.core.moveBrickBeforeBrickId(\n                                movedBrickIds,\n                                this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.bottom) {\n                            this.wallModel.api.core.moveBrickAfterBrickId(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.vertical) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.left) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.left\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.right) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.right\n                            );\n                        }\n                    }\n\n                    this.nearestBrickToDrop = null;\n\n                    this.placeholderRenderer.clear();\n                }\n            }\n\n            if (e instanceof WorkInProgressEvent) {\n                if (this.isEnableDropZoneHighlight) {\n                    const spots = this.radar.filterSpots((spot: SpotModel) => spot.data.isBeacon);\n\n                    let nearestSpot: SpotModel;\n\n                    spots.forEach((spot) => {\n                        spot.updateInfo();\n\n                        if (!nearestSpot) {\n                            nearestSpot = spot;\n                        } else {\n                            const currentSpotMinimalDistance = spot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            if (currentSpotMinimalDistance < nearestSpotMinimalDistance) {\n                                nearestSpot = spot;\n                            }\n                        }\n                    });\n\n                    if (nearestSpot) {\n                        const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                            e.mousePosition.clientX,\n                            e.mousePosition.clientY\n                        );\n\n                        if (nearestSpotMinimalDistance < 50) {\n                            this.nearestBrickToDrop = {\n                                spot: nearestSpot,\n                                side: null,\n                                type: null\n                            };\n\n                            if (e.mousePosition.clientX < nearestSpot.position.x) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.left;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.right;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x &&\n                                e.mousePosition.clientX < nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.horizontal;\n\n                                const centerYPosition = nearestSpot.position.y + (nearestSpot.size.height / 2);\n\n                                this.nearestBrickToDrop.side = e.mousePosition.clientY < centerYPosition ?\n                                    TOW.dropSides.top : TOW.dropSides.bottom;\n                            }\n\n                            this.renderPlaceholder();\n                        } else {\n                            this.nearestBrickToDrop = null;\n\n                            this.placeholderRenderer.clear();\n                        }\n                    } else {\n                        this.nearestBrickToDrop = null;\n\n                        this.placeholderRenderer.clear();\n                    }\n                }\n            }\n        });\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (!this.isMouseOverDraggableBox(e.clientX, e.clientY) && this.options.shouldUnselectBrick(e)) {\n            this.wallModel.api.ui.unSelectBricks();\n        }\n    }\n\n    onKeyDownHandler(e: KeyboardEvent) {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n        const firstSelectedBrickId = selectedBrickIds[0];\n        const lastSelectedBrickId = selectedBrickIds[selectedBrickIds.length - 1];\n\n        if (e.key === 'Delete' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.unSelectBricks();\n\n            this.wallModel.api.ui.removeBricks(selectedBrickIds);\n        }\n\n        if (e.key === 'Enter' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.focusOnBrickId(firstSelectedBrickId);\n\n            this.wallModel.api.ui.unSelectBricks();\n        }\n\n        if (e.key === 'ArrowUp' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const previousBrickId = this.wallModel.api.core.getPreviousBrickId(lastSelectedBrickId);\n\n            if (previousBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(previousBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(previousBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'ArrowDown' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const nextBrickId = this.wallModel.api.core.getNextBrickId(lastSelectedBrickId);\n\n            if (nextBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && !this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(nextBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(nextBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'Escape') {\n            e.preventDefault();\n\n            if (selectedBrickIds.length) {\n                this.wallModel.api.ui.unSelectBricks();\n            }\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('mousedown', this.onMouseDownBound);\n        this.doc.removeEventListener('keydown', this.onKeyDownHandlerBound);\n\n        this.wallModel = null;\n        this.pickOutServiceSubscription.unsubscribe();\n        this.towServiceSubscription.unsubscribe();\n    }\n\n    private isMouseOverDraggableBox(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement && !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n\n    private isDownSelectionDirection(): boolean {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        const bricksCount = selectedBrickIds.length;\n\n        const lastBrickId = selectedBrickIds[bricksCount - 1];\n        const penultimateBrickId = selectedBrickIds[bricksCount - 2];\n\n        return this.wallModel.api.core.isBrickAheadOf(penultimateBrickId, lastBrickId);\n    }\n\n    private renderPlaceholder() {\n        let placeholderX;\n        let placeholderY;\n        let placeholderSize;\n        let placeholderIsHorizontal;\n\n        const spot = this.nearestBrickToDrop.spot;\n        const side = this.nearestBrickToDrop.side;\n        const type = this.nearestBrickToDrop.type;\n\n        if (type === TOW.dropTypes.horizontal) {\n            placeholderX = spot.position.x;\n            placeholderSize = spot.size.width;\n\n            if (side === TOW.dropSides.top) {\n                placeholderY = spot.position.y - this.placeholderHeight;\n            }\n\n            if (side === TOW.dropSides.bottom) {\n                placeholderY = spot.position.y + spot.size.height;\n            }\n\n            placeholderIsHorizontal = true;\n        }\n\n        if (type === TOW.dropTypes.vertical) {\n            placeholderY = spot.position.y;\n            placeholderSize = spot.size.height;\n            placeholderIsHorizontal = false;\n\n            if (side === TOW.dropSides.left) {\n                placeholderX = spot.position.x;\n            }\n\n            if (side === TOW.dropSides.right) {\n                placeholderX = spot.position.x + spot.size.width;\n            }\n        }\n\n        this.placeholderRenderer.render(placeholderX, placeholderY, placeholderSize, placeholderIsHorizontal);\n    }\n}\n","export const DIVIDER_BRICK_TAG = 'divider';\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'divider-brick',\n    templateUrl: './divider-brick.component.html',\n    styleUrls: ['./divider-brick.component.scss']\n})\n\nexport class DividerBrickComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {BrickRegistry} from '../../wall/wall';\nimport {DividerBrickComponent} from './component/divider-brick.component';\nimport {DIVIDER_BRICK_TAG} from './divider-brick.constant';\n\n@NgModule({\n    exports: [DividerBrickComponent],\n    declarations: [DividerBrickComponent],\n    entryComponents: [DividerBrickComponent]\n})\nexport class DividerBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: DIVIDER_BRICK_TAG,\n            component: DividerBrickComponent,\n            name: 'Divider',\n            description: 'Visually divide blocks'\n        });\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IBaseTextState} from './base-text-state.interface';\n\nexport class TextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return (this.brickSnapshot.state as IBaseTextState).text;\n    }\n}\n","export class DeepLeftNodeChild {\n    child: Node;\n\n    constructor(root: Node) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[0];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class DeepRightNodeChild {\n    child: Node;\n\n    constructor(root: HTMLElement) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[currentNode.childNodes.length - 1];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class FirstSubStringNode {\n    firstLevelSubStringNodes: Node[] = [];\n\n    private readonly subString: string;\n\n    constructor(private root: HTMLElement, private subStringHTML: string) {\n        // get text representation\n        this.subString = this.getSubStringTextContent();\n\n        if (subStringHTML.length !== 0) {\n            if (this.root.childNodes.length === 1) {\n                this.firstLevelSubStringNodes = Array.from(this.root.childNodes);\n\n            } else if (this.root.childNodes.length > 1) {\n                this.firstLevelSubStringNodes = this.findFirstLevelSubStringNodes();\n            }\n        }\n    }\n\n    private findFirstLevelSubStringNodes() {\n        let i = this.root.childNodes.length - 1;\n        let currentNode = this.root.childNodes[i];\n        let text = '';\n        const firstLevelSubStringNodes = [];\n\n        while (currentNode && !text.includes(this.subString)) {\n            text = currentNode.textContent + text;\n\n            firstLevelSubStringNodes.push(currentNode);\n\n            i--;\n            currentNode = this.root.childNodes[i];\n        }\n\n        return firstLevelSubStringNodes.reverse();\n    }\n\n    private getSubStringTextContent(): string {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.subStringHTML;\n\n        return pNode.textContent;\n    }\n}\n","export class CaretStartEndPosition {\n    constructor(private el: Node) {\n    }\n\n    isCaretAtEnd(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setStart(selRange.endContainer, selRange.endOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n\n    isCaretAtStart(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setEnd(selRange.startContainer, selRange.startOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n}\n","export class CursorLeftCoordinate {\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n    }\n\n    get(): number {\n        const div = this.createElementClone(this.targetNode);\n        const span = document.createElement('SPAN');\n\n        div.innerHTML = this.leftText;\n        span.innerHTML = this.rightText;\n\n        div.appendChild(span);\n\n        // make sure element stay at top left corner\n        div.style.position = 'absolute';\n        div.style.top = '0';\n        div.style.left = '0';\n        div.style.padding = '0';\n        div.style.margin = '0';\n\n        document.body.appendChild(div);\n\n        const leftCoordinate = span.offsetLeft;\n\n        div.remove();\n\n        return leftCoordinate;\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class CursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n        if (leftText === '' && rightText === '') {\n            this.isOnFirstLine = true;\n            this.isOnLastLine = true;\n        } else {\n            // http://jsbin.com/qifezupu/31/edit?js,output\n\n            const div = this.createElementClone(this.targetNode);\n\n            document.body.appendChild(div);\n\n            const span1 = document.createElement('SPAN');\n            const span2 = document.createElement('SPAN');\n\n            div.appendChild(span1);\n            div.appendChild(span2);\n\n            span1.innerText = 'a';\n\n            const lh = span1.offsetHeight;\n\n            span1.innerHTML = leftText;\n            span2.innerHTML = rightText;\n\n            this.isOnFirstLine = span1.textContent.length === 0 ||\n                (span1.offsetHeight === lh && span1.getBoundingClientRect().top === span2.getBoundingClientRect().top);\n\n            this.isOnLastLine = span2.offsetHeight === lh;\n\n            div.remove();\n        }\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class PlaceCaretToPosition {\n    constructor(private el: Node, private position: number) {\n    }\n\n    place() {\n        const range = document.createRange();\n        const sel = window.getSelection();\n\n        range.setStart(this.el, this.position);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n","/**\n * Returns string which does not contains empty nodes inside\n */\nexport class StringWithoutEmptyNodes {\n    constructor(private str: string) {\n    }\n\n    get() {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.str;\n\n        if (!pNode.textContent.trim().length) {\n            // there are no text itself, so replace any tags to empty string\n            return '';\n        } else {\n            return this.str;\n        }\n    }\n}\n","export const FOCUS_INITIATOR = 'text-supporting-brick';\n\nexport const ENTER_KEY = 'Enter';\nexport const NUMPUB_ENTER_KEY = 'NumpadEnter';\nexport const ENTER_KEY_CODE_ANDROID = 13;\nexport const DELETE_KEY = 'Delete';\nexport const BACK_SPACE_KEY = 'Backspace';\nexport const BACK_SPACE_KEY_CODE_ANDROID = 8;\nexport const LEFT_KEY = 'ArrowLeft';\nexport const TOP_KEY = 'ArrowUp';\nexport const RIGHT_KEY = 'ArrowRight';\nexport const BOTTOM_KEY = 'ArrowDown';\nexport const ESCAPE_KEY = 27;\nexport const TAB_KEY = 'Tab';\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class BottomKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        if (this.baseTextBrickComponent.isCaretAtLastLine()) {\n            e.preventDefault();\n\n            const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    bottomKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {BaseTextBrickComponent} from '../base-text-brick.component';\n\nexport class EnterKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const sel = window.getSelection();\n\n        const splittedText = this.baseTextBrickComponent.getSplittedText(\n            sel.focusOffset,\n            sel.focusNode\n        );\n\n        splittedText.left = this.baseTextBrickComponent.cleanUpText(splittedText.left);\n        splittedText.right = this.baseTextBrickComponent.cleanUpText(splittedText.right);\n\n        if (splittedText.left.length) {\n            if (splittedText.right.length) {\n                // text is splitted to two part\n                this.splitBrickForTwoPart(splittedText.left, splittedText.right);\n            } else {\n                // cursor at end - text's exist - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        } else {\n            if (splittedText.right.length) {\n                // cursor at start, text exists - just create new line at top, do not move focus\n                this.addEmptyTextBrickBefore();\n            } else {\n                // there are no text at all - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        }\n    }\n\n    private splitBrickForTwoPart(left: string, right: string) {\n        this.addBrickAfter(right);\n\n        this.baseTextBrickComponent.setTextState(left);\n        this.baseTextBrickComponent.saveCurrentState();\n    }\n\n    private addEmptyTextBrickBefore() {\n        const newTextState = {\n            text: '',\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        this.baseTextBrickComponent.wallModel.api.core\n            .addBrickBeforeBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // scroll browser view to element\n        this.baseTextBrickComponent.editor.nativeElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'start'\n        });\n    }\n\n    private addEmptyBrickAfter() {\n        // cursor at end - text's exist - create new and focus on it\n        this.addBrickAfter('');\n    }\n\n    private addBrickAfter(text: string) {\n        const newTextState = {\n            text: text,\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        const addedBrick = this.baseTextBrickComponent.wallModel.api.core\n            .addBrickAfterBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // wait one tick for component rendering\n        setTimeout(() => {\n            this.baseTextBrickComponent.wallUiApi.focusOnBrickId(addedBrick.id);\n        });\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class LeftKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                leftKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi\n            .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class RightKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                rightKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class TopKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n        if (this.baseTextBrickComponent.isCaretAtFirstLine()) {\n            e.preventDefault();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    topKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallModel.api.ui\n                .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {DeepLeftNodeChild} from '../../modules/utils/deep-left-node-child';\nimport {DeepRightNodeChild} from '../../modules/utils/deep-right-node-child';\nimport {FirstSubStringNode} from '../../modules/utils/first-sub-string-node';\nimport {CaretStartEndPosition} from '../../modules/utils/node/caret-start-end-position';\nimport {CursorLeftCoordinate} from '../../modules/utils/node/cursor-left-coordinate';\nimport {CursorPositionInLine} from '../../modules/utils/node/cursor-position-in-line';\nimport {PlaceCaretToPosition} from '../../modules/utils/node/place-caret-to-position';\nimport {StringWithoutEmptyNodes} from '../../modules/utils/node/string-without-empty-nodes';\nimport {IFocusContext, IOnWallFocus, IOnWallStateChange, IWallComponent, IWallModel, IWallUiApi} from '../../wall/wall';\nimport {\n    BACK_SPACE_KEY,\n    BACK_SPACE_KEY_CODE_ANDROID,\n    BOTTOM_KEY,\n    DELETE_KEY,\n    ENTER_KEY,\n    ENTER_KEY_CODE_ANDROID,\n    ESCAPE_KEY,\n    FOCUS_INITIATOR,\n    LEFT_KEY,\n    NUMPUB_ENTER_KEY,\n    RIGHT_KEY,\n    TAB_KEY,\n    TOP_KEY\n} from './base-text-brick.constant';\nimport {IBaseTextState} from './base-text-state.interface';\nimport {BottomKeyHandler} from './keypress-handlers/bottom-key.handler';\nimport {EnterKeyHandler} from './keypress-handlers/enter-key.handler';\nimport {LeftKeyHandler} from './keypress-handlers/left-key.handler';\nimport {RightKeyHandler} from './keypress-handlers/right-key.handler';\nimport {TopKeyHandler} from './keypress-handlers/top-key.handler';\n\nenum LineType {\n    first = 'FIRST',\n    last = 'LAST'\n}\n\nexport interface ICursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n}\n\nexport abstract class BaseTextBrickComponent implements OnInit, OnDestroy, IOnWallStateChange, IOnWallFocus, IWallComponent {\n    @Input() id: string;\n    @Input() state: IBaseTextState;\n    @Input() wallModel: IWallModel;\n\n    @Output() stateChanges: EventEmitter<IBaseTextState> = new EventEmitter();\n\n    @ViewChild('editor') editor: ElementRef;\n\n    keypressHandlers = {\n        top: new TopKeyHandler(this),\n        enter: new EnterKeyHandler(this),\n        left: new LeftKeyHandler(this),\n        right: new RightKeyHandler(this),\n        bottom: new BottomKeyHandler(this)\n    };\n\n    wallUiApi: IWallUiApi;\n\n    scope: IBaseTextState = {\n        text: '',\n        tabs: 0\n    };\n\n    maxTabNumber = 3;\n\n    textChange: Subject<string> = new Subject();\n\n    textChangeSubscription: Subscription;\n\n    onPasteBound: (e: ClipboardEvent) => any;\n\n    ngOnInit() {\n        if (this.state && this.state.text !== this.scope.text) {\n            this.setTextState(this.state.text);\n        }\n\n        this.scope.tabs = this.state.tabs || 0;\n\n        this.onPasteBound = this.onPaste.bind(this);\n\n        this.editor.nativeElement.addEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription = this.textChange.subscribe(() => {\n            this.setTextState(this.scope.text);\n            this.saveCurrentState();\n        });\n\n        this.wallUiApi = this.wallModel.api.ui;\n    }\n\n    onWallStateChange(newState: IBaseTextState) {\n        this.scope.tabs = this.state.tabs || this.scope.tabs;\n\n        if (newState && newState.text !== this.scope.text) {\n            this.setTextState(newState.text);\n        }\n    }\n\n    ngOnDestroy() {\n        this.editor.nativeElement.removeEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription.unsubscribe();\n    }\n\n    onPaste(e: ClipboardEvent) {\n        e.preventDefault();\n\n        const textArr = e.clipboardData.getData('text/plain')\n            .split('\\n')\n            .map((str) => str.trim())\n            .filter((str) => str.length);\n\n        if (textArr.length === 1) {\n            document.execCommand('insertHTML', false, textArr[0]);\n        } else if (textArr.length > 1) {\n            // todo: add interface for UI api\n            textArr.reverse().forEach((text) => this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text', {text}));\n        }\n    }\n\n    onTextChange() {\n        this.textChange.next(this.scope.text);\n    }\n\n    // general handler of all key events\n    onKeyPress(e: KeyboardEvent) {\n        if (this.noMetaKeyIsPressed(e)) {\n            if (e.code === TOP_KEY) {\n                this.topKeyPressed(e);\n            }\n\n            if (e.code === BOTTOM_KEY) {\n                this.bottomKeyPressed(e);\n            }\n\n            if (e.code === LEFT_KEY && this.isCaretAtStart()) {\n                this.leftKeyPressed(e);\n            }\n\n            if (e.code === RIGHT_KEY && this.isCaretAtEnd()) {\n                this.rightKeyPressed(e);\n            }\n\n            if (e.code === ENTER_KEY || e.keyCode === ENTER_KEY_CODE_ANDROID || e.code === NUMPUB_ENTER_KEY) {\n                this.enterKeyPressed(e);\n            }\n\n            if (e.keyCode === ESCAPE_KEY) {\n                this.escapeKeyPressed(e);\n            }\n\n            if ((e.code === BACK_SPACE_KEY || e.keyCode === BACK_SPACE_KEY_CODE_ANDROID) && !this.isTextSelected()) {\n                this.backSpaceKeyPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text.length && this.isCaretAtEnd() && !this.isTextSelected()) {\n                this.concatWithNextTextSupportingBrick(e);\n            }\n\n            if (e.code === TAB_KEY && this.isCaretAtStart()) {\n                this.onTabPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text === '') {\n                this.onDeleteAndFocusToNext(e);\n            }\n        }\n    }\n\n    proxyToKeyHandler(keyHandlerName: string, e: KeyboardEvent) {\n        this.keypressHandlers[keyHandlerName].execute(e);\n    }\n\n    // key handler\n    topKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('top', e);\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('bottom', e);\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('enter', e);\n    }\n\n    leftKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('left', e);\n    }\n\n    rightKeyPressed(e) {\n        this.proxyToKeyHandler('right', e);\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        // do nothing\n    }\n\n    onTabPressed(e: KeyboardEvent) {\n        e.preventDefault();\n\n        this.increaseTab();\n        this.saveCurrentState();\n    }\n\n    backSpaceKeyPressed(e: KeyboardEvent) {\n        if (this.isCaretAtStart()) {\n            if (this.scope.tabs) {\n                this.decreaseTab();\n                this.saveCurrentState();\n            } else {\n                if (this.scope.text.length) {\n                    this.concatWithPreviousTextSupportingBrick(e);\n                } else {\n                    this.onDeleteAndFocusToPrevious(e);\n                }\n            }\n        }\n    }\n\n    // end key handlers\n\n    isCaretAtFirstLine(): boolean {\n        return this.getCursorPositionInLine().isOnFirstLine;\n    }\n\n    isCaretAtLastLine(): boolean {\n        return this.getCursorPositionInLine().isOnLastLine;\n    }\n\n    getCaretLeftCoordinate(): number {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return (new CursorLeftCoordinate(leftRightText.left, leftRightText.right, this.editor.nativeElement)).get();\n    }\n\n    getCursorPositionInLine(): ICursorPositionInLine {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return new CursorPositionInLine(leftRightText.left, leftRightText.right, this.editor.nativeElement);\n    }\n\n    concatWithPreviousTextSupportingBrick(e) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        if (previousTextBrickId) {\n            e.preventDefault();\n\n            const previousBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(previousTextBrickId);\n\n            this.wallModel.api.core.updateBrickState(previousTextBrickId, {\n                text: this.cleanUpText(previousBrickSnapshot.state.text) + this.scope.text\n            });\n\n            // wait for component re-rendering\n            setTimeout(() => {\n                const focusContext: IFocusContext = {\n                    initiator: FOCUS_INITIATOR,\n                    details: {\n                        concatText: true,\n                        concatenationText: this.scope.text\n                    }\n                };\n\n                this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n\n                // remove only after focus will be established\n                // that prevents flickering on mobile\n                this.wallUiApi.removeBrick(this.id);\n            });\n        }\n    }\n\n    concatWithNextTextSupportingBrick(e: Event) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            e.preventDefault();\n\n            const nextTextBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(nextTextBrickId);\n\n            const concatenationText = nextTextBrickSnapshot.state.text || '';\n\n            this.setTextState(this.scope.text + concatenationText);\n\n            this.saveCurrentState();\n\n            this.wallModel.api.core.removeBrick(nextTextBrickId);\n\n            setTimeout(() => {\n                this.placeCaretBaseOnConcatenatedText(concatenationText);\n            }, 10);\n        }\n    }\n\n    onDeleteAndFocusToPrevious(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        this.wallUiApi.removeBrick(this.id);\n\n        if (previousTextBrickId) {\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    onDeleteAndFocusToNext(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            this.wallUiApi.removeBrick(this.id);\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        return {\n            left: this.scope.text.slice(0, offset),\n            right: this.scope.text.slice(offset) || ''\n        };\n    }\n\n    // key handler end\n    onWallFocus(context?: IFocusContext): void {\n        if (this.editor.nativeElement !== document.activeElement) {\n            // focus by API call\n            this.editor.nativeElement.focus();\n\n            if (context && context.initiator === FOCUS_INITIATOR) {\n                if (context.details.deletePreviousText) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.concatText) {\n                    this.placeCaretBaseOnConcatenatedText(context.details.concatenationText);\n                }\n\n                if (context.details.leftKey) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.rightKey) {\n                    this.placeCaretAtStart();\n                }\n\n                if (context.details.bottomKey || context.details.topKey) {\n                    const line = context.details.bottomKey ? LineType.first : LineType.last;\n\n                    this.placeCaretAtLeftCoordinate(context.details.caretLeftCoordinate, line);\n                }\n            }\n        }\n    }\n\n    setTextState(text: string = '') {\n        this.scope.text = this.cleanUpText(text);\n    }\n\n    increaseTab() {\n        if (this.scope.tabs < this.maxTabNumber) {\n            this.scope.tabs++;\n        }\n    }\n\n    decreaseTab() {\n        if (this.scope.tabs > 0) {\n            this.scope.tabs--;\n        }\n    }\n\n    saveCurrentState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    // caret helpers\n    isTextSelected(): boolean {\n        return !window.getSelection().isCollapsed;\n    }\n\n    placeCaretAtStart(): void {\n        const deepLeftNode = new DeepLeftNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeStart(deepLeftNode.child);\n    }\n\n    placeCaretAtEnd(): void {\n        const rightNode = new DeepRightNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeEnd(rightNode.child);\n    }\n\n    placeCaretAtNodeStart(el: Node) {\n        this.placeCaretAtNodeToPosition(el, 0);\n    }\n\n    placeCaretAtNodeEnd(el: Node) {\n        this.placeCaretAtNodeToPosition(el, el.textContent.length);\n    }\n\n    placeCaretAtNodeToPosition(el: Node, position: number) {\n        (new PlaceCaretToPosition(el, position)).place();\n    }\n\n    // find the node which contains concatenated text and position in this node where cursor should be placed\n    placeCaretBaseOnConcatenatedText(concatenationText: string) {\n        if (concatenationText !== '') {\n            // find first level nodes for the text that was concatenated\n            const subStringNodes = new FirstSubStringNode(\n                this.editor.nativeElement,\n                concatenationText\n            );\n\n            // first level node which contains concatenated text\n            const firstLevelSubStringNode = subStringNodes.firstLevelSubStringNodes[0];\n\n            if (firstLevelSubStringNode) {\n                let focusNode;\n                let position;\n\n                if (firstLevelSubStringNode.nodeType === Node.TEXT_NODE) {\n                    // if first concatenated node is TEXT_NODE it might\n                    // be automatically concatenated with previous existing TEXT_NODE\n                    focusNode = firstLevelSubStringNode;\n\n                    // find text content for first concatenated TEXT_NODE\n                    const p = document.createElement('P');\n                    p.innerHTML = concatenationText;\n                    const firstLevelSubStringTextContent = p.childNodes[0].textContent;\n\n                    // finally find cursor position\n                    position = focusNode.textContent.length - firstLevelSubStringTextContent.length;\n                } else {\n                    focusNode = new DeepLeftNodeChild(firstLevelSubStringNode).child;\n\n                    position = 0;\n                }\n\n                this.placeCaretAtNodeToPosition(focusNode, position);\n            }\n        }\n    }\n\n    placeCaretAtLeftCoordinate(leftCoordinate: number, line: string) {\n        // todo: find the way to set caret based on coordinate number\n        if (line === LineType.last) {\n            this.placeCaretAtEnd();\n        } else {\n            this.placeCaretAtStart();\n        }\n    }\n\n    isCaretAtStart(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtStart();\n    }\n\n    isCaretAtEnd(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtEnd();\n    }\n\n    // remove all unnecessary tags\n    cleanUpText(text: string): string {\n        return (new StringWithoutEmptyNodes(text)).get();\n    }\n\n    private noMetaKeyIsPressed(e): boolean {\n        return !((e.shiftKey || e.altKey || e.ctrlKey || e.metaKey));\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'header-brick',\n    templateUrl: './header-brick.component.html',\n    styleUrls: ['./header-brick.component.scss']\n})\nexport class HeaderBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Header';\n}\n","import {Directive, ElementRef, HostListener, Input, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Directive({\n    selector: '[contenteditable]',\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: ContenteditableDirective, multi: true}\n    ]\n})\nexport class ContenteditableDirective implements ControlValueAccessor {\n    @Input() propValueAccessor: string = 'textContent';\n\n    private onChange: (value: string) => void;\n    private onTouched: () => void;\n    private removeDisabledState: () => void;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    }\n\n    @HostListener('input')\n    callOnChange() {\n        if (typeof this.onChange === 'function') {\n            this.onChange(this.elementRef.nativeElement[this.propValueAccessor]);\n        }\n    }\n\n    @HostListener('blur')\n    callOnTouched() {\n        if (typeof this.onTouched === 'function') {\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Writes a new value to the element.\n     * This method will be called by the forms API to write\n     * to the view when programmatic (model -> view) changes are requested.\n     *\n     * See: [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor#members)\n     */\n    writeValue(value: any): void { // todo add type\n        const normalizedValue = value === null ? '' : value;\n\n        this.renderer.setProperty(this.elementRef.nativeElement, this.propValueAccessor, normalizedValue);\n    }\n\n    /**\n     * Registers a callback function that should be called when\n     * the control's value changes in the UI.\n     *\n     * This is called by the forms API on initialization so it can update\n     * the form model when values propagate from the view (view -> model).\n     */\n    registerOnChange(fn: () => void): void {\n        this.onChange = fn;\n    }\n\n    /**\n     * Registers a callback function that should be called when the control receives a blur event.\n     * This is called by the forms API on initialization so it can update the form model on blur.\n     */\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * This function is called by the forms API when the control status changes to or from \"DISABLED\".\n     * Depending on the value, it should enable or disable the appropriate DOM element.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n            this.removeDisabledState = this.renderer\n                .listen(this.elementRef.nativeElement, 'keydown', this.listenerDisabledState);\n        } else {\n            if (this.removeDisabledState) {\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n                this.removeDisabledState();\n            }\n        }\n    }\n\n    private listenerDisabledState(e: KeyboardEvent) {\n        e.preventDefault();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {ContenteditableDirective} from './contenteditable.directive';\n\n@NgModule({\n    imports: [FormsModule],\n    exports: [ContenteditableDirective],\n    declarations: [ContenteditableDirective]\n})\nexport class ContenteditableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {HeaderBrickComponent} from './component/header-brick.component';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule\n    ],\n    exports: [HeaderBrickComponent],\n    declarations: [HeaderBrickComponent],\n    entryComponents: [HeaderBrickComponent]\n})\nexport class HeaderBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'header',\n            component: HeaderBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Header',\n            description: 'A large header with margins'\n        });\n    }\n}\n","import {InjectionToken} from '@angular/core';\nimport {IWallFileUploader} from './file-uploader.types';\n\nexport const WALL_FILE_UPLOADER = new InjectionToken<IWallFileUploader>('IWallFileUploader');\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applyImageSrc() {\n        this.notify({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onFileChange(event: any) {\n        this.notify({\n            file: event.target.files[0]\n        });\n    }\n\n    notify(data) {\n        this.ngxStickyModalRef.close(data);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applyImageSrc();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {WALL_FILE_UPLOADER} from '../../../modules/file-uploader/file-uploader.token';\nimport {IWallFileUploader, IWallFileUploaderResult} from '../../../modules/file-uploader/file-uploader.types';\nimport {IResizeData} from '../../../modules/resizable/resizable.directive';\nimport {Base64ToFile} from '../../../modules/utils/base64-to-file';\nimport {Guid} from '../../../modules/utils/guid';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {ImgBrickState, ImgBrickStateMetadata} from '../img-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\nimport {IOnWallFocus} from '../../../wall/components/wall/interfaces/wall-component/on-wall-focus.interface';\n\n@Component({\n    selector: 'img-brick',\n    templateUrl: './img-brick.component.html',\n    styleUrls: ['./img-brick.component.scss']\n})\nexport class ImgBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: ImgBrickState;\n\n    @Output() stateChanges: EventEmitter<ImgBrickState> = new EventEmitter();\n\n    @ViewChild('image') image: ElementRef;\n\n    scope: ImgBrickState = {\n        src: '',\n        metadata: null,\n        width: null\n    };\n\n    isSrcBase64 = false;\n\n    lastWidth: number;\n\n    imageSrcPlaceholderRef: StickyModalRef;\n\n    resizable = {\n        resize: this.onResize.bind(this),\n        resizeStart: this.onResizeStart.bind(this),\n        resizeEnd: this.onResizeEnd.bind(this)\n    };\n\n    constructor(private renderer: Renderer2,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService,\n                @Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ImgBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        if (this.scope.src) {\n            this.isSrcBase64 = this.isBase64(this.scope.src);\n\n            if (!this.scope.width) {\n                this.setUpImageWidth();\n            }\n\n            if (this.isSrcBase64) {\n                this.processBase64ImgSrc();\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    // resize callbacks\n    onResize(resizeData: IResizeData) {\n        this.scope.width = this.lastWidth + resizeData.offset;\n    }\n\n    onResizeStart() {\n        this.lastWidth = this.scope.width;\n    }\n\n    onResizeEnd() {\n        this.save();\n    }\n\n    applyImageSrc(imageSrc: string, metadata?: ImgBrickStateMetadata): Promise<any> {\n        return this.isImage(imageSrc)\n            .then(() => {\n                this.scope.src = imageSrc;\n                this.isSrcBase64 = false;\n\n                if (metadata) {\n                    this.scope.metadata = metadata;\n                }\n\n                this.save();\n\n                return this.setUpImageWidth();\n            })\n            .catch(() => {\n                alert('Please enter valid url');\n            });\n    }\n\n    applyImageFile(imgFile: File): Promise<void> {\n        return (new ImgEncoder(imgFile)).getBase64Representation().then((imgBase64) => {\n            return this.applyImageSrc(imgBase64).then(() => {\n                return this.processBase64ImgSrc();\n            });\n        });\n    }\n\n    processBase64ImgSrc(): Promise<void> {\n        return this.uploadImage().then((uploadInfo) => {\n            return this.applyImageSrc(uploadInfo.downloadURL, {\n                path: uploadInfo.path\n            });\n        }, () => {\n        });\n    }\n\n    showPanel() {\n        if (!this.imageSrcPlaceholderRef) {\n            this.imageSrcPlaceholderRef = this.ngxStickyModalService.open({\n                component: InputContextComponent,\n                positionStrategy: {\n                    name: StickyPositionStrategy.flexibleConnected,\n                    options: {\n                        relativeTo: this.el.nativeElement\n                    }\n                },\n                position: {\n                    originX: 'center',\n                    originY: 'bottom',\n                    overlayX: 'center',\n                    overlayY: 'top'\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            });\n\n            this.imageSrcPlaceholderRef.result.then((result) => {\n                this.imageSrcPlaceholderRef = null;\n\n                if (result.src) {\n                    this.applyImageSrc(result.src);\n                } else {\n                    this.applyImageFile(result.file);\n                }\n            }, () => {\n                this.imageSrcPlaceholderRef = null;\n            });\n        }\n    }\n\n    isBase64(str: string) {\n        str = str.replace(/^data:image\\/(png|jpg|jpeg);base64,/, '');\n\n        try {\n            return btoa(atob(str)) === str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    private uploadImage(): Promise<IWallFileUploaderResult> {\n        if (!this.wallFileUploader.canUploadFile()) {\n            return Promise.reject();\n        }\n\n        const fileName = (new Guid()).get();\n        const imgFile = (new Base64ToFile(this.scope.src, fileName)).getFile();\n\n        return this.wallFileUploader.upload(this.id, imgFile);\n    }\n\n    private setUpImageWidth(): Promise<void> {\n        return this.loadImage(this.scope.src).then(() => {\n            this.scope.width = this.image.nativeElement.width;\n\n            this.save();\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private loadImage(src: string) {\n        return this.isImage(src);\n    }\n\n    private isImage(src): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n\n            img.onload = () => {\n                resolve();\n            };\n\n            img.onerror = () => {\n                reject();\n            };\n\n            img.src = src;\n        });\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {IWallFileUploader, WALL_FILE_UPLOADER} from '../../modules/file-uploader/file-uploader';\nimport {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\n@Injectable()\nexport class ImgModel {\n    constructor(@Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader) {\n    }\n\n    remove(brickSnapshot: IBrickSnapshot): Promise<any> {\n        const state: ImgBrickState = brickSnapshot.state;\n\n        if (state.src && state.metadata && state.metadata.path) {\n            return this.wallFileUploader.remove(state.metadata.path);\n        }\n\n        return Promise.resolve();\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\nexport class ImgBrickTextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `img!${(this.brickSnapshot.state as ImgBrickState).src}`;\n    }\n}\n","import {Component, EventEmitter, HostListener, Input, Output} from '@angular/core';\n\n@Component({\n    template: `<span [ngClass]=\"customClassName\"></span>`\n})\nexport class ResizableHandlerComponent {\n    @Input() customClassName: string;\n    @Output() mouseDownEvent: EventEmitter<MouseEvent> = new EventEmitter();\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        this.mouseDownEvent.emit(event);\n    }\n}\n","export const LEFT_HANDLER_CLASS = 'left-handler';\nexport const RIGHT_HANDLER_CLASS = 'right-handler';\n","import {DOCUMENT} from '@angular/common';\nimport {ComponentFactoryResolver, Directive, Inject, Input, NgZone, OnInit, ViewContainerRef} from '@angular/core';\nimport {ComponentRef} from '@angular/core/src/linker/component_factory';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {LEFT_HANDLER_CLASS, RIGHT_HANDLER_CLASS} from './resizable.const';\n\nexport interface IResizeData {\n    xInitial: number;\n    xCurrent: number;\n\n    offset: number;\n\n    isLeftDirection: boolean;\n    isRightDirection: boolean;\n}\n\n/**\n * @description\n * 1. dynamically add left and right handlers\n * 2. allow to show/hide handlers\n * 3. call callback, where to pass\n *  - distance on which handlers is moved\n *  - handler type (left of right)\n */\n@Directive({\n    selector: '[wResizable]'\n})\nexport class ResizableDirective implements OnInit {\n    @Input() wResizable: {\n        resize: (resizeData: IResizeData) => void;\n        resizeStart: (resizeData: IResizeData) => void;\n        resizeEnd: (resizeData: IResizeData) => void;\n    };\n\n    private resizeData: IResizeData = null;\n\n    constructor(private el: ViewContainerRef,\n                private zone: NgZone,\n                private cfr: ComponentFactoryResolver,\n                @Inject(DOCUMENT) private doc) {\n    }\n\n    ngOnInit() {\n        const leftHandler = this.createHandler(LEFT_HANDLER_CLASS);\n        const rightHandler = this.createHandler(RIGHT_HANDLER_CLASS);\n\n        leftHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, true);\n        });\n\n        rightHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, false);\n        });\n\n        this.doc.addEventListener('mousemove', (event: MouseEvent) => {\n            if (this.resizeData) {\n                this.resizeData.xCurrent = event.clientX;\n\n                if (this.resizeData.isLeftDirection) {\n                    this.resizeData.offset = this.resizeData.xInitial - this.resizeData.xCurrent;\n                } else if (this.resizeData.isRightDirection) {\n                    this.resizeData.offset = this.resizeData.xCurrent - this.resizeData.xInitial;\n                }\n\n                if (this.wResizable.resize) {\n                    this.wResizable.resize(this.resizeData);\n                }\n            }\n        });\n\n        this.doc.addEventListener('mouseup', () => {\n            if (this.wResizable.resizeEnd) {\n                this.wResizable.resizeEnd(this.resizeData);\n            }\n\n            this.resizeData = null;\n        });\n    }\n\n    private createHandler(customClassName: string): ComponentRef<ResizableHandlerComponent> {\n        const handler = this.el.createComponent(\n            this.cfr.resolveComponentFactory(ResizableHandlerComponent)\n        );\n\n        handler.instance.customClassName = customClassName;\n\n        return handler;\n    }\n\n    private mouseDownHandler(e: MouseEvent, isLeftDirection: boolean) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.resizeData = {\n            xInitial: e.clientX,\n            xCurrent: e.clientX,\n            offset: 0,\n            isLeftDirection,\n            isRightDirection: !isLeftDirection\n        };\n\n        if (this.wResizable.resizeStart) {\n            this.wResizable.resizeStart(this.resizeData);\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {ResizableDirective} from './resizable.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ResizableDirective],\n    declarations: [ResizableDirective, ResizableHandlerComponent],\n    entryComponents: [ResizableHandlerComponent]\n})\nexport class ResizableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {ImgBrickComponent} from './component/img-brick.component';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {ImgModel} from './img-brick-destructor.class';\nimport {ImgBrickState} from './img-brick-state.interface';\nimport {ImgBrickTextRepresentation} from './img-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {ResizableModule} from '../../modules/resizable/resizable.module';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {IBrickSnapshot} from '../../wall/model/interfaces/brick-snapshot.interface';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HelperComponentsModule,\n        ResizableModule,\n        TowModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [ImgBrickComponent],\n    declarations: [ImgBrickComponent, InputContextComponent],\n    entryComponents: [ImgBrickComponent, InputContextComponent],\n    providers: [\n        ImgModel\n    ]\n})\nexport class ImgBrickModule {\n    constructor(private brickRegistry: BrickRegistry,\n                private imgModel: ImgModel) {\n        this.brickRegistry.register({\n            tag: 'image',\n            component: ImgBrickComponent,\n            textRepresentation: ImgBrickTextRepresentation,\n\n            destructor: (brickSnapshot: IBrickSnapshot): Promise<void> => {\n                return this.imgModel.remove(brickSnapshot);\n            },\n\n            getBrickResourcePaths: (brickSnapshot: IBrickSnapshot) => {\n                const imageState: ImgBrickState = brickSnapshot.state;\n\n                if (imageState.metadata && imageState.metadata.path) {\n                    return [imageState.metadata.path];\n                }\n\n                return [];\n            },\n\n            name: 'Image',\n            description: 'Embed with a link'\n        });\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'quote-brick',\n    templateUrl: './quote-brick.component.html',\n    styleUrls: ['./quote-brick.component.scss']\n})\nexport class QuoteBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Quote';\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrickRegistry} from '../../wall/wall';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {QuoteBrickComponent} from './component/quote-brick.component';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ContenteditableModule\n    ],\n    exports: [QuoteBrickComponent],\n    declarations: [QuoteBrickComponent],\n    entryComponents: [QuoteBrickComponent]\n})\nexport class QuoteBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'quote',\n            component: QuoteBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Quote',\n            description: 'Capture a quote'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IOnWallFocus} from '../../../wall/wall';\nimport {IVideoBrickState} from '../video-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\n\n@Component({\n    selector: 'video-brick',\n    templateUrl: './video-brick.component.html',\n    styleUrls: ['./video-brick.component.scss']\n})\nexport class VideoBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: IVideoBrickState;\n\n    @Output() stateChanges: EventEmitter<IVideoBrickState> = new EventEmitter();\n\n    @ViewChild('iframe') iframe: ElementRef;\n\n    // ui\n    uiStates: any = {\n        initial: 'initial',\n        video: 'video'\n    };\n\n    uiState: string = this.uiStates.initial;\n\n    scope: IVideoBrickState = {\n        src: ''\n    };\n\n    videoSrcPlaceholderRef: StickyModalRef;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        if (this.state && this.state.src !== this.scope.src) {\n            this.scope.src = this.state.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallStateChange(newState: IVideoBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            this.scope.src = newState.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (this.uiState === this.uiStates.initial && !this.videoSrcPlaceholderRef) {\n            setTimeout(() => {\n                this.showVideoPanel();\n            }, 0);\n        }\n    }\n\n    applySrc(src: string) {\n        this.uiState = this.uiStates.initial;\n\n        if (src.length) {\n            const srcArray = src.split('=');\n            const youtubeId = srcArray[1];\n\n            if (youtubeId) {\n                this.scope.src = `https://www.youtube.com/embed/${youtubeId}`;\n\n                this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n\n                this.save();\n\n                this.uiState = this.uiStates.video;\n            }\n        }\n    }\n\n    showVideoPanel() {\n        this.videoSrcPlaceholderRef = this.ngxStickyModalService.open({\n            component: InputContextComponent,\n            positionStrategy: {\n                name: StickyPositionStrategy.flexibleConnected,\n                options: {\n                    relativeTo: this.el.nativeElement\n                }\n            },\n            position: {\n                originX: 'center',\n                originY: 'bottom',\n                overlayX: 'center',\n                overlayY: 'top'\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.videoSrcPlaceholderRef.result.then((result) => {\n            this.videoSrcPlaceholderRef = null;\n\n            this.applySrc(result.src);\n        }, () => {\n            this.videoSrcPlaceholderRef = null;\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IVideoBrickState} from './video-brick-state.interface';\n\nexport class VideoBrickTextRepresentationClass {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `video!${(this.brickSnapshot.state as IVideoBrickState).src}`;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {VideoBrickComponent} from './component/video-brick.component';\nimport {VideoBrickTextRepresentationClass} from './video-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [VideoBrickComponent],\n    declarations: [VideoBrickComponent, InputContextComponent],\n    entryComponents: [VideoBrickComponent, InputContextComponent]\n})\nexport class VideoBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'video',\n            component: VideoBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Video',\n            description: 'Embed from Youtube and more'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IWebBookmarkBrickState} from '../web-bookmark-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\n\n@Component({\n    selector: 'web-bookmark-brick',\n    templateUrl: './web-bookmark-brick.component.html',\n    styleUrls: ['./web-bookmark-brick.component.scss']\n})\nexport class WebBookmarkBrickComponent implements OnInit {\n    @Input() id: string;\n    @Input() state: IWebBookmarkBrickState;\n\n    @Output() stateChanges: EventEmitter<IWebBookmarkBrickState> = new EventEmitter();\n\n    scope: IWebBookmarkBrickState = {\n        src: null,\n        description: null,\n        image: {\n            height: null,\n            width: null,\n            url: null\n        },\n        logo: {\n            height: null,\n            width: null,\n            url: null\n        },\n        title: null,\n        author: null\n    };\n\n    loading = false;\n\n    constructor(private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n    }\n\n    onWallStateChange(newState: IWebBookmarkBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n        }\n    }\n\n    applySrc(src: string) {\n        if (src.length) {\n            if (this.isValidUrl(src)) {\n                this.loading = true;\n\n                this.getWebPageMetaInfo(src).then((webPageMetaInfo) => {\n                    Object.assign(this.scope, webPageMetaInfo);\n\n                    this.scope.src = src;\n\n                    this.save();\n\n                    this.loading = false;\n                }, () => {\n                    this.loading = false;\n                });\n            } else {\n                alert('Url is invalid');\n            }\n        }\n    }\n\n    showPanel() {\n        if (!this.loading) {\n            this.ngxStickyModalService.open({\n                component: InputContextComponent,\n                positionStrategy: {\n                    name: StickyPositionStrategy.flexibleConnected,\n                    options: {\n                        relativeTo: this.el.nativeElement\n                    }\n                },\n                position: {\n                    originX: 'center',\n                    originY: 'bottom',\n                    overlayX: 'center',\n                    overlayY: 'top'\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            }).result.then((result) => {\n                this.applySrc(result.src);\n            }, () => {\n            });\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private getWebPageMetaInfo(url: string): Promise<any> {\n        return fetch(`https://api.microlink.io/?url=${url}`).then((page) => {\n            return page.json().then((pageMetadata) => {\n                const {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                } = pageMetadata.data;\n\n                return {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                };\n            });\n        });\n    }\n\n    private isValidUrl(src: string): boolean {\n        let url;\n\n        try {\n            url = new URL(src);\n        } catch (e) {\n        }\n\n        return Boolean(url);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {VideoBrickTextRepresentationClass} from '../video-brick/video-brick-text-representation.class';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {WebBookmarkBrickComponent} from './component/web-bookmark-brick.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        TowModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [\n        WebBookmarkBrickComponent\n    ],\n    declarations: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    entryComponents: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    providers: []\n})\nexport class WebBookmarkBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'webbookmark',\n            component: WebBookmarkBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Web Bookmark',\n            description: 'Save a link as a visual bookmark'\n        });\n    }\n}\n","export const SUPPORTED_MODES = [\n    {\n        value: 'javascript',\n        name: 'Javascript'\n    },\n    {\n        value: 'shell',\n        name: 'Shell'\n    },\n    {\n        value: 'xml',\n        name: 'XML'\n    }\n];\n\nexport const DEFAULT_THEME = 'neo';\n","import {Component, Inject} from '@angular/core';\nimport {STICKY_MODAL_DATA, StickyModalRef} from 'ngx-sticky-modal';\n\nexport interface IModeListComponentConfig {\n    modes: { value: string, name: string }[];\n}\n\n@Component({\n    selector: 'w-mode-list-component',\n    templateUrl: './mode-list.component.html'\n})\nexport class ModeListComponent {\n    constructor(@Inject(STICKY_MODAL_DATA) public config: IModeListComponentConfig,\n                private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    onSelected(mode: string) {\n        this.ngxStickyModalRef.close(mode);\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/shell/shell';\nimport 'codemirror/mode/xml/xml';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {DEFAULT_THEME, SUPPORTED_MODES} from '../code-brick.constant';\nimport {ModeListComponent} from '../mode-list/mode-list.component';\n\nexport interface ICodeBrickState {\n    code: string;\n    mode: string;\n}\n\n@Component({\n    selector: 'code-brick',\n    templateUrl: './code-brick.component.html',\n    styleUrls: ['./code-brick.component.scss']\n})\nexport class CodeBrickComponent implements OnInit {\n    scope: ICodeBrickState = {\n        code: '',\n        mode: SUPPORTED_MODES[0].value\n    };\n\n    ui: {\n        displayModeName: string;\n    } = {\n        displayModeName: SUPPORTED_MODES[0].name\n    };\n\n    codeMirrorInstance: any;\n\n    @Input() id: string;\n    @Input() state: ICodeBrickState;\n    @ViewChild('container', {read: ElementRef}) container: ElementRef;\n    @ViewChild('mode', {read: ElementRef}) mode: ElementRef;\n\n    @Output() stateChanges: EventEmitter<ICodeBrickState> = new EventEmitter();\n\n    constructor(private ngxStickyModalService: StickyModalService,\n                private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.codeMirrorInstance = CodeMirror(this.container.nativeElement, {\n            value: ``,\n            mode: this.scope.mode,\n            theme: DEFAULT_THEME,\n            dragDrop: false,\n            scrollbarStyle: null\n        });\n\n        this.codeMirrorInstance.on('change', () => {\n            this.scope.code = this.codeMirrorInstance.getValue();\n\n            this.saveState();\n        });\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ICodeBrickState) {\n        if (newState && newState.code !== this.scope.code) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        this.codeMirrorInstance.setValue(this.scope.code);\n\n        if (this.scope.mode !== this.codeMirrorInstance.getMode().name) {\n            this.codeMirrorInstance.setOption('mode', this.scope.mode);\n        }\n\n        this.ui.displayModeName = SUPPORTED_MODES.find((mode) => mode.value === this.scope.mode).name;\n    }\n\n    saveState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    onModeSelected() {\n        const elementBoundingRect = this.mode.nativeElement.getBoundingClientRect();\n\n        const modes: any[] = SUPPORTED_MODES.map((mode) => {\n            return {\n                ...mode,\n                selected: mode.value === this.scope.mode\n            };\n        });\n\n        this.ngxStickyModalService.open({\n            component: ModeListComponent,\n            data: {modes},\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.x,\n                    clientY: elementBoundingRect.y + 35\n                }\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        }).result.then((mode: any) => {\n            Object.assign(this.scope, {\n                ...this.state,\n                mode: mode.value\n            });\n\n            this.processNewState();\n        }, () => {\n            // nothing\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {CodeBrickComponent} from './component/code-brick.component';\nimport {ModeListComponent} from './mode-list/mode-list.component';\nimport {MatButtonModule, MatListModule} from '@angular/material';\nimport {CommonModule} from '@angular/common';\nimport {WallModule} from '../../wall/wall.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        WallModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatListModule\n    ],\n    declarations: [\n        CodeBrickComponent,\n        ModeListComponent\n    ],\n    entryComponents: [\n        CodeBrickComponent,\n        ModeListComponent\n    ]\n})\nexport class CodeBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'code',\n            component: CodeBrickComponent,\n            name: 'Code',\n            description: 'Capture a code snippet'\n        });\n    }\n}\n","export const TEXT_BRICK_TAG = 'text';\n","import {ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {BrickRegistry, IBrickDefinition, IBrickSpecification} from '../../../wall/wall';\nimport {TEXT_BRICK_TAG} from '../text-brick.constant';\n\nexport interface IBricksListComponentConfig {\n    text$: Observable<string>;\n    up$: Observable<any>;\n    down$: Observable<any>;\n    enter$: Observable<any>;\n    selectedTag$: Subject<string>;\n}\n\n@Component({\n    selector: 'w-bricks-list',\n    templateUrl: './bricks-list.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BricksListComponent implements OnInit, OnDestroy {\n    selectedTag$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n    bricksList$: BehaviorSubject<IBrickSpecification[]> = new BehaviorSubject([]);\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private brickRegistry: BrickRegistry,\n                @Inject(STICKY_MODAL_DATA) public config: IBricksListComponentConfig) {\n        this.updateBricksList('');\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.config.text$.subscribe((filterText) => {\n                this.updateBricksList(filterText.slice(1));\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.up$.subscribe(() => {\n                this.onNavigationUpDownHandler(true);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.down$.subscribe(() => {\n                this.onNavigationUpDownHandler(false);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.enter$.subscribe(() => {\n                this.notifySelectedTag();\n            })\n        );\n    }\n\n    onBrickSelected(brickDescription: IBrickDefinition) {\n        this.selectedTag$.next(brickDescription.tag);\n\n        this.notifySelectedTag();\n    }\n\n    trackByFn(index, item) {\n        return item.tag;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    private notifySelectedTag() {\n        this.config.selectedTag$.next(this.selectedTag$.getValue());\n    }\n\n    private updateBricksList(filterText: string) {\n        const brickDescriptors = this.brickRegistry.getAll()\n            .filter((brickDescriptor) => {\n                if (brickDescriptor.tag === TEXT_BRICK_TAG) {\n                    return false;\n                } else {\n                    return brickDescriptor.tag.includes(filterText);\n                }\n            }).sort((a, b) => {\n                if (a.tag.startsWith(filterText)) {\n                    return -1;\n                } else if (b.tag.startsWith(filterText)) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n        if (brickDescriptors.length) {\n            this.selectedTag$.next(brickDescriptors[0].tag);\n        } else {\n            this.selectedTag$.next(null);\n        }\n\n        this.bricksList$.next(brickDescriptors);\n    }\n\n    private onNavigationUpDownHandler(isUp: boolean): void {\n        const currentSelectedTag = this.selectedTag$.getValue();\n        const currentBrickList = this.bricksList$.getValue();\n\n        if (currentSelectedTag && currentBrickList.length > 1) {\n            const currentSelectedBrickIndex = currentBrickList.findIndex((brickDescriptor) => {\n                return brickDescriptor.tag === currentSelectedTag;\n            });\n\n            let nextSelectedBrick;\n\n            if (isUp) {\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex - 1];\n\n                if (!nextSelectedBrick) {\n                    // take last brick\n                    nextSelectedBrick = currentBrickList[currentBrickList.length - 1];\n                }\n            } else {\n                // is bottom\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex + 1];\n\n                if (!nextSelectedBrick) {\n                    // take first brick\n                    nextSelectedBrick = currentBrickList[0];\n                }\n            }\n\n            this.selectedTag$.next(nextSelectedBrick.tag);\n\n            // wait until component re-renders\n            setTimeout(() => {\n                document.getElementsByClassName('w-bricks-list__selected')[0].scrollIntoView();\n            });\n        }\n    }\n}\n","export class NodeTreeSplit {\n    leftTree: HTMLElement;\n    rightTree: HTMLElement;\n\n    constructor(private root: HTMLElement,\n                private targetElement: Node, // text node\n                private offset: number) {\n        if (root === targetElement) {\n            // edge case scenario, just return root node itself\n            this.leftTree = root as HTMLElement;\n            this.rightTree = root as HTMLElement;\n        } else {\n            // get direct parent of target node\n            let parent = targetElement.parentNode;\n\n            // create left and right trees which will be returned as result\n            let rightTree = parent.cloneNode(false);\n            let leftTree = parent.cloneNode(false);\n\n            // Build Right tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            rightTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all next siblings of target node to the right tree\n            this.appendNextSiblingsToNode(rightTree, targetElement);\n\n            // Build Left tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            leftTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(0, offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all previous siblings of target node to the left tree\n            this.prependPreviousSiblingsToNode(leftTree, targetElement);\n\n            if (root === parent) {\n                // we already fully build left and right trees\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            } else {\n                // recursively build left and right trees\n                // climbing from parent node to the root node\n                let leftParentTree;\n                let rightParentTree;\n                let grandparent = parent.parentNode;\n\n                while (root.contains(grandparent) || grandparent === root) {\n                    rightParentTree = grandparent.cloneNode(false);\n                    leftParentTree = grandparent.cloneNode(false);\n\n                    // Process Left tree\n                    this.prependPreviousSiblingsToNode(leftParentTree, parent);\n\n                    leftParentTree.appendChild(leftTree);\n                    leftTree = leftParentTree;\n\n                    // Process Right tree\n                    this.appendNextSiblingsToNode(rightParentTree, parent);\n\n                    rightParentTree.prepend(rightTree);\n                    rightTree = rightParentTree;\n\n                    parent = grandparent;\n                    grandparent = grandparent.parentNode;\n                }\n\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            }\n        }\n    }\n\n    private prependPreviousSiblingsToNode(leftTree, targetNode: Node): void {\n        let previousSibling = targetNode.previousSibling;\n\n        while (previousSibling) {\n            leftTree.prepend(previousSibling.cloneNode(true));\n\n            previousSibling = previousSibling.previousSibling;\n        }\n    }\n\n    private appendNextSiblingsToNode(rightTree, targetElement: Node): void {\n        let nextSibling = targetElement.nextSibling;\n\n        while (nextSibling) {\n            rightTree.appendChild(nextSibling.cloneNode(true));\n\n            nextSibling = nextSibling.nextSibling;\n        }\n    }\n}\n","export class TreeNodeTraverse {\n    constructor(private root: HTMLElement) {\n    }\n\n    traversePostOrder(fn: (node: Node) => void) {\n        this._traversePostOrder(this.root, fn);\n    }\n\n    traversePreOrder(fn: (node: Node) => void) {\n        this._traversePreOrder(this.root, fn);\n    }\n\n    traversePostPreOrder(fn: (node: Node) => void) {\n        this._traversePostPreOrder(this.root, fn);\n    }\n\n    getPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostPreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    private _traversePostOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n\n    private _traversePreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePreOrder(childNode, fn);\n            }\n        });\n    }\n\n    private _traversePostPreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostPreOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n}\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {ITextBrickApi} from '../text-brick-api.interface';\n\nexport interface ITextContextMenuComponent {\n    api: ITextBrickApi;\n}\n\n@Component({\n    selector: 'w-text-context-menu',\n    templateUrl: './text-context-menu.component.html'\n})\nexport class TextContextMenuComponent implements OnInit {\n    @ViewChild('linkEl') linkEl: ElementRef;\n\n    ui = {\n        showLinkForm: false\n    };\n\n    constructor(@Inject(STICKY_MODAL_DATA) public config: ITextContextMenuComponent) {\n\n    }\n\n    ngOnInit() {\n        this.config.api.saveSelection();\n    }\n\n    bold() {\n        this.config.api.bold();\n    }\n\n    italic() {\n        this.config.api.italic();\n    }\n\n    link() {\n        this.switchLinkFormVisibility();\n\n        if (this.ui.showLinkForm) {\n            this.config.api.saveSelection();\n\n            setTimeout(() => {\n                if (this.config.api.isLinkSelected()) {\n                    this.linkEl.nativeElement.value = this.config.api.getSelectedLinkHref();\n                }\n\n                this.linkEl.nativeElement.focus();\n            });\n        } else {\n            this.config.api.restoreSelection();\n        }\n    }\n\n    applyLink() {\n        this.config.api.restoreSelection();\n\n        if (this.config.api.isLinkSelected()) {\n            this.config.api.changeLinkUrl(this.linkEl.nativeElement.value);\n        } else {\n            this.config.api.createLink(this.linkEl.nativeElement.value);\n        }\n\n        this.switchLinkFormVisibility();\n    }\n\n    unlink() {\n        this.config.api.restoreSelection();\n\n        this.config.api.unlink();\n\n        this.switchLinkFormVisibility();\n    }\n\n    switchLinkFormVisibility() {\n        this.ui.showLinkForm = !this.ui.showLinkForm;\n    }\n}\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {debounceTime, filter} from 'rxjs/operators';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {NodeTreeSplit} from '../../../modules/utils/node-tree-split';\nimport {TreeNodeTraverse} from '../../../modules/utils/node/tree-node-traverse';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\nimport {BricksListComponent} from '../bricks-list/bricks-list.component';\nimport {ITextBrickApi} from '../text-brick-api.interface';\nimport {TextContextMenuComponent} from '../text-context-menu/text-context-menu.component';\nimport {IWallModel} from '../../../wall/model/interfaces/wall-model.interface';\nimport {DIVIDER_BRICK_TAG} from '../../divider-brick/divider-brick.constant';\n\n@Component({\n    selector: 'text-brick',\n    templateUrl: './text-brick.component.html',\n    styleUrls: ['./text-brick.component.scss']\n})\nexport class TextBrickComponent extends BaseTextBrickComponent implements OnInit, OnDestroy, ITextBrickApi {\n    @Input() wallModel: IWallModel;\n\n    placeholder = null;\n\n    brickSelectionModalRef: StickyModalRef;\n    contextMenuModalRef: StickyModalRef;\n\n    up$ = new Subject();\n    down$ = new Subject();\n    enter$ = new Subject();\n    selectedTag$: Subject<string> = new Subject();\n\n    subscriptions: Subscription[] = [];\n\n    selectionInfo: {\n        ranges: Range[],\n        selectedLink: HTMLElement\n    };\n\n    api: ITextBrickApi = {\n        bold: this.bold.bind(this),\n        italic: this.italic.bind(this),\n        createLink: this.createLink.bind(this),\n        changeLinkUrl: this.changeLinkUrl.bind(this),\n        isLinkSelected: this.isLinkSelected.bind(this),\n        getSelectedLinkHref: this.getSelectedLinkHref.bind(this),\n        saveSelection: this.saveSelection.bind(this),\n        restoreSelection: this.restoreSelection.bind(this),\n        unlink: this.unlink.bind(this)\n    };\n\n    constructor(private zone: NgZone,\n                private ngxStickyModalService: StickyModalService,\n                private cd: ChangeDetectorRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private el: ElementRef) {\n        super();\n\n        this.selectedTag$.subscribe((newTag) => {\n            if (newTag) {\n                this.hideBricksList();\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                if (newTag === DIVIDER_BRICK_TAG) {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            }\n        });\n\n        this.subscriptions.push(\n            // show sub-menu for selected text\n            fromEvent(this.el.nativeElement, 'mouseup')\n                .pipe(\n                    filter(() => Boolean(this.scope.text.length)),\n                    debounceTime(500),\n                    filter(() => this.el.nativeElement.contains(window.getSelection().anchorNode))\n                )\n                .subscribe((e: any) => {\n                    this.onTextSelection();\n                })\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    onBlur() {\n        this.placeholder = null;\n    }\n\n    onFocus() {\n        this.placeholder = 'Type \\'/\\' for commands';\n    }\n\n    onKeyPress(e: KeyboardEvent) {\n        super.onKeyPress(e);\n\n        this.hideContextMenuModal();\n    }\n\n    // open the link in new window\n    onClick(event: MouseEvent) {\n        const target = event.target as Node;\n\n        if (this.isHTMLElement(target)) {\n            if (target.tagName === 'A') {\n                window.open(target.getAttribute('href'), '_blank');\n            }\n        }\n    }\n\n    topKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.up$.next();\n        } else {\n            super.topKeyPressed(e);\n        }\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.down$.next();\n        } else {\n            super.bottomKeyPressed(e);\n        }\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            this.enter$.next();\n\n            setTimeout(() => {\n                this.hideBricksList();\n            }, 10);\n        } else {\n            if (this.isTag()) {\n                const newTag = this.scope.text.slice(1);\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                // d - divider tag\n                if (newTag === 'd') {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            } else {\n                super.enterKeyPressed(e);\n            }\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        const nodeTreeSplit = new NodeTreeSplit(this.editor.nativeElement, target, offset);\n\n        return {\n            left: nodeTreeSplit.leftTree.innerHTML,\n            right: nodeTreeSplit.rightTree.innerHTML\n        };\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.hideBricksList();\n        }\n    }\n\n    onTextChange() {\n        super.onTextChange();\n\n        if (this.brickSelectionModalRef) {\n            if (!this.scope.text.length) {\n                this.hideBricksList();\n            }\n        } else if (this.scope.text[0] === '/' && this.scope.text.length === 1) {\n            this.editor.nativeElement.blur();\n\n            const elementBoundingRect = this.el.nativeElement.getBoundingClientRect();\n\n            this.brickSelectionModalRef = this.ngxStickyModalService.open({\n                component: BricksListComponent,\n                data: {\n                    text$: this.textChange,\n                    up$: this.up$,\n                    down$: this.down$,\n                    enter$: this.enter$,\n                    selectedTag$: this.selectedTag$\n                },\n                positionStrategy: {\n                    name: StickyPositionStrategy.coordinate,\n                    options: {\n                        clientX: elementBoundingRect.x,\n                        clientY: elementBoundingRect.y + 35\n                    }\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            });\n\n            setTimeout(() => {\n                this.editor.nativeElement.focus();\n            });\n        }\n    }\n\n    onPaste(e: ClipboardEvent) {\n        const imageDataTransferItem = this.extractImageDataTransferItem(e.clipboardData.items);\n\n        if (imageDataTransferItem) {\n            e.preventDefault();\n\n            (new ImgEncoder(imageDataTransferItem.getAsFile())).getBase64Representation().then((imgBase64) => {\n                this.wallModel.api.core.turnBrickInto(this.id, 'image', {\n                    src: imgBase64\n                });\n            });\n        } else {\n            super.onPaste(e);\n        }\n    }\n\n    onTextSelection() {\n        if (!this.contextMenuModalRef) {\n            const selection = window.getSelection();\n\n            if (!selection.isCollapsed) {\n                this.showContextModal();\n            }\n        }\n    }\n\n    // API\n    bold(): void {\n        document.execCommand('bold', false);\n    }\n\n    italic(): void {\n        document.execCommand('italic', false);\n    }\n\n    createLink(url: string): void {\n        document.execCommand('createLink', false, url);\n    }\n\n    getSelectedLinkHref(): string {\n        if (this.selectionInfo.selectedLink) {\n            return this.selectionInfo.selectedLink.getAttribute('href');\n        }\n    }\n\n    unlink(): void {\n        document.execCommand('unlink', false);\n    }\n\n    changeLinkUrl(url: string): void {\n        if (this.selectionInfo.selectedLink) {\n            this.selectionInfo.selectedLink.setAttribute('href', url);\n\n            this.triggerEditorChange();\n        }\n    }\n\n    isLinkSelected(): boolean {\n        return Boolean(this.selectionInfo && this.selectionInfo.selectedLink);\n    }\n\n    saveSelection() {\n        this.selectionInfo = {\n            selectedLink: this.getSelectedLink(),\n            ranges: this.getSelectedRanges()\n        };\n    }\n\n    restoreSelection() {\n        const sel = window.getSelection();\n\n        sel.removeAllRanges();\n\n        for (let i = 0, len = this.selectionInfo.ranges.length; i < len; ++i) {\n            sel.addRange(this.selectionInfo.ranges[i]);\n        }\n    }\n\n    // end API\n\n    private getSelectedLink(): HTMLElement {\n        const selection = window.getSelection();\n\n        let anchorNodeLink;\n        let focusNodeLink;\n\n        const isAnchorNodeBelongToBrick = this.el.nativeElement.contains(selection.anchorNode);\n        const isFocusNodeBelongToBrick = this.el.nativeElement.contains(selection.focusNode);\n\n        if (isAnchorNodeBelongToBrick) {\n            anchorNodeLink = this.findParentLink(selection.anchorNode);\n        }\n\n        if (isFocusNodeBelongToBrick) {\n            focusNodeLink = this.findParentLink(selection.focusNode);\n        }\n\n        if (anchorNodeLink) {\n            return anchorNodeLink;\n        } else if (focusNodeLink) {\n            return focusNodeLink;\n        } else if (selection.anchorNode !== selection.focusNode &&\n            isFocusNodeBelongToBrick && isAnchorNodeBelongToBrick) {\n            return this.findLinkBetweenNodes(selection.anchorNode, selection.focusNode);\n        }\n    }\n\n    private triggerEditorChange() {\n        this.editor.nativeElement.dispatchEvent(new Event('input'));\n    }\n\n    private showContextModal() {\n        this.editor.nativeElement.blur();\n\n        const sel = window.getSelection();\n\n        const elementBoundingRect = sel.getRangeAt(0).getBoundingClientRect();\n\n        this.contextMenuModalRef = this.ngxStickyModalService.open({\n            component: TextContextMenuComponent,\n            data: {\n                api: this.api\n            },\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.left + ((elementBoundingRect.right - elementBoundingRect.left) / 2.5),\n                    clientY: elementBoundingRect.top - 35\n                }\n            },\n            overlayConfig: {\n                hasBackdrop: false\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.contextMenuModalRef.result.then(() => {\n            this.hideContextMenuModal();\n        }, () => {\n            this.hideContextMenuModal();\n        });\n\n        setTimeout(() => {\n            this.editor.nativeElement.focus();\n        });\n    }\n\n    // todo: might be as util method\n    private getSelectedRanges(): Range[] {\n        const sel = window.getSelection();\n        const ranges = [];\n\n        for (let i = 0, len = sel.rangeCount; i < len; ++i) {\n            ranges.push(sel.getRangeAt(i));\n        }\n\n        return ranges;\n    }\n\n    private extractImageDataTransferItem(items: DataTransferItemList): DataTransferItem {\n        let index;\n\n        for (index in items) {\n            if (items.hasOwnProperty(index)) {\n                const item = items[index];\n\n                if (item.kind === 'file') {\n                    return item;\n                }\n            }\n        }\n    }\n\n    private isTag() {\n        return this.scope.text && this.scope.text[0] === '/' &&\n            this.wallModel.api.core.isRegisteredBrick(this.scope.text.slice(1));\n    }\n\n    private hideBricksList() {\n        if (this.brickSelectionModalRef) {\n            this.brickSelectionModalRef.close();\n\n            this.brickSelectionModalRef = null;\n        }\n    }\n\n    private hideContextMenuModal() {\n        if (this.contextMenuModalRef) {\n            this.contextMenuModalRef.close();\n\n            this.contextMenuModalRef = null;\n        }\n    }\n\n    private findParentLink(node: Node): HTMLElement {\n        let currentNode: Node = node;\n        let linkNode = null;\n\n        while (!linkNode && currentNode !== this.el.nativeElement) {\n            if ((currentNode as HTMLElement).tagName === 'A') {\n                linkNode = currentNode;\n            }\n\n            currentNode = currentNode.parentElement;\n        }\n\n        return linkNode;\n    }\n\n    private findLinkBetweenNodes(nodeA: Node, nodeB: Node): HTMLElement {\n        const treeNodeTraverse = new TreeNodeTraverse(this.editor.nativeElement);\n\n        const orderedNodes = treeNodeTraverse.getPostPreOrderNodes();\n\n        let nodeAIndex = orderedNodes.indexOf(nodeA);\n        let nodeBIndex = orderedNodes.indexOf(nodeB);\n\n        if (nodeBIndex < nodeAIndex) {\n            const temp = nodeBIndex;\n\n            nodeBIndex = nodeAIndex;\n            nodeAIndex = temp;\n        }\n\n        const orderedNodesBetweenNodes = orderedNodes.slice(nodeAIndex, nodeBIndex);\n\n        const linkNodes = orderedNodesBetweenNodes.filter((node) => {\n            if (this.isHTMLElement(node)) {\n                return node.tagName === 'A';\n            }\n        });\n\n        return linkNodes[0] as HTMLElement;\n    }\n\n    private isHTMLElement(node: Node | HTMLElement): node is HTMLElement {\n        return (node as HTMLElement).querySelector !== undefined;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {BricksListComponent} from './bricks-list/bricks-list.component';\nimport {TextBrickComponent} from './component/text-brick.component';\nimport {TextContextMenuComponent} from './text-context-menu/text-context-menu.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatListModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatListModule\n    ],\n    exports: [\n        TextBrickComponent,\n        BricksListComponent,\n        TextContextMenuComponent\n    ],\n    declarations: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ],\n    entryComponents: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ]\n})\nexport class TextBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'text',\n            component: TextBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Text',\n            description: 'Just start writing with plain text'\n        });\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToTopLeftPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToLeftCenterPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n"],"names":["Subject","Injectable","Component","ComponentFactoryResolver","ApplicationRef","Injector","NgModule","CommonModule","EventEmitter","Inject","DOCUMENT","Input","Output","ViewChild","fromEvent","throttleTime","NgZone","ChangeDetectorRef","ViewContainerRef","BehaviorSubject","Directive","Renderer2","ElementRef","HostListener","MatIconModule","ChangeDetectionStrategy","tslib_1.__extends","NG_VALUE_ACCESSOR","FormsModule","InjectionToken","StickyModalRef","StickyPositionStrategy","StickyModalService","StickyModalModule","MatButtonModule","MatInputModule","MatFormFieldModule","InputContextComponent","STICKY_MODAL_DATA","MatListModule","filter","debounceTime"],"mappings":"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"}