{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-wall/lib/modules/utils/guid.ts","ng://ngx-wall/lib/modules/utils/base64-to-file.ts","ng://ngx-wall/lib/modules/utils/img-encoder.service.ts","ng://ngx-wall/lib/wall/model/wall-brick.model.ts","ng://ngx-wall/lib/wall/plugins/core/events/add-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/before-change.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/move-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-bricks.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/set-plan.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/turn-brick-into.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/update-brick-state.event.ts","ng://ngx-wall/lib/wall/plugins/core/layout-walker.class.ts","ng://ngx-wall/lib/wall/plugins/core/wall-layout.model.ts","ng://ngx-wall/lib/wall/plugins/core/wall-core.plugin.ts","ng://ngx-wall/lib/wall/model/events/wall-plugin-initialized.event.ts","ng://ngx-wall/lib/wall/model/wall.model.ts","ng://ngx-wall/lib/wall/registry/brick-registry.service.ts","ng://ngx-wall/lib/wall/factory/wall-model.factory.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/component/placeholder.component.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.service.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.module.ts","ng://ngx-wall/lib/wall/components/wall-canvas/wall-canvas.component.ts","ng://ngx-wall/lib/modules/radar/events/location-updated.event.ts","ng://ngx-wall/lib/modules/radar/spot.model.ts","ng://ngx-wall/lib/modules/radar/radar-coordinator.service.ts","ng://ngx-wall/lib/modules/radar/radar.service.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component.ts","ng://ngx-wall/lib/wall/components/wall/events/selected-brick.event.ts","ng://ngx-wall/lib/wall/components/wall/wall-view.model.ts","ng://ngx-wall/lib/wall/components/wall/wall.component.ts","ng://ngx-wall/lib/modules/tow/events/start-working.event.ts","ng://ngx-wall/lib/modules/tow/events/stop-working.event.ts","ng://ngx-wall/lib/modules/tow/events/work-in-progress.event.ts","ng://ngx-wall/lib/modules/tow/tow-coordinator.service.ts","ng://ngx-wall/lib/modules/tow/tow-slave/tow-slave.directive.ts","ng://ngx-wall/lib/modules/tow/tow.service.ts","ng://ngx-wall/lib/modules/radar/directive/spot.directive.ts","ng://ngx-wall/lib/modules/radar/radar.module.ts","ng://ngx-wall/lib/modules/tow/tow.module.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.component.ts","ng://ngx-wall/lib/modules/pick-out/events/end-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/pick-out-items.event.ts","ng://ngx-wall/lib/modules/pick-out/events/start-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/stop-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-coordinator.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.model.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.directive.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.constant.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.module.ts","ng://ngx-wall/lib/wall/wall.module.ts","ng://ngx-wall/lib/modules/helper-components/brick-input-placeholder/brick-input-placeholder.component.ts","ng://ngx-wall/lib/modules/helper-components/loading-wrapper/loading-wrapper.component.ts","ng://ngx-wall/lib/modules/helper-components/helper-components.module.ts","ng://ngx-wall/lib/plugins/copy/copy.plugin.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.plugin.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.constant.ts","ng://ngx-wall/lib/modules/tow/tow.constant.ts","ng://ngx-wall/lib/plugins/selections/selection.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.constant.ts","ng://ngx-wall/lib/bricks/divider-brick/component/divider-brick.component.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.module.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-representation.class.ts","ng://ngx-wall/lib/modules/utils/deep-left-node-child.ts","ng://ngx-wall/lib/modules/utils/deep-right-node-child.ts","ng://ngx-wall/lib/modules/utils/first-sub-string-node.ts","ng://ngx-wall/lib/modules/utils/node/caret-start-end-position.ts","ng://ngx-wall/lib/modules/utils/node/cursor-left-coordinate.ts","ng://ngx-wall/lib/modules/utils/node/cursor-position-in-line.ts","ng://ngx-wall/lib/modules/utils/node/place-caret-to-position.ts","ng://ngx-wall/lib/modules/utils/node/string-without-empty-nodes.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.constant.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/bottom-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/enter-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/left-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/right-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/top-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.component.ts","ng://ngx-wall/lib/bricks/header-brick/component/header-brick.component.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.directive.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.module.ts","ng://ngx-wall/lib/bricks/header-brick/header-brick.module.ts","ng://ngx-wall/lib/modules/file-uploader/file-uploader.token.ts","ng://ngx-wall/lib/bricks/img-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/img-brick/component/img-brick.component.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-destructor.class.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-text-representation.class.ts","ng://ngx-wall/lib/modules/resizable/resizable-handler.component.ts","ng://ngx-wall/lib/modules/resizable/resizable.directive.ts","ng://ngx-wall/lib/modules/resizable/resizable.const.ts","ng://ngx-wall/lib/modules/resizable/resizable.module.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick.module.ts","ng://ngx-wall/lib/bricks/quote-brick/component/quote-brick.component.ts","ng://ngx-wall/lib/bricks/quote-brick/quote-brick.module.ts","ng://ngx-wall/lib/bricks/video-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/video-brick/component/video-brick.component.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick-text-representation.class.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick.module.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/component/web-bookmark-brick.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/web-bookmark-brick.module.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.constant.ts","ng://ngx-wall/lib/bricks/code-brick/mode-list/mode-list.component.ts","ng://ngx-wall/lib/bricks/code-brick/component/code-brick.component.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.module.ts","ng://ngx-wall/lib/bricks/text-brick/bricks-list/bricks-list.component.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.constant.ts","ng://ngx-wall/lib/modules/utils/node-tree-split.ts","ng://ngx-wall/lib/modules/utils/node/tree-node-traverse.ts","ng://ngx-wall/lib/bricks/text-brick/text-context-menu/text-context-menu.component.ts","ng://ngx-wall/lib/bricks/text-brick/component/text-brick.component.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.module.ts","ng://ngx-wall/lib/modules/radar/events/location-to-top-left-point.event.ts","ng://ngx-wall/lib/modules/radar/events/location-to-left-center-point.event.ts","ng://ngx-wall/lib/wall/components/wall/wall.constant.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","Guid","get","s4","Math","floor","random","toString","substring","Base64ToFile","base64","fileName","getFile","arr","split","mime","match","bstr","atob","u8arr","Uint8Array","charCodeAt","File","type","ImgEncoder","image","getBase64Representation","_this","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","readAsDataURL","WallBrick","id","tag","meta","state","getState","JSON","parse","stringify","updateState","newState","keys","turnInto","getSnapshot","AddBrickEvent","brickId","BeforeChangeEvent","beforeEventType","MoveBrickEvent","movedBrickIds","beforeBrickId","RemoveBrickEvent","brick","previousBrickId","nextBrickId","RemoveBricksEvent","bricks","SetPlanEvent","TurnBrickIntoEvent","newTag","oldTag","UpdateBrickStateEvent","brickState","oldBrickState","LayoutWalker","brickRegistry","rows","getRowCount","isBrickAheadOf","firstBrickId","secondBrickId","brickIdsSequence","getBrickSequence","map","indexOf","getBrickTag","getBrickById","getBrickIds","filterBricks","predictor","wallBrick","getBrickPosition","brickPosition","rowIndex","columnIndex","brickIndex","columns","forEach","column","index","getColumnCount","getBricksCount","getNextBrick","bricksSequence","findIndex","getNextBrickId","nextBrick","getPreviousBrick","getPreviousBrickId","previousBrick","predicate","brickSequence","traverse","row","push","getNextTextBrickId","nextTextBrick","getNextTextBrick","getPreviousTextBrickId","previousTextBrick","getPreviousTextBrick","findBricksAfter","currentBrick","supportText","previousTextBricks","findBrickBefore","currentBrickIdIndex","splice","brickIdAfter","find","brickIdBefore","setLayout","fn","WallLayout","layoutWalker","addBrickToNewRow","rowId","lastRowIndex","createNewRow","generateId","addBrick","addBrickToExistingColumn","getColumn","bricksCount","addBrickToNewColumn","columnCount","createNewColumn","moveBrickAfterInNewRow","afterBrickId","reverse","movedBrickId","currentMovedBrick","removeBrick","newRowIndex","moveBrickAfterInSameColumn","afterBrickPosition","moveBrickBeforeInNewRow","beforeBrickPosition","moveBrickBeforeInSameColumn","moveBrickToNewColumn","side","movedBricks","movedBrick","initializeNewRow","initializeNewColumn","WallCorePlugin","name","version","DEFAULT_BRICK","events","Subject","onWallInitialize","wallModel","methodName","bind","registerApi","setPlan","plan","dispatch","layout","planBrick","currentPlanBrick","restoreBrick","addBrickAfterBrickId","newBrick","createBrick","getBrickSnapshot","addBrickBeforeBrickId","addDefaultBrick","brickCount","addBrickAtStart","updateBrickState","oldState","clearBrickResources","then","removedBrick","removeBricks","brickIds","clearPromises","all","removedBricks","clear","turnBrickInto","moveBrickAfterBrickId","moveBrickBeforeBrickId","targetBrickIds","getPlan","planColumn","data","sortBrickIdsByLayoutOrder","filter","preparedRow","getBrickResourcePaths","brickSpecification","getBrickTextRepresentation","textRepresentation","getText","subscribe","callback","isRegisteredBrick","Boolean","e","next","generateGuid","brickDefinition","destructor","WallPluginInitializedEvent","pluginName","WallModel","config","api","core","events$","plugins","Map","plugin","initializePlugin","apiName","destroy","destroyPlugin","set","onWallPluginDestroy","BrickRegistry","register","brickConfiguration","getAll","Injectable","WallModelFactory","unshift","PlaceholderComponent","setCoordinate","x","y","size","isHorizontal","Component","args","template","PlaceholderRenderer","componentFactoryResolver","appRef","injector","placeholderComponentRef","render","renderPlaceholderComponent","removePlaceholderComponent","resolveComponentFactory","attachView","hostView","domElem","rootNodes","document","body","appendChild","detachView","instance","ComponentFactoryResolver","ApplicationRef","Injector","PlaceholderRendererModule","NgModule","imports","CommonModule","declarations","providers","entryComponents","WallCanvasComponent","doc","selectedBricks","focusedBrick","canvasClick","EventEmitter","onBrickStateChanged","focusedBrick$","selectedBricks$","onEditorClick","expander","nativeElement","emit","ngOnChanges","changes","currentValue","brickStateChanged","trackRowsBy","item","selector","Inject","DOCUMENT","Input","Output","ViewChild","LocationUpdatedEvent","spots","SpotModel","updateInfo","_a","getInfo","position","isCross13Line","height","getMinimalDistanceToPoint","distanceToLine12","abs","distanceToLine43","distanceToLine14","distanceToLine23","width","minDistanceToHorizontalLine","min","minDistanceToVerticalLine","sqrt","getDistanceToTopLeftPoint","a","getDistanceToBottomLeftPoint","getDistanceToLeftCenterPoint","isPointInsideSpot","RadarCoordinator","zone","mouseMove$","fromEvent","runOutsideAngular","pipe","throttleTime","updateSpotsInfo","updateLocationPosition","clientX","clientY","spotId","spotInstance","unRegister","delete","spot","filterSpots","from","_b","o","m","Symbol","iterator","r","ar","done","value","error","__read","sortedSpots","minimalDistance","topLeftPointDistance","bottomLeftPointDistance","centerLeftPointDistance","NgZone","Radar","radarCoordinator","WallCanvasBrickComponent","resolver","radar","cdRef","wallCanvasComponent","selected","isMouseNear","isMediaInteractionEnabled","minimalDistanceToMouse","ngOnInit","isPickOutItem","isBeacon","componentReference","renderBrick","radarSubscription","currentSpot","detectChanges","focusedBrickSubscription","callInstanceApi","context","selectedBricksSubscription","isMediaInteractionEnabledSubscription","isMediaInteractionEnabled$","firstChange","ngOnDestroy","unsubscribe","stateChangesSubscription","factory","component","container","createComponent","componentInstance","stateChanges","ChangeDetectorRef","read","ViewContainerRef","WallCanvasRowComponent","trackColumnsBy","trackBricksBy","hash","SelectedBrickEvent","selectedBrickIds","WallViewModel","BehaviorSubject","canvasLayout","getCanvasLayout","brickConfig","initialize","coreApi","reduce","seal","wallModelSubscription","focusOnBrickId","unSelectBricks","selectBrick","selectedBricksClone","slice","selectBricks","addBrickToSelection","removeBrickFromSelection","brickIdIndex","getSelectedBrickIds","getFocusedBrickId","focusContext","focusOnPreviousTextBrick","previousTextBrickId","focusOnNextTextBrick","nextTextBrickId","enableMediaInteraction","disableMediaInteraction","currentBrickIds","brickSnapshot","text","onCanvasClick","rowCount","lastBrickSnapshot","reset","WallComponent","wallViewModel","model","configuration","cleanUp","StartWorkingEvent","slaveId","StopWorkingEvent","WorkInProgressEvent","mousePosition","TowCoordinator","isSlaveWorking","addEventListener","preventDefault","dataTransfer","dropEffect","slaveWorkProgress","slaveStartWorking","slaveStopWorking","TowSlaveDirective","renderer2","el","towCoordinator","dragStart","setData","drag","dragEnd","stopPropagation","setAttribute","Directive","Renderer2","ElementRef","HostListener","TowService","SpotDirective","String","getData","getSize","getPosition","offsetWidth","offsetHeight","offsets","getBoundingClientRect","left","top","RadarModule","exports","TowModule","PickOutAreaComponent","pickOutAreaModel","EndPickOut","PickOutItems","ids","StartPickOut","StopPickOut","PickOutCoordinator","isPickOutAllowed","disablePickOut","enablePickOut","stopPickOut","startPickOut","pickOutChanged","range","pickOutSpotModels","spotModel","getSelectedItemIds","endPickOut","pickOutsItem","pickOutItem","PickOutAreaModel","scrollableContainer","overBrickId","isPickOutProcessInitialized","minimumMoveDistance","initialX","initialY","initialBrickId","currentBrickId","recalculatePositionAndSize","scrollContextRect","pageX","previousClientX","pageY","previousClientY","scrollTop","updatePickOutAreaPositionAndSize","updateCurrentClientPosition","updateCurrentBrickId","canInitiatePickOutProcess","isMouseMovedEnough","initiatePickOutProcess","PickOutAreaDirective","pickOutCoordinator","selectionRangeComponentRef","onMouseUpBound","onMouseUp","onMouseMoveBound","onMouseMove","onSelectionStartBound","onSelectionStart","onContainerScrollBound","onContainerScroll","triggerPickOutChanged","mouseDown","button","isMouseOverDraggableElement","brickIdOverMouse","findBrickIdByCoordinate","onStartPicKOut","onStopPickOut","renderRangeComponent","removeRangeComponent","activeElement","blur","clearSelection","removeEventListener","window","getSelection","empty","currentElement","elementFromPoint","tagName","parentElement","getElementsByClassName","getAttribute","draggable","classList","contains","PickOutService","pickOutHandlerService","PickOutModule","WallModule","forRoot","ngModule","MatIconModule","BrickInputPlaceholderComponent","onClick","changeDetection","ChangeDetectionStrategy","OnPush","LoadingWrapperComponent","HelperComponentsModule","CopyPlugin","onCopyBound","onCopy","selectedTextRepresentation","getSelectedTextRepresentation","addToClipboard","str","clipboardData","ui","selectedBrickId","trim","join","UndoRedoPlugin","processingUndo","undoPlanStack","redoPlanStack","undo","undoSize","redo","redoSize","apiSubscription","wallModelEventHandler","onUndoKeyHandlerBound","onUndoKeyHandler","keyCode","ctrlKey","shiftKey","redoPlan","pop","previousPlan","TOW","dropTypes","horizontal","vertical","dropSides","right","bottom","SelectionPlugin","options","isMouseSelection","placeholderHeight","isEnableDropZoneHighlight","shouldUnselectBrick","pickOutService","placeholderRenderer","towService","onMouseDownBound","onMouseDown","onKeyDownHandlerBound","onKeyDownHandler","pickOutServiceSubscription","towServiceSubscription","nearestBrickToDrop","concat","nearestSpot_1","centerYPosition","renderPlaceholder","isMouseOverDraggableBox","firstSelectedBrickId","lastSelectedBrickId","key","isDownSelectionDirection","lastBrickId","penultimateBrickId","placeholderX","placeholderY","placeholderSize","placeholderIsHorizontal","DIVIDER_BRICK_TAG","DividerBrickComponent","DividerBrickModule","description","TextRepresentation","DeepLeftNodeChild","root","currentNode","childNodes","child","DeepRightNodeChild","FirstSubStringNode","subStringHTML","firstLevelSubStringNodes","subString","getSubStringTextContent","findFirstLevelSubStringNodes","includes","textContent","pNode","createElement","innerHTML","CaretStartEndPosition","isCaretAtEnd","sel","rangeCount","selRange","getRangeAt","testRange","cloneRange","selectNodeContents","setStart","endContainer","endOffset","isCaretAtStart","setEnd","startContainer","startOffset","CursorLeftCoordinate","leftText","rightText","targetNode","div","createElementClone","span","style","padding","margin","leftCoordinate","offsetLeft","remove","node","getComputedStyle","prop","CursorPositionInLine","isOnFirstLine","isOnLastLine","span1","span2","innerText","lh","PlaceCaretToPosition","place","createRange","removeAllRanges","addRange","StringWithoutEmptyNodes","FOCUS_INITIATOR","BottomKeyHandler","baseTextBrickComponent","execute","isCaretAtLastLine","caretLeftCoordinate","getCaretLeftCoordinate","initiator","details","bottomKey","wallUiApi","EnterKeyHandler","splittedText","getSplittedText","focusOffset","focusNode","cleanUpText","splitBrickForTwoPart","addEmptyBrickAfter","addEmptyTextBrickBefore","addBrickAfter","setTextState","saveCurrentState","newTextState","tabs","scope","editor","scrollIntoView","behavior","block","inline","addedBrick","setTimeout","LeftKeyHandler","leftKey","RightKeyHandler","rightKey","TopKeyHandler","isCaretAtFirstLine","topKey","BaseTextBrickComponent","keypressHandlers","enter","maxTabNumber","textChange","onPasteBound","onPaste","textChangeSubscription","onWallStateChange","textArr","execCommand","onTextChange","onKeyPress","noMetaKeyIsPressed","code","topKeyPressed","bottomKeyPressed","leftKeyPressed","rightKeyPressed","enterKeyPressed","escapeKeyPressed","isTextSelected","backSpaceKeyPressed","concatWithNextTextSupportingBrick","onTabPressed","onDeleteAndFocusToNext","proxyToKeyHandler","keyHandlerName","increaseTab","decreaseTab","concatWithPreviousTextSupportingBrick","onDeleteAndFocusToPrevious","getCursorPositionInLine","leftRightText","previousBrickSnapshot","concatText","concatenationText","concatenationText_1","placeCaretBaseOnConcatenatedText","deletePreviousText","offset","onWallFocus","focus","placeCaretAtEnd","placeCaretAtStart","line","LineType","placeCaretAtLeftCoordinate","isCollapsed","deepLeftNode","placeCaretAtNodeStart","rightNode","placeCaretAtNodeEnd","placeCaretAtNodeToPosition","firstLevelSubStringNode","nodeType","Node","TEXT_NODE","firstLevelSubStringTextContent","altKey","metaKey","HeaderBrickComponent","_super","placeholder","tslib_1.__extends","ContenteditableDirective","elementRef","renderer","propValueAccessor","callOnChange","onChange","callOnTouched","onTouched","writeValue","normalizedValue","setProperty","registerOnChange","registerOnTouched","setDisabledState","isDisabled","removeDisabledState","listen","listenerDisabledState","removeAttribute","provide","NG_VALUE_ACCESSOR","useExisting","multi","ContenteditableModule","FormsModule","HeaderBrickModule","WALL_FILE_UPLOADER","InjectionToken","InputContextComponent","ngxStickyModalRef","srcInput","applyImageSrc","notify","src","onFileChange","file","files","close","onSubmit","StickyModalRef","ImgBrickComponent","ngxStickyModalService","wallFileUploader","metadata","isSrcBase64","resizable","resize","onResize","resizeStart","onResizeStart","resizeEnd","onResizeEnd","processNewState","isBase64","setUpImageWidth","processBase64ImgSrc","showPanel","resizeData","lastWidth","save","imageSrc","isImage","catch","alert","applyImageFile","imgFile","imgBase64","uploadImage","uploadInfo","downloadURL","path","imageSrcPlaceholderRef","open","positionStrategy","StickyPositionStrategy","flexibleConnected","relativeTo","originX","originY","overlayX","overlayY","replace","btoa","err","canUploadFile","upload","loadImage","img","Image","StickyModalService","ImgModel","ImgBrickTextRepresentation","ResizableHandlerComponent","mouseDownEvent","ResizableDirective","cfr","leftHandler","createHandler","rightHandler","mouseDownHandler","xCurrent","isLeftDirection","xInitial","isRightDirection","wResizable","customClassName","handler","ResizableModule","ImgBrickModule","imgModel","imageState","StickyModalModule","MatButtonModule","MatInputModule","MatFormFieldModule","QuoteBrickComponent","QuoteBrickModule","InputContextComponent$1","applySrc","VideoBrickComponent","uiStates","initial","video","uiState","iframe","videoSrcPlaceholderRef","showVideoPanel","youtubeId","VideoBrickTextRepresentationClass","VideoBrickModule","InputContextComponent$2","WebBookmarkBrickComponent","url","logo","title","author","loading","isValidUrl","getWebPageMetaInfo","webPageMetaInfo","fetch","page","json","pageMetadata","URL","WebBookmarkBrickModule","SUPPORTED_MODES","ModeListComponent","onSelected","mode","STICKY_MODAL_DATA","CodeBrickComponent","displayModeName","codeMirrorInstance","CodeMirror","theme","dragDrop","scrollbarStyle","on","getValue","saveState","setValue","getMode","setOption","onModeSelected","elementBoundingRect","modes","coordinate","CodeBrickModule","MatListModule","BricksListComponent","selectedTag$","bricksList$","subscriptions","updateBricksList","text$","filterText","up$","onNavigationUpDownHandler","down$","enter$","notifySelectedTag","onBrickSelected","brickDescription","trackByFn","subscription","brickDescriptors","brickDescriptor","sort","startsWith","isUp","currentSelectedTag","currentBrickList","currentSelectedBrickIndex","nextSelectedBrick","NodeTreeSplit","targetElement","leftTree","rightTree","parent_1","parentNode","cloneNode","createTextNode","appendNextSiblingsToNode","prependPreviousSiblingsToNode","leftParentTree","rightParentTree","grandparent","prepend","previousSibling","nextSibling","TreeNodeTraverse","traversePostOrder","_traversePostOrder","traversePreOrder","_traversePreOrder","traversePostPreOrder","_traversePostPreOrder","getPreOrderNodes","nodes","getPostOrderNodes","getPostPreOrderNodes","childNode","TextContextMenuComponent","showLinkForm","saveSelection","bold","italic","link","switchLinkFormVisibility","isLinkSelected","linkEl","getSelectedLinkHref","restoreSelection","applyLink","changeLinkUrl","createLink","unlink","TextBrickComponent","cd","hideBricksList","debounceTime","anchorNode","onTextSelection","onBlur","onFocus","hideContextMenuModal","isHTMLElement","brickSelectionModalRef","isTag","nodeTreeSplit","imageDataTransferItem","extractImageDataTransferItem","items","getAsFile","contextMenuModalRef","showContextModal","selectionInfo","selectedLink","triggerEditorChange","getSelectedLink","ranges","getSelectedRanges","len","anchorNodeLink","focusNodeLink","selection","isAnchorNodeBelongToBrick","isFocusNodeBelongToBrick","findParentLink","findLinkBetweenNodes","dispatchEvent","Event","overlayConfig","hasBackdrop","kind","linkNode","nodeA","nodeB","orderedNodes","nodeAIndex","nodeBIndex","temp","querySelector","undefined","TextBrickModule","LocationToTopLeftPointEvent","LocationToLeftCenterPointEvent","MODES","EDIT","READ"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class Guid {\n    get() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n}\n","export class Base64ToFile {\n    constructor(private base64: string, private fileName: string) {\n    }\n\n    getFile(): File {\n        const arr = this.base64.split(',');\n        const mime = arr[0].match(/:(.*?);/)[1];\n        const bstr = atob(arr[1]);\n        let n = bstr.length;\n        const u8arr = new Uint8Array(n);\n\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], this.fileName, {type: mime});\n    }\n}\n","export class ImgEncoder {\n    constructor(private image: File) {\n    }\n\n    getBase64Representation(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                resolve(event.target.result);\n            };\n\n            reader.onerror = (event: any) => {\n                reject(event);\n            };\n\n            reader.readAsDataURL(this.image);\n        });\n    }\n}\n","import {IBrickSnapshot} from './interfaces/brick-snapshot.interface';\n\nexport class WallBrick {\n    id: string;\n    tag: string;\n    meta: any;\n    state: any = {};\n\n    constructor(id: string, tag: string, meta: any) {\n        this.id = id;\n        this.tag = tag;\n        this.meta = meta;\n    }\n\n    getState(): any {\n        return JSON.parse(JSON.stringify(this.state));\n    }\n\n    updateState(newState) {\n        if (Object.keys(newState).length) {\n            Object.assign(this.state, newState);\n        } else {\n            this.state = {};\n        }\n\n        return this;\n    }\n\n    turnInto(tag: string) {\n        this.tag = tag;\n\n        this.updateState({});\n\n        return this;\n    }\n\n    getSnapshot(): IBrickSnapshot {\n        return {\n            id: this.id,\n            tag: this.tag,\n            meta: this.meta,\n            state: this.getState()\n        };\n    }\n}\n","export class AddBrickEvent {\n    constructor(public brickId: string) {\n    }\n}\n","export class BeforeChangeEvent {\n    constructor(public beforeEventType: any) {\n    }\n}\n","export class MoveBrickEvent {\n    constructor(public movedBrickIds: string[], beforeBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBrickEvent {\n    constructor(public brick: IBrickSnapshot,\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBricksEvent {\n    constructor(public bricks: IBrickSnapshot[],\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","export class SetPlanEvent {\n}\n\n","export class TurnBrickIntoEvent {\n    constructor(public brickId: string,\n                public newTag: string,\n                public oldTag: string) {\n    }\n}\n","export class UpdateBrickStateEvent {\n    constructor(public brickId: string,\n                public brickState: any,\n                public oldBrickState: any) {\n    }\n}\n","import {BrickRegistry} from '../../registry/brick-registry.service';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Execute queries commands over rows\n* */\nexport class LayoutWalker {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // public API\n\n    getRowCount() {\n        return this.rows.length;\n    }\n\n    isBrickAheadOf(firstBrickId: string, secondBrickId: string): boolean {\n        const brickIdsSequence = this.getBrickSequence(() => true).map((brick) => brick.id);\n\n        return brickIdsSequence.indexOf(firstBrickId) < brickIdsSequence.indexOf(secondBrickId);\n    }\n\n    getBrickTag(brickId: string): string {\n        return this.getBrickById(brickId).tag;\n    }\n\n    getBrickById(brickId: string): WallBrick {\n        return this.getBrickSequence((brick: WallBrick) => {\n            return brick.id === brickId;\n        })[0];\n    }\n\n    getBrickIds(): string[] {\n        return this.getBrickSequence(() => true).map((brick) => brick.id);\n    }\n\n    filterBricks(predictor: (brick: IBrickSnapshot) => boolean) {\n        return this.getBrickSequence((wallBrick) => {\n            return predictor(wallBrick.getSnapshot());\n        });\n    }\n\n    getBrickPosition(brickId: string) {\n        const brickPosition = {\n            rowIndex: null,\n            columnIndex: null,\n            brickIndex: null\n        };\n\n        let i = 0;\n\n        while (brickPosition.rowIndex === null && i < this.rows.length) {\n            this.rows[i].columns.forEach((column, columnIndex) => {\n                let brickIndex = null;\n\n                column.bricks.forEach((brick, index) => {\n                    if (brick.id === brickId) {\n                        brickIndex = index;\n                    }\n                });\n\n                if (brickIndex || brickIndex === 0) {\n                    brickPosition.rowIndex = i;\n                    brickPosition.columnIndex = columnIndex;\n                    brickPosition.brickIndex = brickIndex;\n                }\n            });\n\n            i++;\n        }\n\n        return brickPosition;\n    }\n\n    getColumnCount(rowIndex: number): number {\n        return this.rows[rowIndex].columns.length;\n    }\n\n    getBricksCount(): number {\n        return this.getBrickSequence(() => true).length;\n    }\n\n    getNextBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex + 1];\n    }\n\n    getNextBrickId(brickId: string): string {\n        const nextBrick = this.getNextBrick(brickId);\n\n        return nextBrick && nextBrick.id;\n    }\n\n    getPreviousBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex - 1];\n    }\n\n    getPreviousBrickId(brickId: string): string {\n        const previousBrick = this.getPreviousBrick(brickId);\n\n        return previousBrick && previousBrick.id;\n    }\n\n    getBrickSequence(predicate): WallBrick[] {\n        const brickSequence = [];\n\n        this.traverse((row: IWallRow) => {\n            row.columns.forEach((column) => {\n                column.bricks.forEach((brick) => {\n                    if (predicate(brick)) {\n                        brickSequence.push(brick);\n                    }\n                });\n            });\n        });\n\n        return brickSequence;\n    }\n\n    getNextTextBrickId(brickId: string): string {\n        const nextTextBrick = this.getNextTextBrick(brickId);\n\n        return nextTextBrick && nextTextBrick.id;\n    }\n\n    getPreviousTextBrickId(brickId: string): string {\n        const previousTextBrick = this.getPreviousTextBrick(brickId);\n\n        return previousTextBrick && previousTextBrick.id;\n    }\n\n    // end public API\n\n    getNextTextBrick(brickId: string): WallBrick {\n        const nextTextBricks = this.findBricksAfter(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return nextTextBricks[0];\n    }\n\n    getPreviousTextBrick(brickId: string): WallBrick {\n        const previousTextBricks = this.findBrickBefore(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return previousTextBricks[previousTextBricks.length - 1];\n    }\n\n    findBricksAfter(brickId: string, predicate): WallBrick[] {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsAfter = brickIdsSequence.splice(currentBrickIdIndex + 1);\n\n            brickIdsAfter.forEach((brickIdAfter) => {\n                const currentBrick = bricksSequence.find((brick) => {\n                    return brick.id === brickIdAfter;\n                });\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    findBrickBefore(brickId: string, predicate) {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsBefore = brickIdsSequence.splice(0, currentBrickIdIndex);\n\n            brickIdsBefore.forEach((brickIdBefore) => {\n                const currentBrick = bricksSequence.find((brick) => brick.id === brickIdBefore);\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    setLayout(rows: IWallRow[]) {\n        this.rows = rows;\n    }\n\n    traverse(fn: (row: IWallRow) => void) {\n        this.rows.forEach((row) => {\n            fn(row);\n        });\n    }\n}\n","import {Guid} from '../../../modules/utils/utils';\nimport {BrickRegistry} from '../../registry/public_api';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {LayoutWalker} from './layout-walker.class';\n\n/*\n* Modify layout wall rows\n* */\nexport class WallLayout {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry, private layoutWalker: LayoutWalker) {\n    }\n\n    // create new row and one column inside\n    addBrickToNewRow(rowIndex: number, brick: WallBrick, rowId?: string) {\n        const totalRowCount = this.rows.length;\n        const lastRowIndex = totalRowCount - 1;\n\n        // user cannot create row in position more than last row index + 1\n        // todo: remove helper checks, lets face the problem earlier\n        if (rowIndex > (lastRowIndex + 1)) {\n            rowIndex = lastRowIndex + 1;\n        }\n\n        this.createNewRow(rowIndex, rowId || this.generateId());\n\n        this.addBrick(rowIndex, 0, 0, brick);\n    }\n\n    // add only in already existing row and column\n    addBrickToExistingColumn(rowIndex: number, columnIndex: number, brickIndex: number, brick: WallBrick) {\n        const column = this.getColumn(rowIndex, columnIndex);\n\n        if (column) {\n            const bricksCount = column.bricks.length;\n\n            // user cannot put brick in position more than total brick count + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (brickIndex > (bricksCount + 1)) {\n                brickIndex = bricksCount + 1;\n            }\n\n            this.addBrick(rowIndex, columnIndex, brickIndex, brick);\n        }\n    }\n\n    // create new column in existing row\n    addBrickToNewColumn(rowIndex, columnIndex, brick: WallBrick) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            const columnCount = row.columns.length;\n\n            // user cannot create column in position more than total column cound + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (columnIndex > (columnCount + 1)) {\n                columnIndex = columnCount + 1;\n            }\n\n            this.createNewColumn(rowIndex, columnIndex);\n\n            this.addBrick(rowIndex, columnIndex, 0, brick);\n        }\n    }\n\n    moveBrickAfterInNewRow(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            const newRowIndex = afterBrickPosition.rowIndex + 1;\n\n            this.addBrickToNewRow(newRowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickAfterInSameColumn(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            this.addBrickToExistingColumn(\n                afterBrickPosition.rowIndex,\n                afterBrickPosition.columnIndex,\n                afterBrickPosition.brickIndex + index + 1,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInNewRow(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            let beforeBrickPosition;\n\n            if (index === 0) {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            } else {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(movedBrickIds[index - 1]);\n            }\n\n            this.addBrickToNewRow(beforeBrickPosition.rowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInSameColumn(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n            this.addBrickToExistingColumn(\n                beforeBrickPosition.rowIndex,\n                beforeBrickPosition.columnIndex,\n                beforeBrickPosition.brickIndex,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickToNewColumn(movedBrickIds, beforeBrickId, side): void {\n        const movedBricks = movedBrickIds.map((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            return currentMovedBrick;\n        });\n\n        const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n        let columnIndex;\n\n        // todo: move side to constant\n        // todo: search across project for all hard coded variables\n        if (side === 'left') {\n            columnIndex = beforeBrickPosition.columnIndex;\n        } else if (side === 'right') {\n            columnIndex = beforeBrickPosition.columnIndex + 1;\n        }\n\n        movedBricks.forEach((movedBrick, index) => {\n            if (index === 0) {\n                this.addBrickToNewColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    movedBrick\n                );\n            } else {\n                this.addBrickToExistingColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    index,\n                    movedBrick\n                );\n            }\n        });\n    }\n\n    removeBrick(brickId: string): void {\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n\n        const row = this.rows[brickPosition.rowIndex];\n        const column = row.columns[brickPosition.columnIndex];\n\n        // remove brick\n        column.bricks.splice(brickPosition.brickIndex, 1);\n\n        // remove column if there are no bricks inside\n        if (column.bricks.length === 0) {\n            row.columns.splice(brickPosition.columnIndex, 1);\n\n            // remove row if there are no columns inside\n            if (row.columns.length === 0) {\n                this.rows.splice(brickPosition.rowIndex, 1);\n\n                // if there are no rows, create default\n                if (this.rows.length === 0) {\n                    this.rows.push(this.initializeNewRow(this.generateId()));\n                }\n            }\n        }\n    }\n\n    // COMMANDS\n    private addBrick(rowIndex, columnIndex, brickIndex, brick) {\n        this.rows[rowIndex].columns[columnIndex].bricks.splice(brickIndex, 0, brick);\n    }\n\n    private getColumn(rowIndex: number, columnIndex: number): IWallColumn {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            return row.columns[columnIndex];\n        } else {\n            return null;\n        }\n    }\n\n    private createNewRow(rowIndex: number, rowId: string): void {\n        this.rows.splice(rowIndex, 0, this.initializeNewRow(rowId));\n    }\n\n    private createNewColumn(rowIndex: number, columnIndex: number): void {\n        this.rows[rowIndex].columns.splice(columnIndex, 0, this.initializeNewColumn());\n    }\n\n    private initializeNewRow(rowId: string): IWallRow {\n        return {\n            id: rowId,\n            columns: [\n                this.initializeNewColumn()\n            ]\n        };\n    }\n\n    private initializeNewColumn(): IWallColumn {\n        return {\n            bricks: []\n        };\n    }\n\n    private generateId(): string {\n        return (new Guid()).get();\n    }\n}\n","import {Subject, Subscription} from 'rxjs';\nimport {Guid} from '../../../modules/utils/utils';\nimport {IBrickDefinition} from '../../model/interfaces/brick-definition.interface';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallDefinition} from '../../model/interfaces/wall-definition.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {AddBrickEvent} from './events/add-brick.event';\nimport {BeforeChangeEvent} from './events/before-change.event';\nimport {MoveBrickEvent} from './events/move-brick.event';\nimport {RemoveBrickEvent} from './events/remove-brick.event';\nimport {RemoveBricksEvent} from './events/remove-bricks.event';\nimport {SetPlanEvent} from './events/set-plan.event';\nimport {TurnBrickIntoEvent} from './events/turn-brick-into.event';\nimport {UpdateBrickStateEvent} from './events/update-brick-state.event';\nimport {LayoutWalker} from './layout-walker.class';\nimport {WallLayout} from './wall-layout.model';\nimport {IWallPlugin} from '../../model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Contains Wall data structure and registers API for data manipulation.\n* Responsible to IWallDefinition->Layout and Layout->IWallDefinition transformation\n* */\nexport class WallCorePlugin implements IWallPlugin {\n    name = 'core';\n    version = '0.0.0';\n\n    // sub plugins\n    private layout: WallLayout;\n    private layoutWalker: LayoutWalker = new LayoutWalker(this.brickRegistry);\n\n    private wallModel: IWallModel;\n\n    private DEFAULT_BRICK = 'text';\n\n    private events: Subject<any> = new Subject();\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // START API\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        [\n            'getRowCount',\n            'getBrickTag',\n            'getPreviousBrickId',\n            'getNextBrickId',\n            'getColumnCount',\n            'getBrickIds',\n            'getBricksCount',\n            'getNextTextBrickId',\n            'getPreviousTextBrickId',\n            'filterBricks',\n            'isBrickAheadOf'\n        ].forEach((methodName) => {\n            this[methodName] = this.layoutWalker[methodName].bind(this.layoutWalker);\n        });\n\n        this.wallModel.registerApi(this.name, this);\n    }\n\n    // old\n\n    // COMMAND METHODS\n    setPlan(plan: IWallDefinition) {\n        this.dispatch(new BeforeChangeEvent(SetPlanEvent));\n\n        this.layout = new WallLayout(this.brickRegistry, this.layoutWalker);\n\n        this.layoutWalker.setLayout(this.layout.rows);\n\n        // build tree\n        plan.layout.bricks.forEach((row, rowIndex) => {\n            row.columns.forEach((column, columnIndex) => {\n                column.bricks.forEach((brick, brickIndex) => {\n                    const planBrick = plan.bricks.find((currentPlanBrick) => {\n                        return brick.id === currentPlanBrick.id;\n                    });\n\n                    const wallBrick = this.restoreBrick(planBrick);\n\n                    // first column in new row\n                    if (columnIndex === 0) {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewRow(rowIndex, wallBrick, row.id);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    } else {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewColumn(rowIndex, columnIndex, wallBrick);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    }\n                });\n            });\n        });\n\n        this.dispatch(new SetPlanEvent());\n    }\n\n    addBrickAfterBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex + 1, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex + 1,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    addBrickBeforeBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    // Add text brick to the bottom of wall in the new row\n    addDefaultBrick() {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickCount = this.layoutWalker.getBricksCount();\n        const newBrick = this.createBrick(this.DEFAULT_BRICK);\n        const rowIndex = brickCount ? this.layoutWalker.getRowCount() + 1 : 0;\n\n        this.layout.addBrickToNewRow(rowIndex, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n    }\n\n    addBrickAtStart(tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const newBrick = this.createBrick(tag, state);\n\n        this.layout.addBrickToNewRow(0, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    updateBrickState(brickId, brickState): void {\n        this.dispatch(new BeforeChangeEvent(UpdateBrickStateEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const oldState = JSON.parse(JSON.stringify(brick.getState()));\n\n        brick.updateState(JSON.parse(JSON.stringify(brickState)));\n\n        this.dispatch(new UpdateBrickStateEvent(\n            brickId,\n            JSON.parse(JSON.stringify(brick.getState())),\n            oldState\n        ));\n    }\n\n    // todo: should be async operation\n    removeBrick(brickId: string): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBrickEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextTextBrick(brickId);\n        const previousTextBrick = this.layoutWalker.getPreviousTextBrick(brickId);\n\n        this.clearBrickResources(brickId).then(() => {\n        });\n\n        const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n        this.layout.removeBrick(brickId);\n\n        this.dispatch(new RemoveBrickEvent(\n            removedBrick.getSnapshot(),\n            previousTextBrick && previousTextBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    // todo: should be async operation\n    removeBricks(brickIds): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBricksEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextBrick(brickIds[brickIds.length - 1]);\n        const previousBrick = this.layoutWalker.getPreviousBrick(brickIds[0]);\n\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        Promise.all(clearPromises).then(() => {\n        });\n\n        const removedBricks = brickIds.map((brickId) => {\n            const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n            this.layout.removeBrick(brickId);\n\n            return {\n                id: removedBrick.id,\n                tag: removedBrick.tag,\n                state: removedBrick.state\n            };\n        });\n\n        this.dispatch(new RemoveBricksEvent(\n            removedBricks,\n            previousBrick && previousBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    /**\n     * Remove all bricks from layout\n     * Clear all bricks external dependencies\n     */\n    clear(): Promise<any> {\n        const brickIds = this.layoutWalker.getBrickIds();\n\n        // todo: replace it after removeBricks will be async\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        return Promise.all(clearPromises).then(() => {\n            brickIds.forEach((brickId) => {\n                this.layout.removeBrick(brickId);\n            });\n        });\n    }\n\n    turnBrickInto(brickId: string, newTag: string, state: any = {}) {\n        this.dispatch(new BeforeChangeEvent(TurnBrickIntoEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n        const oldTag = brick.tag;\n\n        brick\n            .turnInto(newTag)\n            .updateState(state);\n\n        this.dispatch(new TurnBrickIntoEvent(brickId, newTag, oldTag));\n    }\n\n    moveBrickAfterBrickId(movedBrickIds: string[], afterBrickId: string): void {\n        if (movedBrickIds.indexOf(afterBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(afterBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickAfterInNewRow(afterBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickAfterInSameColumn(afterBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, afterBrickId));\n        }\n    }\n\n    moveBrickBeforeBrickId(movedBrickIds: string[], beforeBrickId: string): void {\n        if (movedBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(beforeBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickBeforeInNewRow(beforeBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickBeforeInSameColumn(beforeBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, beforeBrickId));\n        }\n    }\n\n    moveBrickToNewColumn(targetBrickIds: string[], beforeBrickId: string, side: string): void {\n        if (targetBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            this.layout.moveBrickToNewColumn(targetBrickIds, beforeBrickId, side);\n\n            this.dispatch(new MoveBrickEvent(targetBrickIds, beforeBrickId));\n        }\n    }\n\n    // QUERY METHODS\n    getPlan(): IWallDefinition {\n        const plan = {\n            bricks: [],\n            layout: {\n                bricks: []\n            }\n        };\n\n        this.layoutWalker.traverse((row: IWallRow) => {\n            const columns = [];\n\n            row.columns.forEach((column: IWallColumn) => {\n                const planColumn = {\n                    bricks: []\n                };\n\n                column.bricks.forEach((brick: WallBrick) => {\n                    plan.bricks.push({\n                        id: brick.id,\n                        tag: brick.tag,\n                        meta: brick.meta,\n                        data: brick.state\n                    });\n\n                    planColumn.bricks.push({\n                        id: brick.id\n                    });\n                });\n\n                columns.push(planColumn);\n            });\n\n            plan.layout.bricks.push({\n                columns,\n                id: row.id\n            });\n        });\n\n        return JSON.parse(JSON.stringify(plan));\n    }\n\n    sortBrickIdsByLayoutOrder(brickIds: string[]) {\n        const bricksSequence = this.layoutWalker.getBrickSequence(() => true);\n\n        return bricksSequence\n            .filter((brick) => brickIds.indexOf(brick.id) !== -1)\n            .map((brick) => brick.id);\n    }\n\n    traverse(fn): void {\n        return this.layoutWalker.traverse((row: IWallRow) => {\n            const preparedRow = {\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brick) => brick.getSnapshot())\n                    };\n                })\n            };\n\n            fn(preparedRow);\n        });\n    }\n\n    getBrickSnapshot(brickId: string): IBrickSnapshot {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        return brick ? brick.getSnapshot() : null;\n    }\n\n    getBrickResourcePaths(brickId: string): string[] {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (!brickSpecification.getBrickResourcePaths) {\n            return [];\n        }\n\n        return brickSpecification.getBrickResourcePaths(brick.getSnapshot());\n    }\n\n    getBrickTextRepresentation(brickId: string): string {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.textRepresentation) {\n            const brickTextRepresentation = new brickSpecification.textRepresentation(brick.getSnapshot());\n\n            return brickTextRepresentation.getText() || '';\n        } else {\n            return '';\n        }\n    }\n\n    subscribe(callback): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    isRegisteredBrick(tag: string): boolean {\n        return Boolean(this.brickRegistry.get(tag));\n    }\n\n    private dispatch(e: any): void {\n        this.events.next(e);\n    }\n\n    private createBrick(tag, state?: any) {\n        const id = this.generateGuid();\n        const meta = {};\n        const brick = new WallBrick(id, tag, meta);\n\n        if (state) {\n            brick.updateState(state);\n        }\n\n        return brick;\n    }\n\n    private restoreBrick(brickDefinition: IBrickDefinition): WallBrick {\n        const brick = new WallBrick(\n            brickDefinition.id,\n            brickDefinition.tag,\n            brickDefinition.meta\n        );\n\n        brick.updateState(brickDefinition.data);\n\n        return brick;\n    }\n\n    private clearBrickResources(brickId): Promise<any> {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.destructor) {\n            return brickSpecification.destructor(brick.getSnapshot());\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    private generateGuid(): string {\n        return (new Guid()).get();\n    }\n}\n","export class WallPluginInitializedEvent {\n    constructor(public pluginName: string) {\n    }\n}\n","import {Observable, Subject, Subscription} from 'rxjs';\nimport {IWallPlugin} from './interfaces/wall-plugin.interface';\nimport {WallPluginInitializedEvent} from './events/wall-plugin-initialized.event';\nimport {IWallModelConfig} from './interfaces/wall-model-config.interface';\nimport {IWallModel} from './interfaces/wall-model.interface';\nimport {IWallCorePluginApi} from './interfaces/wall-core-plugin-api.interface';\nimport {BrickRegistry} from '../registry/brick-registry.service';\n\nexport class WallModel implements IWallModel {\n    version: '0.0.0';\n\n    // plugin api\n    api: {\n        [apiName: string]: any;\n        core: IWallCorePluginApi\n    } = {\n        core: null\n    };\n\n    private events$: Observable<any> = new Subject();\n\n    private plugins: Map<string, IWallPlugin> = new Map();\n\n    constructor(private brickRegistry: BrickRegistry, config: IWallModelConfig) {\n        // initialize 3rd party plugins\n        config.plugins.forEach((plugin) => this.initializePlugin(plugin));\n    }\n\n    // register external API\n    registerApi(apiName: string, api: object) {\n        this.api[apiName] = api;\n    }\n\n    destroy() {\n        this.plugins.forEach((plugin) => this.destroyPlugin(plugin));\n    }\n\n    // proxy events from all plugins\n    subscribe(callback): Subscription {\n        return this.events$.subscribe(callback);\n    }\n\n    private dispatch(e: any): void {\n        (this.events$ as Subject<any>).next(e);\n    }\n\n    private initializePlugin(plugin: IWallPlugin) {\n        plugin.onWallInitialize(this);\n\n        this.plugins.set(plugin.name, plugin);\n\n        this.dispatch(new WallPluginInitializedEvent(plugin.name));\n    }\n\n    private destroyPlugin(plugin: IWallPlugin) {\n        if (plugin.onWallPluginDestroy) {\n            plugin.onWallPluginDestroy();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {IBrickSpecification} from './interfaces/brick-specification.interface';\n\n@Injectable()\nexport class BrickRegistry {\n    private bricks: IBrickSpecification[] = [];\n\n    // todo: add unregister functionality\n\n    register(brickConfiguration: IBrickSpecification) {\n        this.bricks.push(brickConfiguration);\n    }\n\n    get(tag: string): IBrickSpecification {\n        return this.bricks.find((brickConfiguration: IBrickSpecification) => brickConfiguration.tag === tag);\n    }\n\n    getAll(): IBrickSpecification[] {\n        return this.bricks;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {WallCorePlugin} from '../plugins/core/wall-core.plugin';\nimport {WallModel} from '../model/wall.model';\nimport {BrickRegistry} from '../registry/brick-registry.service';\nimport {IWallModel} from '../model/interfaces/wall-model.interface';\nimport {IWallModelConfig} from '../model/interfaces/wall-model-config.interface';\n\n@Injectable()\nexport class WallModelFactory {\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    create(config?: IWallModelConfig): IWallModel {\n        const defaultConfig = {\n            plan: {\n                bricks: [],\n                layout: {\n                    bricks: []\n                }\n            },\n            plugins: []\n        };\n\n        config = {\n            ...defaultConfig,\n            ...config\n        };\n\n        // inject core plugin as initial first plugin\n        // in this way factory will decouple WallModel from WallCorePlugin\n        config.plugins.unshift(new WallCorePlugin(this.brickRegistry));\n\n        const wallModel = new WallModel(\n            this.brickRegistry,\n            config\n        );\n\n        wallModel.api.core.setPlan(config.plan);\n\n        return wallModel;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './placeholder.component.html',\n    styleUrls: ['./placeholder.component.scss']\n})\nexport class PlaceholderComponent {\n    x: number;\n    y: number;\n    size: number;\n    isHorizontal: boolean;\n\n    setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.isHorizontal = isHorizontal;\n    }\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector\n} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\n\n@Injectable()\nexport class PlaceholderRenderer {\n    private placeholderComponentRef: ComponentRef<PlaceholderComponent> = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private injector: Injector) {\n    }\n\n    render(x: number, y: number, size: number, isHorizontal: boolean = true) {\n        if (!this.placeholderComponentRef) {\n            this.renderPlaceholderComponent();\n        }\n\n        this.setCoordinate(x, y, size, isHorizontal);\n    }\n\n    clear() {\n        if (this.placeholderComponentRef) {\n            this.removePlaceholderComponent();\n        }\n    }\n\n    private renderPlaceholderComponent() {\n        this.placeholderComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PlaceholderComponent)\n            .create(this.injector);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.placeholderComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.placeholderComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n        document.body.appendChild(domElem);\n    }\n\n    private removePlaceholderComponent() {\n        this.appRef.detachView(this.placeholderComponentRef.hostView);\n        this.placeholderComponentRef.destroy();\n\n        this.placeholderComponentRef = null;\n    }\n\n    private setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.placeholderComponentRef.instance.setCoordinate(x, y, size, isHorizontal);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\nimport {PlaceholderRenderer} from './placeholder-renderer.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        PlaceholderComponent\n    ],\n    providers: [\n        PlaceholderRenderer\n    ],\n    entryComponents: [\n        PlaceholderComponent\n    ]\n})\nexport class PlaceholderRendererModule {\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Component, ElementRef, EventEmitter, Inject, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IFocusedBrick} from '../wall/interfaces/focused-brick.interface';\n\n@Component({\n    selector: 'wall-canvas',\n    templateUrl: './wall-canvas-component.component.html',\n    styleUrls: ['./wall-canvas.component.scss']\n})\nexport class WallCanvasComponent implements OnChanges {\n    @Input() wallModel: IWallModel;\n    @Input() rows: IWallRow[] = [];\n\n    @Input() selectedBricks: string[] = null;\n    @Input() focusedBrick: IFocusedBrick = null;\n    @Input() isMediaInteractionEnabled$: Observable<boolean>;\n\n    @Output() canvasClick: EventEmitter<any> = new EventEmitter();\n    @Output() onBrickStateChanged: EventEmitter<any> = new EventEmitter();\n\n    // public API for sub components\n    focusedBrick$: Subject<IFocusedBrick> = new Subject();\n    selectedBricks$: Subject<string[]> = new Subject();\n\n    doc: any = null;\n\n    @ViewChild('expander') expander: ElementRef;\n\n    constructor(@Inject(DOCUMENT) doc) {\n        this.doc = doc;\n    }\n\n    onEditorClick(e: any) {\n        if (e.target === this.expander.nativeElement) {\n            this.canvasClick.emit();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.focusedBrick && changes.focusedBrick.currentValue) {\n            this.focusedBrick$.next(changes.focusedBrick.currentValue);\n        }\n\n        if (changes.selectedBricks) {\n            this.selectedBricks$.next(changes.selectedBricks.currentValue || []);\n        }\n    }\n\n    brickStateChanged(brickId: string, brickState: any) {\n        this.onBrickStateChanged.emit({\n            brickId,\n            brickState\n        });\n    }\n\n    trackRowsBy(index, item): string {\n        return item.id;\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationUpdatedEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {SpotDirective} from './directive/spot.directive';\nimport {ISpotPosition, ISpotSize} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\n\nexport class SpotModel {\n    id: SpotId;\n    data: any;\n    position: ISpotPosition;\n    size: ISpotSize;\n\n    private instance: SpotDirective;\n\n    constructor(instance: SpotDirective) {\n        this.id = instance.id;\n        this.instance = instance;\n\n        this.updateInfo();\n    }\n\n    updateInfo() {\n        const {position, size, data} = this.instance.getInfo();\n\n        this.data = data;\n        this.size = size;\n        this.position = position;\n    }\n\n    isCross13Line(y) {\n        return (y > this.position.y) && (y < this.position.y + this.size.height);\n    }\n\n    getMinimalDistanceToPoint(x: number, y: number) {\n        let minimalDistance = null;\n\n        // distances to horizontal lines\n        const distanceToLine12 = Math.abs(this.position.y - y);\n        const distanceToLine43 = Math.abs((this.position.y + this.size.height) - y);\n\n        // distances to vertical lines\n        const distanceToLine14 = Math.abs(this.position.x - x);\n        const distanceToLine23 = Math.abs((this.position.x + this.size.width) - x);\n\n        const minDistanceToHorizontalLine = Math.min.apply(null, [distanceToLine12, distanceToLine43]);\n        const minDistanceToVerticalLine = Math.min.apply(null, [distanceToLine14, distanceToLine23]);\n\n        if ((x > this.position.x) && (x < this.position.x + this.size.width)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToHorizontalLine;\n        } else if ((y > this.position.y) && (y < this.position.y + this.size.height)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToVerticalLine;\n        } else {\n            // point doesn't cross beacon, calculate shortest distance to beacon\n            minimalDistance = Math.sqrt(\n                minDistanceToHorizontalLine *\n                minDistanceToHorizontalLine +\n                minDistanceToVerticalLine *\n                minDistanceToVerticalLine\n            );\n        }\n\n        return minimalDistance;\n    }\n\n    getDistanceToTopLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToBottomLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + this.size.height - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToLeftCenterPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + (this.size.height / 2) - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    isPointInsideSpot(x: number, y: number): boolean {\n        if ((x > this.position.x) && (x < this.position.x + this.size.width) &&\n            (y > this.position.y) && (y < this.position.y + this.size.height)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {throttleTime} from 'rxjs/operators';\nimport {SpotDirective} from './directive/spot.directive';\nimport {LocationUpdatedEvent} from './events/location-updated.event';\nimport {IDistanceToSpot} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class RadarCoordinator {\n    private spots: Map<SpotId, SpotModel> = new Map();\n\n    private events: Subject<any> = new Subject();\n\n    private mouseMove$: Observable<MouseEvent>;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private zone: NgZone) {\n        this.mouseMove$ = fromEvent(doc, 'mousemove');\n\n        const throttleMouseTime = 30;\n\n        // run outside Angular Zone in order to decrease performance hit\n        this.zone.runOutsideAngular(() => {\n            this.mouseMove$\n                .pipe(\n                    throttleTime(throttleMouseTime)\n                )\n                .subscribe((event) => {\n                    this.updateSpotsInfo();\n                    this.updateLocationPosition(event.clientX, event.clientY);\n                });\n        });\n    }\n\n    register(spotId: SpotId, spotInstance: SpotDirective) {\n        this.spots.set(spotId, new SpotModel(spotInstance));\n    }\n\n    unRegister(spotId: SpotId) {\n        this.spots.delete(spotId);\n    }\n\n    updateSpotsInfo() {\n        this.spots.forEach((spot) => spot.updateInfo());\n    }\n\n    filterSpots(predicate: (spot: SpotModel) => void): SpotModel[] {\n        return Array.from(this.spots)\n            .map(([id, spot]) => spot)\n            .filter((spot) => predicate(spot));\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n\n    private updateLocationPosition(x: number, y: number) {\n        const sortedSpots: IDistanceToSpot[] = [];\n\n        this.spots.forEach((spot) => {\n            const minimalDistance = spot.getMinimalDistanceToPoint(x, y);\n            const topLeftPointDistance = spot.getDistanceToTopLeftPoint(x, y);\n            const bottomLeftPointDistance = spot.getDistanceToBottomLeftPoint(x, y);\n            const centerLeftPointDistance = spot.getDistanceToLeftCenterPoint(x, y);\n            const isCross13Line = spot.isCross13Line(y);\n\n            sortedSpots.push({\n                minimalDistance,\n                topLeftPointDistance,\n                bottomLeftPointDistance,\n                centerLeftPointDistance,\n                isCross13Line,\n                data: spot.data\n            });\n        });\n\n        this.events.next(new LocationUpdatedEvent(sortedSpots));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class Radar {\n    private events: Subject<any> = new Subject();\n\n    constructor(private radarCoordinator: RadarCoordinator) {\n        this.radarCoordinator.subscribe((event) => {\n            this.events.next(event);\n        });\n    }\n\n    filterSpots(fn: (spot: SpotModel) => void): SpotModel[] {\n        return this.radarCoordinator.filterSpots(fn);\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {WallCanvasComponent} from '../../wall-canvas.component';\nimport {Radar} from '../../../../../modules/radar/radar.service';\nimport {LocationUpdatedEvent} from '../../../../../modules/radar/events/location-updated.event';\nimport {IWallComponent} from '../../../wall/interfaces/wall-component/wall-component.interface';\n\n@Component({\n    selector: 'wall-canvas-brick',\n    templateUrl: './wall-canvas-brick.component.html',\n    styleUrls: ['./wall-canvas-brick.component.scss']\n})\nexport class WallCanvasBrickComponent implements OnInit, OnDestroy, OnChanges {\n    // todo add type\n    @Input() brick: any;\n\n    @ViewChild('brickContainer', {read: ViewContainerRef}) container: ViewContainerRef;\n\n    selected = false;\n\n    isMouseNear = false;\n\n    spot: any;\n\n    isMediaInteractionEnabled = true;\n\n    private componentReference: ComponentRef<any>;\n\n    private minimalDistanceToMouse = 100;\n\n    // subscriptions\n    private stateChangesSubscription: Subscription;\n    private radarSubscription: Subscription;\n    private focusedBrickSubscription: Subscription;\n    private selectedBricksSubscription: Subscription;\n    private isMediaInteractionEnabledSubscription: Subscription;\n\n    constructor(private injector: Injector,\n                private resolver: ComponentFactoryResolver,\n                private radar: Radar,\n                private cdRef: ChangeDetectorRef,\n                private wallCanvasComponent: WallCanvasComponent) {\n    }\n\n    ngOnInit() {\n        this.spot = {\n            brickId: this.brick.id,\n            isPickOutItem: true,\n            isBeacon: true\n        };\n\n        this.componentReference = this.renderBrick();\n\n        this.radarSubscription = this.radar.subscribe((e) => {\n            if (e instanceof LocationUpdatedEvent) {\n                const currentSpot = e.spots.find((spot) => spot.data.brickId === this.brick.id);\n\n                if (currentSpot.isCross13Line) {\n                    this.isMouseNear = currentSpot.topLeftPointDistance < this.minimalDistanceToMouse;\n                } else {\n                    this.isMouseNear = false;\n                }\n\n                this.cdRef.detectChanges();\n            }\n        });\n\n        this.focusedBrickSubscription = this.wallCanvasComponent.focusedBrick$.subscribe((focusedBrick) => {\n            if (focusedBrick.id === this.brick.id) {\n                this.callInstanceApi('onWallFocus', focusedBrick.context);\n            }\n        });\n\n        this.selectedBricksSubscription = this.wallCanvasComponent.selectedBricks$.subscribe((selectedBricks) => {\n            this.selected = !Boolean(selectedBricks.indexOf(this.brick.id) === -1);\n        });\n\n        this.isMediaInteractionEnabledSubscription = this.wallCanvasComponent.isMediaInteractionEnabled$\n            .subscribe((isMediaInteractionEnabled) => this.isMediaInteractionEnabled = isMediaInteractionEnabled);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.brick && !changes.brick.firstChange && changes.brick.currentValue) {\n            this.componentReference.instance.state = this.brick.state;\n\n            this.callInstanceApi('onWallStateChange', this.componentReference.instance.state);\n        }\n    }\n\n    ngOnDestroy() {\n        this.radarSubscription.unsubscribe();\n        this.focusedBrickSubscription.unsubscribe();\n        this.selectedBricksSubscription.unsubscribe();\n        this.isMediaInteractionEnabledSubscription.unsubscribe();\n\n        if (this.stateChangesSubscription) {\n            this.stateChangesSubscription.unsubscribe();\n        }\n    }\n\n    private callInstanceApi(methodName: string, data?: any) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName](data);\n        }\n    }\n\n    private renderBrick() {\n        const factory = this.resolver.resolveComponentFactory(this.brick.component);\n\n        const componentReference = this.container.createComponent(factory, null, this.injector);\n\n        const componentInstance = componentReference.instance as IWallComponent;\n\n        componentInstance.id = this.brick.id;\n        componentInstance.state = this.brick.state;\n        componentInstance.wallModel = this.wallCanvasComponent.wallModel;\n\n        if (componentInstance.stateChanges) {\n            this.stateChangesSubscription = componentInstance.stateChanges.subscribe((newState) => {\n                this.wallCanvasComponent.brickStateChanged(this.brick.id, newState);\n            });\n        }\n\n        return componentReference;\n    }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'wall-canvas-row',\n    templateUrl: './wall-canvas-row.component.html',\n    styleUrls: ['./wall-canvas-row.component.scss']\n})\nexport class WallCanvasRowComponent {\n    @Input() row: any; // todo add type\n\n    trackColumnsBy(index): number {\n        return index;\n    }\n\n    trackBricksBy(index, item) {\n        return item.hash;\n    }\n}\n","export class SelectedBrickEvent {\n    constructor(public selectedBrickIds: string[]) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {SelectedBrickEvent} from './events/selected-brick.event';\nimport {IFocusedBrick} from './interfaces/focused-brick.interface';\nimport {IWallUiApi} from './interfaces/ui-api.interface';\nimport {IFocusContext} from './interfaces/wall-component/wall-component-focus-context.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {RemoveBricksEvent} from '../../plugins/core/events/remove-bricks.event';\nimport {MoveBrickEvent} from '../../plugins/core/events/move-brick.event';\nimport {TurnBrickIntoEvent} from '../../plugins/core/events/turn-brick-into.event';\nimport {BeforeChangeEvent} from '../../plugins/core/events/before-change.event';\n\n@Injectable()\nexport class WallViewModel implements IWallUiApi {\n    wallModel: IWallModel = null;\n\n    events: Subject<any> = new Subject();\n\n    // UI\n    focusedBrick: IFocusedBrick = null;\n    selectedBricks: string[] = [];\n    isMediaInteractionEnabled$: Observable<boolean> = new BehaviorSubject(true);\n    canvasLayout: IWallRow[] = [];\n\n    private wallModelSubscription: Subscription;\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    getCanvasLayout(): IWallRow[] {\n        const rows = [];\n\n        this.wallModel.api.core.traverse((row) => {\n            rows.push({\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brickConfig) => {\n                            const component = this.brickRegistry.get(brickConfig.tag).component;\n\n                            return {\n                                id: brickConfig.id,\n                                hash: brickConfig.tag + brickConfig.id,\n                                state: brickConfig.state,\n                                component\n                            };\n                        })\n                    };\n                })\n            });\n        });\n\n        return rows;\n    }\n\n    initialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        // initialize view core API\n        const coreApi = [\n            // SELECTION\n            'getSelectedBrickIds',\n            'selectBrick',\n            'selectBricks',\n            'addBrickToSelection',\n            'removeBrickFromSelection',\n            'unSelectBricks',\n\n            // FOCUS\n            'focusOnBrickId',\n            'getFocusedBrickId',\n            'focusOnPreviousTextBrick',\n            'focusOnNextTextBrick',\n\n            // REMOVE BRICK\n            'removeBrick',\n            'removeBricks',\n\n            // BEHAVIOUR\n            'enableMediaInteraction',\n            'disableMediaInteraction',\n\n            // CLIENT\n            'subscribe'\n        ].reduce((result, methodName) => {\n            if (this[methodName].bind) {\n                result[methodName] = this[methodName].bind(this);\n            } else {\n                result[methodName] = this[methodName];\n            }\n\n            return result;\n        }, {});\n\n        // protect API from extending\n        Object.seal(coreApi);\n\n        // register methods on model itself\n        this.wallModel.registerApi('ui', coreApi);\n\n        this.wallModelSubscription = this.wallModel.api.core.subscribe((event) => {\n            if (event instanceof TurnBrickIntoEvent) {\n                this.focusOnBrickId(event.brickId);\n            }\n\n            if (event instanceof MoveBrickEvent) {\n                this.unSelectBricks();\n            }\n\n            if (event instanceof RemoveBricksEvent) {\n                if (!this.wallModel.api.core.getBricksCount()) {\n                    this.wallModel.api.core.addDefaultBrick();\n                }\n            }\n\n            if (!(event instanceof BeforeChangeEvent)) {\n                this.canvasLayout = this.getCanvasLayout();\n            }\n        });\n\n        this.canvasLayout = this.getCanvasLayout();\n    }\n\n    /**\n     * @public-api\n     */\n    selectBrick(brickId: string): void {\n        this.selectedBricks = [brickId];\n\n        this.focusedBrick = null;\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    selectBricks(brickIds: string[]) {\n        if (JSON.stringify(brickIds) !== JSON.stringify(this.selectedBricks)) {\n            this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(brickIds);\n\n            const selectedBricksClone = this.selectedBricks.slice(0);\n\n            this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n        }\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    addBrickToSelection(brickId: string): void {\n        const selectedBrickIds = this.selectedBricks.slice(0);\n\n        selectedBrickIds.push(brickId);\n\n        this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(selectedBrickIds);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    removeBrickFromSelection(brickId: string): void {\n        const brickIdIndex = this.selectedBricks.indexOf(brickId);\n\n        this.selectedBricks.splice(brickIdIndex, 1);\n\n        this.selectedBricks = this.selectedBricks.slice(0);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    unSelectBricks(): void {\n        this.selectedBricks = [];\n\n        this.dispatch(new SelectedBrickEvent([]));\n    }\n\n    /**\n     * @public-api\n     */\n    getSelectedBrickIds(): string[] {\n        return this.selectedBricks.slice(0);\n    }\n\n    /**\n     * @public-api\n     */\n    getFocusedBrickId(): string {\n        return this.focusedBrick && this.focusedBrick.id;\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnBrickId(brickId: string, focusContext?: IFocusContext): void {\n        this.focusedBrick = {\n            id: brickId,\n            context: focusContext\n        };\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnPreviousTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(brickId);\n\n        if (previousTextBrickId) {\n            this.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnNextTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(brickId);\n\n        if (nextTextBrickId) {\n            this.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    enableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(true);\n    }\n\n    /**\n     * @public-api\n     */\n    disableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(false);\n    }\n\n    /**\n     * @public-api\n     */\n    subscribe(callback: any): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBrick(brickId: string) {\n        this.removeBricks([brickId]);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBricks(brickIds: string[]) {\n        const currentBrickIds = this.wallModel.api.core.getBrickIds();\n\n        if (currentBrickIds.length > 1) {\n            this.wallModel.api.core.removeBricks(brickIds);\n        } else if (currentBrickIds.length === 1) {\n            const brickSnapshot = this.wallModel.api.core.getBrickSnapshot(currentBrickIds[0]);\n\n            if (brickSnapshot.tag !== 'text' || brickSnapshot.state.text) {\n                this.wallModel.api.core.removeBricks(brickIds);\n            } else {\n                this.focusOnBrickId(currentBrickIds[0]);\n            }\n        }\n    }\n\n    // canvas interaction\n    onCanvasClick() {\n        // check whether the last element is empty text brick\n        // which is inside one column row\n\n        const rowCount = this.wallModel.api.core.getRowCount();\n        const brickIds = this.wallModel.api.core.getBrickIds();\n\n        if (rowCount > 0\n            && this.wallModel.api.core.getColumnCount(rowCount - 1) === 1\n            && brickIds.length) {\n            const lastBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(brickIds[brickIds.length - 1]);\n\n            if (lastBrickSnapshot.tag === 'text' && !lastBrickSnapshot.state.text) {\n                this.focusOnBrickId(lastBrickSnapshot.id);\n            } else {\n                this.wallModel.api.core.addDefaultBrick();\n            }\n        } else {\n            this.wallModel.api.core.addDefaultBrick();\n        }\n    }\n\n    // canvas interaction\n    onBrickStateChanged(brickId: string, brickState: any): void {\n        this.wallModel.api.core.updateBrickState(brickId, brickState);\n    }\n\n    reset() {\n        this.wallModelSubscription.unsubscribe();\n\n        this.wallModelSubscription = null;\n\n        this.focusedBrick = null;\n\n        this.unSelectBricks();\n    }\n\n    private dispatch(e) {\n        this.events.next(e);\n    }\n}\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {WallViewModel} from './wall-view.model';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallConfiguration} from './interfaces/wall-configuration.interface';\n\n@Component({\n    selector: 'wall',\n    templateUrl: './wall.component.html',\n    styleUrls: ['./wall.component.scss'],\n    providers: [\n        WallViewModel\n    ]\n})\nexport class WallComponent implements OnChanges, OnDestroy {\n    @Input() model: IWallModel = null;\n    @Input() configuration: IWallConfiguration = null;\n\n    constructor(public wallViewModel: WallViewModel) {\n    }\n\n    // click on empty space\n    onCanvasClick() {\n        this.wallViewModel.onCanvasClick();\n    }\n\n    onBrickStateChanged(event) {\n        this.wallViewModel.onBrickStateChanged(event.brickId, event.brickState);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.model) {\n            if (!changes.model.firstChange) {\n                this.cleanUp();\n            }\n\n            this.initialize();\n        }\n    }\n\n    ngOnDestroy() {\n        this.cleanUp();\n    }\n\n    private initialize() {\n        // initialize view model by business model\n        this.wallViewModel.initialize(this.model);\n    }\n\n    private cleanUp() {\n        this.wallViewModel.reset();\n    }\n}\n","export class StartWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class StopWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class WorkInProgressEvent {\n    constructor(public mousePosition: {\n        clientX: number;\n        clientY: number;\n    }) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {StartWorkingEvent} from './events/start-working.event';\nimport {StopWorkingEvent} from './events/stop-working.event';\nimport {WorkInProgressEvent} from './events/work-in-progress.event';\n\n@Injectable()\nexport class TowCoordinator {\n    events: Subject<any> = new Subject();\n\n    // start track when slave start working\n    private isSlaveWorking = false;\n\n    constructor() {\n        document.addEventListener('dragover', (event: DragEvent) => {\n            if (this.isSlaveWorking) {\n                event.preventDefault();\n\n                event.dataTransfer.dropEffect = 'move';\n\n                this.slaveWorkProgress(event.clientX, event.clientY);\n            }\n        });\n    }\n\n    slaveStartWorking(id: string) {\n        this.isSlaveWorking = true;\n\n        this.events.next(new StartWorkingEvent(id));\n    }\n\n    slaveWorkProgress(clientX: number, clientY: number) {\n        this.events.next(new WorkInProgressEvent({\n            clientX,\n            clientY\n        }));\n    }\n\n    slaveStopWorking(id) {\n        this.isSlaveWorking = false;\n\n        this.events.next(new StopWorkingEvent(id));\n    }\n}\n","import {Directive, ElementRef, HostListener, Input, OnInit, Renderer2} from '@angular/core';\nimport {TowCoordinator} from '../tow-coordinator.service';\n\n// Notify Tow Coordinator about drag operation\n@Directive({selector: '[tow-slave]'})\nexport class TowSlaveDirective implements OnInit {\n    @Input('tow-slave') id;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private towCoordinator: TowCoordinator) {\n    }\n\n    @HostListener('dragstart', ['$event'])\n    dragStart(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n\n        event.dataTransfer.setData('FAKE', JSON.stringify({}));\n\n        this.towCoordinator.slaveStartWorking(this.id);\n    }\n\n    @HostListener('drag', ['$event'])\n    drag(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n    }\n\n    @HostListener('dragend', ['$event'])\n    dragEnd(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.towCoordinator.slaveStopWorking(this.id);\n    }\n\n    ngOnInit() {\n        this.renderer2.setAttribute(this.el.nativeElement, 'draggable', 'true');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {TowCoordinator} from './tow-coordinator.service';\n\n@Injectable()\nexport class TowService {\n    events: Subject<any> = new Subject();\n\n    constructor(private towCoordinator: TowCoordinator) {\n        this.towCoordinator.events.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {Directive, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\nimport {ISpotInfo, ISpotPosition, ISpotSize} from '../interfaces/distance-to-spot.interface';\nimport {SpotId} from '../interfaces/spot-id.type';\nimport {RadarCoordinator} from '../radar-coordinator.service';\n\n@Directive({\n    selector: '[spot]'\n})\nexport class SpotDirective implements OnInit, OnDestroy {\n    @Input() spot: any;\n\n    id: SpotId = String(Math.random());\n\n    constructor(private radarCoordinator: RadarCoordinator,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.radarCoordinator.register(this.id, this);\n    }\n\n    getInfo(): ISpotInfo {\n        return {\n            id: this.id,\n            data: this.getData(),\n            size: this.getSize(),\n            position: this.getPosition()\n        };\n    }\n\n    getData(): any {\n        return this.spot;\n    }\n\n    getSize(): ISpotSize {\n        return {\n            width: this.el.nativeElement.offsetWidth,\n            height: this.el.nativeElement.offsetHeight\n        };\n    }\n\n    getPosition(): ISpotPosition {\n        const offsets = this.el.nativeElement.getBoundingClientRect();\n\n        return {\n            x: offsets.left,\n            y: offsets.top\n        };\n    }\n\n    ngOnDestroy() {\n        this.radarCoordinator.unRegister(this.id);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {SpotDirective} from './directive/spot.directive';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {Radar} from './radar.service';\n\n@NgModule({\n    exports: [SpotDirective],\n    declarations: [SpotDirective],\n    providers: [\n        Radar,\n        RadarCoordinator\n    ]\n})\nexport class RadarModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TowCoordinator} from './tow-coordinator.service';\nimport {TowSlaveDirective} from './tow-slave/tow-slave.directive';\nimport {TowService} from './tow.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        TowSlaveDirective\n    ],\n\n    exports: [\n        TowSlaveDirective\n    ],\n\n    providers: [\n        TowService,\n        TowCoordinator\n    ]\n})\nexport class TowModule {\n}\n","import {Component} from '@angular/core';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Component({\n    templateUrl: './pick-out-area.component.html',\n    styleUrls: ['./pick-out-area.component.scss']\n})\nexport class PickOutAreaComponent {\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    initialize(pickOutAreaModel: PickOutAreaModel) {\n        this.pickOutAreaModel = pickOutAreaModel;\n    }\n}\n","export class EndPickOut {\n}\n","export class PickOutItems {\n    constructor(public ids: string[]) {\n    }\n}\n","export class StartPickOut {\n}\n","export class StopPickOut {\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {EndPickOut} from './events/end-pick-out.event';\nimport {PickOutItems} from './events/pick-out-items.event';\nimport {StartPickOut} from './events/start-pick-out.event';\nimport {StopPickOut} from './events/stop-pick-out.event';\nimport {Radar} from '../radar/radar.service';\nimport {SpotModel} from '../radar/spot.model';\n\n@Injectable()\nexport class PickOutCoordinator {\n    changes: Subject<any> = new Subject();\n\n    private isPickOutAllowed = true;\n\n    constructor(private radar: Radar) {\n    }\n\n    disablePickOut() {\n        this.isPickOutAllowed = false;\n    }\n\n    enablePickOut() {\n        this.isPickOutAllowed = true;\n    }\n\n    stopPickOut() {\n        this.changes.next(new StopPickOut());\n    }\n\n    startPickOut() {\n        this.changes.next(new StartPickOut());\n    }\n\n    pickOutChanged(range) {\n        const pickOutSpotModels = this.radar.filterSpots((spot: SpotModel) => spot.data.isPickOutItem);\n\n        pickOutSpotModels.forEach((spotModel) => {\n            spotModel.updateInfo();\n        });\n\n        this.changes.next(new PickOutItems(this.getSelectedItemIds(range, pickOutSpotModels)));\n    }\n\n    endPickOut() {\n        this.changes.next(new EndPickOut());\n    }\n\n    private getSelectedItemIds(range, pickOutsItem: SpotModel[]): string[] {\n        return pickOutsItem\n            .filter((pickOutItem) => {\n                return (range.x < (pickOutItem.position.x + pickOutItem.size.width) &&\n                    (range.x + range.width) > pickOutItem.position.x &&\n                    (range.y + range.height) > pickOutItem.position.y &&\n                    range.y < (pickOutItem.position.y + pickOutItem.size.height));\n            })\n            .map((pickOutItem) => pickOutItem.data.brickId);\n    }\n}\n","export class PickOutAreaModel {\n    // brick ids allow to define should we render area component\n    initialBrickId: string;\n    currentBrickId: string;\n\n    // calculate pick out area width and height\n    initialX: number;\n    initialY: number;\n\n    // store last client X and Y position before scroll event\n    previousClientX: number;\n    previousClientY: number;\n\n    // coordinates inside scrollable container\n    x: number;\n    y: number;\n\n    // coordinates related to viewport\n    clientX: number;\n    clientY: number;\n\n    // size of pick out area\n    width: number;\n    height: number;\n\n    isPickOutProcessInitialized = false;\n\n    scrollableContainer: HTMLElement;\n\n    private minimumMoveDistance = 5;\n\n    constructor(scrollableContainer: HTMLElement,\n                x: number,\n                y: number,\n                overBrickId: string) {\n        this.scrollableContainer = scrollableContainer;\n\n        this.initialX = x;\n        this.initialY = y;\n\n        this.x = x;\n        this.y = y;\n\n        this.initialBrickId = overBrickId;\n        this.currentBrickId = overBrickId;\n    }\n\n    recalculatePositionAndSize() {\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        const pageX = this.previousClientX - scrollContextRect.left;\n        const pageY = this.previousClientY - scrollContextRect.top + this.scrollableContainer.scrollTop;\n\n        this.updatePickOutAreaPositionAndSize(pageX, pageY);\n    }\n\n    updateCurrentClientPosition(clientX: number, clientY: number) {\n        this.previousClientX = clientX;\n        this.previousClientY = clientY;\n\n        this.recalculatePositionAndSize();\n    }\n\n    updateCurrentBrickId(brickId: string): void {\n        this.currentBrickId = brickId;\n    }\n\n    canInitiatePickOutProcess(): boolean {\n        return this.isMouseMovedEnough() &&\n            (!this.currentBrickId || this.currentBrickId !== this.initialBrickId);\n    }\n\n    initiatePickOutProcess() {\n        this.isPickOutProcessInitialized = true;\n    }\n\n    private updatePickOutAreaPositionAndSize(x: number, y: number) {\n        // update x position and width\n        if (x < this.initialX) {\n            this.width = this.initialX - x;\n\n            this.x = x;\n        } else {\n            this.width = Math.abs(x - this.x);\n        }\n\n        // update y position and height\n        if (y < this.initialY) {\n            this.height = this.initialY - y;\n\n            this.y = y;\n        } else {\n            this.height = Math.abs(y - this.y);\n        }\n\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        this.clientX = scrollContextRect.left + this.x;\n        this.clientY = scrollContextRect.top + this.y - this.scrollableContainer.scrollTop;\n    }\n\n    private isMouseMovedEnough(): boolean {\n        return this.width > this.minimumMoveDistance ||\n            this.height > this.minimumMoveDistance;\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener,\n    Inject,\n    Injector,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {PickOutCoordinator} from '../pick-out-coordinator.service';\nimport {MOUSE_LEFT_KEY_CODE} from '../pick-out.constant';\nimport {IPickOutAreaConfig} from './pick-out-area-config.interface';\nimport {PickOutAreaComponent} from './pick-out-area.component';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Directive({\n    selector: '[pick-out-area]'\n})\nexport class PickOutAreaDirective implements OnInit, OnDestroy {\n    @Input('pick-out-area') config: IPickOutAreaConfig;\n\n    doc: any = null;\n\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    selectionRangeComponentRef: ComponentRef<PickOutAreaComponent> = null;\n\n    onMouseUpBound: () => any;\n    onMouseMoveBound: (event: MouseEvent) => void;\n    onSelectionStartBound: () => any;\n    onContainerScrollBound: () => any;\n\n    previousClientX: number;\n    previousClientY: number;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private pickOutCoordinator: PickOutCoordinator,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private zone: NgZone,\n                private el: ElementRef,\n                private injector: Injector) {\n        this.doc = doc;\n    }\n\n    ngOnInit() {\n        this.onMouseUpBound = this.onMouseUp.bind(this);\n        this.onMouseMoveBound = this.onMouseMove.bind(this);\n        this.onSelectionStartBound = this.onSelectionStart.bind(this);\n        this.onContainerScrollBound = this.onContainerScroll.bind(this);\n\n        this.doc.addEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.addEventListener('mouseup', this.onMouseUpBound);\n        this.doc.addEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.addEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    triggerPickOutChanged() {\n        this.pickOutCoordinator.pickOutChanged({\n            x: this.pickOutAreaModel.clientX,\n            y: this.pickOutAreaModel.clientY,\n            width: this.pickOutAreaModel.width,\n            height: this.pickOutAreaModel.height\n        });\n    }\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        if (event.button === MOUSE_LEFT_KEY_CODE && !this.isMouseOverDraggableElement(event.clientX, event.clientY)) {\n            const scrollContextRect = this.config.scrollableContainer.getBoundingClientRect();\n            const pageX = event.clientX - scrollContextRect.left;\n            const pageY = event.clientY - scrollContextRect.top + this.config.scrollableContainer.scrollTop;\n\n            const brickIdOverMouse = this.findBrickIdByCoordinate(event.clientX, event.clientY);\n\n            this.pickOutAreaModel = new PickOutAreaModel(\n                this.config.scrollableContainer,\n                pageX,\n                pageY,\n                brickIdOverMouse\n            );\n        }\n    }\n\n    onMouseMove(event: any) {\n        if (this.pickOutAreaModel) {\n            this.pickOutAreaModel.updateCurrentClientPosition(event.clientX, event.clientY);\n            this.pickOutAreaModel.updateCurrentBrickId(this.findBrickIdByCoordinate(event.clientX, event.clientY));\n\n            if (this.pickOutAreaModel.isPickOutProcessInitialized) {\n                event.preventDefault();\n\n                this.triggerPickOutChanged();\n            } else if (this.pickOutAreaModel.canInitiatePickOutProcess()) {\n                this.pickOutAreaModel.initiatePickOutProcess();\n\n                this.onStartPicKOut();\n            }\n        }\n    }\n\n    onMouseUp() {\n        this.onStopPickOut();\n    }\n\n    onContainerScroll() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.pickOutAreaModel.recalculatePositionAndSize();\n\n            this.triggerPickOutChanged();\n        }\n    }\n\n    onSelectionStart(e) {\n        // does not allow select text during pick out process\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            e.preventDefault();\n        }\n    }\n\n    renderRangeComponent() {\n        // https://medium.com/@caroso1222/angular-pro-tip-how-to-dynamically-create-components-in-body-ba200cc289e6\n\n        // 1. Create a component reference from the component\n        this.selectionRangeComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PickOutAreaComponent)\n            .create(this.injector);\n\n        this.selectionRangeComponentRef.instance.initialize(this.pickOutAreaModel);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.selectionRangeComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.selectionRangeComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n\n        this.config.scrollableContainer.appendChild(domElem);\n    }\n\n    removeRangeComponent() {\n        this.appRef.detachView(this.selectionRangeComponentRef.hostView);\n        this.selectionRangeComponentRef.destroy();\n        this.selectionRangeComponentRef = null;\n    }\n\n    onStartPicKOut() {\n        this.pickOutCoordinator.startPickOut();\n\n        this.doc.activeElement.blur();\n\n        this.renderRangeComponent();\n\n        this.clearSelection();\n    }\n\n    onStopPickOut() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.removeRangeComponent();\n\n            this.pickOutCoordinator.endPickOut();\n        }\n\n        this.pickOutAreaModel = null;\n    }\n\n    ngOnDestroy() {\n        this.doc.removeEventListener('mouseup', this.onMouseUpBound);\n        this.doc.removeEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.removeEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.removeEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    private clearSelection() {\n        window.getSelection().empty();\n    }\n\n    private findBrickIdByCoordinate(pageX: number, clientY: number): string {\n        let currentElement = document.elementFromPoint(pageX, clientY);\n\n        while (currentElement && currentElement.tagName !== 'WALL-CANVAS-BRICK') {\n            currentElement = currentElement.parentElement;\n        }\n\n        if (currentElement) {\n            // there is canvas bricks\n            return currentElement\n                .getElementsByClassName('wall-canvas-brick__wrapper')[0]\n                .getAttribute('id');\n        } else {\n            return null;\n        }\n    }\n\n    private isMouseOverDraggableElement(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement &&\n        !(currentElement as HTMLElement).draggable &&\n        !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n}\n","export const MOUSE_LEFT_KEY_CODE = 0;\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\n\n@Injectable()\nexport class PickOutService {\n    events: Subject<any> = new Subject();\n\n    constructor(private pickOutHandlerService: PickOutCoordinator) {\n        this.pickOutHandlerService.changes.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    enablePickOut() {\n        this.pickOutHandlerService.enablePickOut();\n    }\n\n    disablePickOut() {\n        this.pickOutHandlerService.disablePickOut();\n    }\n\n    stopPickOut() {\n        this.pickOutHandlerService.stopPickOut();\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PickOutAreaComponent} from './pick-out-area/pick-out-area.component';\nimport {PickOutAreaDirective} from './pick-out-area/pick-out-area.directive';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\nimport {PickOutService} from './pick-out.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        PickOutAreaComponent,\n        PickOutAreaDirective\n    ],\n\n    providers: [\n        PickOutService,\n        PickOutCoordinator\n    ],\n\n    exports: [\n        PickOutAreaDirective\n    ],\n\n    entryComponents: [\n        PickOutAreaComponent\n    ]\n})\n\nexport class PickOutModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {WallModelFactory} from './factory/wall-model.factory';\nimport {BrickRegistry} from './registry/brick-registry.service';\nimport {MatIconModule} from '@angular/material';\nimport {PlaceholderRendererModule} from '../modules/components/placeholder-renderer/placeholder-renderer.module';\nimport {WallCanvasBrickComponent} from './components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component';\nimport {WallCanvasRowComponent} from './components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component';\nimport {WallCanvasComponent} from './components/wall-canvas/wall-canvas.component';\nimport {WallComponent} from './components/wall/wall.component';\nimport {TowModule} from '../modules/tow/tow.module';\nimport {RadarModule} from '../modules/radar/radar.module';\nimport {PickOutModule} from '../modules/pick-out/pick-out.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PickOutModule,\n        TowModule,\n        RadarModule,\n        PlaceholderRendererModule,\n        MatIconModule\n    ],\n\n    declarations: [\n        WallComponent,\n        WallCanvasComponent,\n        WallCanvasRowComponent,\n        WallCanvasBrickComponent\n    ],\n\n    exports: [\n        WallComponent\n    ]\n})\nexport class WallModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: WallModule,\n            providers: [\n                BrickRegistry,\n                WallModelFactory\n            ]\n        };\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'w-brick-input-placeholder',\n    templateUrl: './brick-input-placeholder.component.html',\n    styleUrls: ['./brick-input-placeholder.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BrickInputPlaceholderComponent implements OnInit {\n    @Input() text: string;\n    @Input() icon: string;\n    @Input() loading: boolean;\n    @Output() selected: EventEmitter<MouseEvent> = new EventEmitter();\n\n    constructor() {\n    }\n\n    onClick(event: MouseEvent) {\n        this.selected.emit(event);\n    }\n\n    ngOnInit() {\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'w-loading-wrapper',\n    templateUrl: './loading-wrapper.component.html',\n    styleUrls: ['./loading-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingWrapperComponent implements OnInit {\n    @Input() message: string;\n\n    ngOnInit() {\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {BrickInputPlaceholderComponent} from './brick-input-placeholder/brick-input-placeholder.component';\nimport {LoadingWrapperComponent} from './loading-wrapper/loading-wrapper.component';\nimport {MatIconModule} from '@angular/material';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    exports: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    declarations: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    providers: []\n})\nexport class HelperComponentsModule {\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {IWallModel, IWallPlugin} from '../../wall/wall';\n\nexport class CopyPlugin implements IWallPlugin {\n    name: 'copy';\n    version: '0.0.0';\n\n    doc: Document = null;\n\n    onCopyBound: any;\n\n    wallModel: IWallModel;\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n\n        this.onCopyBound = this.onCopy.bind(this);\n\n        this.doc.addEventListener('copy', this.onCopyBound);\n    }\n\n    onWallInitialize(model: IWallModel) {\n        this.wallModel = model;\n    }\n\n    onCopy(e: ClipboardEvent) {\n        const selectedTextRepresentation = this.getSelectedTextRepresentation();\n\n        if (selectedTextRepresentation.length) {\n            e.preventDefault();\n\n            this.addToClipboard(e, selectedTextRepresentation);\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('click', this.onCopy);\n    }\n\n    private addToClipboard(e: ClipboardEvent, str: string) {\n        e.clipboardData.setData('text/plain', str);\n    }\n\n    private getSelectedTextRepresentation(): string {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        return selectedBrickIds\n            .map((selectedBrickId) => this.wallModel.api.core.getBrickTextRepresentation(selectedBrickId))\n            .map((textRepresentation) => textRepresentation.trim())\n            .join('\\n');\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BeforeChangeEvent, IWallDefinition, IWallModel, IWallPlugin, SetPlanEvent} from '../../wall/wall';\nimport {IUndoRedoApi} from './undo-redo-api.interface';\nimport {UNDO_REDO_API_NAME} from './undo-redo.constant';\n\nexport class UndoRedoPlugin implements IWallPlugin {\n    name: 'undoredo';\n    version: '0.0.0';\n\n    private wallModel: IWallModel;\n\n    private doc: Document;\n\n    private onUndoKeyHandlerBound: any;\n\n    private apiSubscription: Subscription;\n\n    private processingUndo = false;\n\n    private undoPlanStack: IWallDefinition[] = [];\n    private redoPlanStack: IWallDefinition[] = [];\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.wallModel.registerApi(UNDO_REDO_API_NAME, {\n            undo: this.undo.bind(this),\n            undoSize: this.undoSize.bind(this),\n            redo: this.redo.bind(this),\n            redoSize: this.redoSize.bind(this),\n            clear: this.clear.bind(this)\n        } as IUndoRedoApi);\n\n        this.apiSubscription = this.wallModel.api.core.subscribe((e) => {\n            this.wallModelEventHandler(e);\n        });\n\n        this.onUndoKeyHandlerBound = this.onUndoKeyHandler.bind(this);\n\n        this.doc.addEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    onWallPluginDestroy() {\n        this.apiSubscription.unsubscribe();\n\n        this.doc.removeEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    private onUndoKeyHandler(e: KeyboardEvent) {\n        const CTRL_KEY = 90;\n\n        if (e.keyCode === CTRL_KEY && e.ctrlKey) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (e.shiftKey) {\n                this.redo();\n            } else {\n                this.undo();\n            }\n        }\n    }\n\n    private undoSize(): number {\n        return this.undoPlanStack.length;\n    }\n\n    private redoSize(): number {\n        return this.redoPlanStack.length;\n    }\n\n    private wallModelEventHandler(e: any): void {\n        if (!this.processingUndo) {\n            if (e instanceof BeforeChangeEvent && (e as BeforeChangeEvent).beforeEventType !== SetPlanEvent) {\n                this.undoPlanStack.push(this.wallModel.api.core.getPlan());\n\n                this.redoPlanStack = [];\n            }\n        }\n    }\n\n    private redo() {\n        const redoPlan = this.redoPlanStack.pop();\n\n        if (redoPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(redoPlan);\n\n            this.undoPlanStack.push(redoPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private undo() {\n        const previousPlan = this.undoPlanStack.pop();\n\n        if (previousPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(previousPlan);\n\n            this.redoPlanStack.push(previousPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private clear() {\n        this.undoPlanStack = [];\n        this.redoPlanStack = [];\n    }\n}\n","export const UNDO_REDO_API_NAME = 'undo';\n","export const TOW = {\n    dropTypes: {\n        horizontal: 'horizontal',\n        vertical: 'vertical'\n    },\n\n    dropSides: {\n        left: 'left',\n        right: 'right',\n        top: 'top',\n        bottom: 'bottom'\n    }\n};\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {Radar} from '../../modules/radar/radar.service';\nimport {SpotModel} from '../../modules/radar/spot.model';\nimport {PickOutService} from '../../modules/pick-out/pick-out.service';\nimport {StartPickOut} from '../../modules/pick-out/events/start-pick-out.event';\nimport {PickOutItems} from '../../modules/pick-out/events/pick-out-items.event';\nimport {EndPickOut} from '../../modules/pick-out/events/end-pick-out.event';\nimport {IWallPlugin} from '../../wall/model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../wall/model/interfaces/wall-model.interface';\nimport {TowService} from '../../modules/tow/tow.service';\nimport {TOW} from '../../modules/tow/tow.constant';\nimport {StopWorkingEvent} from '../../modules/tow/events/stop-working.event';\nimport {WorkInProgressEvent} from '../../modules/tow/events/work-in-progress.event';\nimport {StartWorkingEvent} from '../../modules/tow/events/start-working.event';\nimport {PlaceholderRenderer} from '../../modules/components/placeholder-renderer/placeholder-renderer.service';\n\nexport interface ISelectionOptions {\n    shouldUnselectBrick: (e: MouseEvent) => boolean;\n}\n\nexport class SelectionPlugin implements IWallPlugin {\n    name: 'selection';\n    version: '0.0.0';\n\n    doc: Document;\n\n    isMouseSelection = false;\n    onMouseDownBound: any;\n    onKeyDownHandlerBound: any;\n\n    wallModel: IWallModel;\n\n    private pickOutService: PickOutService;\n    private radar: Radar;\n    private towService: TowService;\n    private placeholderRenderer: PlaceholderRenderer;\n\n    private nearestBrickToDrop: {\n        spot: SpotModel;\n        type: string;\n        side: string;\n    };\n    private placeholderHeight = 2;\n    private isEnableDropZoneHighlight = false;\n\n    private towServiceSubscription: Subscription;\n    private pickOutServiceSubscription: Subscription;\n\n    private options: ISelectionOptions;\n\n    constructor(private injector: Injector, options?: ISelectionOptions) {\n        // extension point for client to prevent brick un-selections\n        this.options = {\n            shouldUnselectBrick: () => true,\n            ...options\n        };\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.doc = this.injector.get(DOCUMENT);\n        this.pickOutService = this.injector.get(PickOutService);\n        this.radar = this.injector.get(Radar);\n        this.placeholderRenderer = this.injector.get(PlaceholderRenderer);\n        this.towService = this.injector.get(TowService);\n\n        this.onMouseDownBound = this.onMouseDown.bind(this);\n        this.onKeyDownHandlerBound = this.onKeyDownHandler.bind(this);\n\n        this.doc.addEventListener('mousedown', this.onMouseDownBound);\n        this.doc.addEventListener('keydown', this.onKeyDownHandlerBound);\n\n        // listen to picked out items and select appropriate bricks\n        this.pickOutServiceSubscription = this.pickOutService.subscribe((e) => {\n            if (e instanceof StartPickOut) {\n                this.isMouseSelection = true;\n\n                this.wallModel.api.ui.disableMediaInteraction();\n            }\n\n            if (e instanceof PickOutItems) {\n                this.wallModel.api.ui.selectBricks(e.ids);\n            }\n\n            if (e instanceof EndPickOut) {\n                this.wallModel.api.ui.enableMediaInteraction();\n            }\n        });\n\n        // listen for draggable operation and move bricks accordingly\n        this.towServiceSubscription = this.towService.subscribe((e) => {\n            if (e instanceof StartWorkingEvent) {\n                if (this.wallModel.api.core.getBrickSnapshot(e.slaveId)) {\n                    this.isEnableDropZoneHighlight = true;\n                } else {\n                    this.isEnableDropZoneHighlight = false;\n                }\n\n                this.nearestBrickToDrop = null;\n                this.placeholderRenderer.clear();\n            }\n\n            if (e instanceof StopWorkingEvent && this.nearestBrickToDrop) {\n                if (this.isEnableDropZoneHighlight) {\n                    let movedBrickIds = [];\n\n                    const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n                    if (selectedBrickIds.length > 1) {\n                        movedBrickIds = movedBrickIds.concat(selectedBrickIds);\n                    } else {\n                        movedBrickIds.push(e.slaveId);\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.horizontal) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.top) {\n                            this.wallModel.api.core.moveBrickBeforeBrickId(\n                                movedBrickIds,\n                                this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.bottom) {\n                            this.wallModel.api.core.moveBrickAfterBrickId(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.vertical) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.left) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.left\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.right) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.right\n                            );\n                        }\n                    }\n\n                    this.nearestBrickToDrop = null;\n\n                    this.placeholderRenderer.clear();\n                }\n            }\n\n            if (e instanceof WorkInProgressEvent) {\n                if (this.isEnableDropZoneHighlight) {\n                    const spots = this.radar.filterSpots((spot: SpotModel) => spot.data.isBeacon);\n\n                    let nearestSpot: SpotModel;\n\n                    spots.forEach((spot) => {\n                        spot.updateInfo();\n\n                        if (!nearestSpot) {\n                            nearestSpot = spot;\n                        } else {\n                            const currentSpotMinimalDistance = spot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            if (currentSpotMinimalDistance < nearestSpotMinimalDistance) {\n                                nearestSpot = spot;\n                            }\n                        }\n                    });\n\n                    if (nearestSpot) {\n                        const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                            e.mousePosition.clientX,\n                            e.mousePosition.clientY\n                        );\n\n                        if (nearestSpotMinimalDistance < 50) {\n                            this.nearestBrickToDrop = {\n                                spot: nearestSpot,\n                                side: null,\n                                type: null\n                            };\n\n                            if (e.mousePosition.clientX < nearestSpot.position.x) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.left;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.right;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x &&\n                                e.mousePosition.clientX < nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.horizontal;\n\n                                const centerYPosition = nearestSpot.position.y + (nearestSpot.size.height / 2);\n\n                                this.nearestBrickToDrop.side = e.mousePosition.clientY < centerYPosition ?\n                                    TOW.dropSides.top : TOW.dropSides.bottom;\n                            }\n\n                            this.renderPlaceholder();\n                        } else {\n                            this.nearestBrickToDrop = null;\n\n                            this.placeholderRenderer.clear();\n                        }\n                    } else {\n                        this.nearestBrickToDrop = null;\n\n                        this.placeholderRenderer.clear();\n                    }\n                }\n            }\n        });\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (!this.isMouseOverDraggableBox(e.clientX, e.clientY) && this.options.shouldUnselectBrick(e)) {\n            this.wallModel.api.ui.unSelectBricks();\n        }\n    }\n\n    onKeyDownHandler(e: KeyboardEvent) {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n        const firstSelectedBrickId = selectedBrickIds[0];\n        const lastSelectedBrickId = selectedBrickIds[selectedBrickIds.length - 1];\n\n        if (e.key === 'Delete' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.unSelectBricks();\n\n            this.wallModel.api.ui.removeBricks(selectedBrickIds);\n        }\n\n        if (e.key === 'Enter' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.focusOnBrickId(firstSelectedBrickId);\n\n            this.wallModel.api.ui.unSelectBricks();\n        }\n\n        if (e.key === 'ArrowUp' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const previousBrickId = this.wallModel.api.core.getPreviousBrickId(lastSelectedBrickId);\n\n            if (previousBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(previousBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(previousBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'ArrowDown' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const nextBrickId = this.wallModel.api.core.getNextBrickId(lastSelectedBrickId);\n\n            if (nextBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && !this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(nextBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(nextBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'Escape') {\n            e.preventDefault();\n\n            if (selectedBrickIds.length) {\n                this.wallModel.api.ui.unSelectBricks();\n            }\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('mousedown', this.onMouseDownBound);\n        this.doc.removeEventListener('keydown', this.onKeyDownHandlerBound);\n\n        this.wallModel = null;\n        this.pickOutServiceSubscription.unsubscribe();\n        this.towServiceSubscription.unsubscribe();\n    }\n\n    private isMouseOverDraggableBox(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement && !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n\n    private isDownSelectionDirection(): boolean {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        const bricksCount = selectedBrickIds.length;\n\n        const lastBrickId = selectedBrickIds[bricksCount - 1];\n        const penultimateBrickId = selectedBrickIds[bricksCount - 2];\n\n        return this.wallModel.api.core.isBrickAheadOf(penultimateBrickId, lastBrickId);\n    }\n\n    private renderPlaceholder() {\n        let placeholderX;\n        let placeholderY;\n        let placeholderSize;\n        let placeholderIsHorizontal;\n\n        const spot = this.nearestBrickToDrop.spot;\n        const side = this.nearestBrickToDrop.side;\n        const type = this.nearestBrickToDrop.type;\n\n        if (type === TOW.dropTypes.horizontal) {\n            placeholderX = spot.position.x;\n            placeholderSize = spot.size.width;\n\n            if (side === TOW.dropSides.top) {\n                placeholderY = spot.position.y - this.placeholderHeight;\n            }\n\n            if (side === TOW.dropSides.bottom) {\n                placeholderY = spot.position.y + spot.size.height;\n            }\n\n            placeholderIsHorizontal = true;\n        }\n\n        if (type === TOW.dropTypes.vertical) {\n            placeholderY = spot.position.y;\n            placeholderSize = spot.size.height;\n            placeholderIsHorizontal = false;\n\n            if (side === TOW.dropSides.left) {\n                placeholderX = spot.position.x;\n            }\n\n            if (side === TOW.dropSides.right) {\n                placeholderX = spot.position.x + spot.size.width;\n            }\n        }\n\n        this.placeholderRenderer.render(placeholderX, placeholderY, placeholderSize, placeholderIsHorizontal);\n    }\n}\n","export const DIVIDER_BRICK_TAG = 'divider';\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'divider-brick',\n    templateUrl: './divider-brick.component.html',\n    styleUrls: ['./divider-brick.component.scss']\n})\n\nexport class DividerBrickComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {BrickRegistry} from '../../wall/wall';\nimport {DividerBrickComponent} from './component/divider-brick.component';\nimport {DIVIDER_BRICK_TAG} from './divider-brick.constant';\n\n@NgModule({\n    exports: [DividerBrickComponent],\n    declarations: [DividerBrickComponent],\n    entryComponents: [DividerBrickComponent]\n})\nexport class DividerBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: DIVIDER_BRICK_TAG,\n            component: DividerBrickComponent,\n            name: 'Divider',\n            description: 'Visually divide blocks'\n        });\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IBaseTextState} from './base-text-state.interface';\n\nexport class TextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return (this.brickSnapshot.state as IBaseTextState).text;\n    }\n}\n","export class DeepLeftNodeChild {\n    child: Node;\n\n    constructor(root: Node) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[0];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class DeepRightNodeChild {\n    child: Node;\n\n    constructor(root: HTMLElement) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[currentNode.childNodes.length - 1];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class FirstSubStringNode {\n    firstLevelSubStringNodes: Node[] = [];\n\n    private readonly subString: string;\n\n    constructor(private root: HTMLElement, private subStringHTML: string) {\n        // get text representation\n        this.subString = this.getSubStringTextContent();\n\n        if (subStringHTML.length !== 0) {\n            if (this.root.childNodes.length === 1) {\n                this.firstLevelSubStringNodes = Array.from(this.root.childNodes);\n\n            } else if (this.root.childNodes.length > 1) {\n                this.firstLevelSubStringNodes = this.findFirstLevelSubStringNodes();\n            }\n        }\n    }\n\n    private findFirstLevelSubStringNodes() {\n        let i = this.root.childNodes.length - 1;\n        let currentNode = this.root.childNodes[i];\n        let text = '';\n        const firstLevelSubStringNodes = [];\n\n        while (currentNode && !text.includes(this.subString)) {\n            text = currentNode.textContent + text;\n\n            firstLevelSubStringNodes.push(currentNode);\n\n            i--;\n            currentNode = this.root.childNodes[i];\n        }\n\n        return firstLevelSubStringNodes.reverse();\n    }\n\n    private getSubStringTextContent(): string {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.subStringHTML;\n\n        return pNode.textContent;\n    }\n}\n","export class CaretStartEndPosition {\n    constructor(private el: Node) {\n    }\n\n    isCaretAtEnd(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setStart(selRange.endContainer, selRange.endOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n\n    isCaretAtStart(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setEnd(selRange.startContainer, selRange.startOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n}\n","export class CursorLeftCoordinate {\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n    }\n\n    get(): number {\n        const div = this.createElementClone(this.targetNode);\n        const span = document.createElement('SPAN');\n\n        div.innerHTML = this.leftText;\n        span.innerHTML = this.rightText;\n\n        div.appendChild(span);\n\n        // make sure element stay at top left corner\n        div.style.position = 'absolute';\n        div.style.top = '0';\n        div.style.left = '0';\n        div.style.padding = '0';\n        div.style.margin = '0';\n\n        document.body.appendChild(div);\n\n        const leftCoordinate = span.offsetLeft;\n\n        div.remove();\n\n        return leftCoordinate;\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class CursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n        if (leftText === '' && rightText === '') {\n            this.isOnFirstLine = true;\n            this.isOnLastLine = true;\n        } else {\n            // http://jsbin.com/qifezupu/31/edit?js,output\n\n            const div = this.createElementClone(this.targetNode);\n\n            document.body.appendChild(div);\n\n            const span1 = document.createElement('SPAN');\n            const span2 = document.createElement('SPAN');\n\n            div.appendChild(span1);\n            div.appendChild(span2);\n\n            span1.innerText = 'a';\n\n            const lh = span1.offsetHeight;\n\n            span1.innerHTML = leftText;\n            span2.innerHTML = rightText;\n\n            this.isOnFirstLine = span1.textContent.length === 0 ||\n                (span1.offsetHeight === lh && span1.getBoundingClientRect().top === span2.getBoundingClientRect().top);\n\n            this.isOnLastLine = span2.offsetHeight === lh;\n\n            div.remove();\n        }\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class PlaceCaretToPosition {\n    constructor(private el: Node, private position: number) {\n    }\n\n    place() {\n        const range = document.createRange();\n        const sel = window.getSelection();\n\n        range.setStart(this.el, this.position);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n","/**\n * Returns string which does not contains empty nodes inside\n */\nexport class StringWithoutEmptyNodes {\n    constructor(private str: string) {\n    }\n\n    get() {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.str;\n\n        if (!pNode.textContent.trim().length) {\n            // there are no text itself, so replace any tags to empty string\n            return '';\n        } else {\n            return this.str;\n        }\n    }\n}\n","export const FOCUS_INITIATOR = 'text-supporting-brick';\n\nexport const ENTER_KEY = 'Enter';\nexport const NUMPUB_ENTER_KEY = 'NumpadEnter';\nexport const ENTER_KEY_CODE_ANDROID = 13;\nexport const DELETE_KEY = 'Delete';\nexport const BACK_SPACE_KEY = 'Backspace';\nexport const BACK_SPACE_KEY_CODE_ANDROID = 8;\nexport const LEFT_KEY = 'ArrowLeft';\nexport const TOP_KEY = 'ArrowUp';\nexport const RIGHT_KEY = 'ArrowRight';\nexport const BOTTOM_KEY = 'ArrowDown';\nexport const ESCAPE_KEY = 27;\nexport const TAB_KEY = 'Tab';\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class BottomKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        if (this.baseTextBrickComponent.isCaretAtLastLine()) {\n            e.preventDefault();\n\n            const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    bottomKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {BaseTextBrickComponent} from '../base-text-brick.component';\n\nexport class EnterKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const sel = window.getSelection();\n\n        const splittedText = this.baseTextBrickComponent.getSplittedText(\n            sel.focusOffset,\n            sel.focusNode\n        );\n\n        splittedText.left = this.baseTextBrickComponent.cleanUpText(splittedText.left);\n        splittedText.right = this.baseTextBrickComponent.cleanUpText(splittedText.right);\n\n        if (splittedText.left.length) {\n            if (splittedText.right.length) {\n                // text is splitted to two part\n                this.splitBrickForTwoPart(splittedText.left, splittedText.right);\n            } else {\n                // cursor at end - text's exist - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        } else {\n            if (splittedText.right.length) {\n                // cursor at start, text exists - just create new line at top, do not move focus\n                this.addEmptyTextBrickBefore();\n            } else {\n                // there are no text at all - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        }\n    }\n\n    private splitBrickForTwoPart(left: string, right: string) {\n        this.addBrickAfter(right);\n\n        this.baseTextBrickComponent.setTextState(left);\n        this.baseTextBrickComponent.saveCurrentState();\n    }\n\n    private addEmptyTextBrickBefore() {\n        const newTextState = {\n            text: '',\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        this.baseTextBrickComponent.wallModel.api.core\n            .addBrickBeforeBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // scroll browser view to element\n        this.baseTextBrickComponent.editor.nativeElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'start'\n        });\n    }\n\n    private addEmptyBrickAfter() {\n        // cursor at end - text's exist - create new and focus on it\n        this.addBrickAfter('');\n    }\n\n    private addBrickAfter(text: string) {\n        const newTextState = {\n            text: text,\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        const addedBrick = this.baseTextBrickComponent.wallModel.api.core\n            .addBrickAfterBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // wait one tick for component rendering\n        setTimeout(() => {\n            this.baseTextBrickComponent.wallUiApi.focusOnBrickId(addedBrick.id);\n        });\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class LeftKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                leftKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi\n            .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class RightKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                rightKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class TopKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n        if (this.baseTextBrickComponent.isCaretAtFirstLine()) {\n            e.preventDefault();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    topKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallModel.api.ui\n                .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {DeepLeftNodeChild} from '../../modules/utils/deep-left-node-child';\nimport {DeepRightNodeChild} from '../../modules/utils/deep-right-node-child';\nimport {FirstSubStringNode} from '../../modules/utils/first-sub-string-node';\nimport {CaretStartEndPosition} from '../../modules/utils/node/caret-start-end-position';\nimport {CursorLeftCoordinate} from '../../modules/utils/node/cursor-left-coordinate';\nimport {CursorPositionInLine} from '../../modules/utils/node/cursor-position-in-line';\nimport {PlaceCaretToPosition} from '../../modules/utils/node/place-caret-to-position';\nimport {StringWithoutEmptyNodes} from '../../modules/utils/node/string-without-empty-nodes';\nimport {IFocusContext, IOnWallFocus, IOnWallStateChange, IWallComponent, IWallModel, IWallUiApi} from '../../wall/wall';\nimport {\n    BACK_SPACE_KEY,\n    BACK_SPACE_KEY_CODE_ANDROID,\n    BOTTOM_KEY,\n    DELETE_KEY,\n    ENTER_KEY,\n    ENTER_KEY_CODE_ANDROID,\n    ESCAPE_KEY,\n    FOCUS_INITIATOR,\n    LEFT_KEY,\n    NUMPUB_ENTER_KEY,\n    RIGHT_KEY,\n    TAB_KEY,\n    TOP_KEY\n} from './base-text-brick.constant';\nimport {IBaseTextState} from './base-text-state.interface';\nimport {BottomKeyHandler} from './keypress-handlers/bottom-key.handler';\nimport {EnterKeyHandler} from './keypress-handlers/enter-key.handler';\nimport {LeftKeyHandler} from './keypress-handlers/left-key.handler';\nimport {RightKeyHandler} from './keypress-handlers/right-key.handler';\nimport {TopKeyHandler} from './keypress-handlers/top-key.handler';\n\nenum LineType {\n    first = 'FIRST',\n    last = 'LAST'\n}\n\nexport interface ICursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n}\n\nexport abstract class BaseTextBrickComponent implements OnInit, OnDestroy, IOnWallStateChange, IOnWallFocus, IWallComponent {\n    @Input() id: string;\n    @Input() state: IBaseTextState;\n    @Input() wallModel: IWallModel;\n\n    @Output() stateChanges: EventEmitter<IBaseTextState> = new EventEmitter();\n\n    @ViewChild('editor') editor: ElementRef;\n\n    keypressHandlers = {\n        top: new TopKeyHandler(this),\n        enter: new EnterKeyHandler(this),\n        left: new LeftKeyHandler(this),\n        right: new RightKeyHandler(this),\n        bottom: new BottomKeyHandler(this)\n    };\n\n    wallUiApi: IWallUiApi;\n\n    scope: IBaseTextState = {\n        text: '',\n        tabs: 0\n    };\n\n    maxTabNumber = 3;\n\n    textChange: Subject<string> = new Subject();\n\n    textChangeSubscription: Subscription;\n\n    onPasteBound: (e: ClipboardEvent) => any;\n\n    ngOnInit() {\n        if (this.state && this.state.text !== this.scope.text) {\n            this.setTextState(this.state.text);\n        }\n\n        this.scope.tabs = this.state.tabs || 0;\n\n        this.onPasteBound = this.onPaste.bind(this);\n\n        this.editor.nativeElement.addEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription = this.textChange.subscribe(() => {\n            this.setTextState(this.scope.text);\n            this.saveCurrentState();\n        });\n\n        this.wallUiApi = this.wallModel.api.ui;\n    }\n\n    onWallStateChange(newState: IBaseTextState) {\n        this.scope.tabs = this.state.tabs || this.scope.tabs;\n\n        if (newState && newState.text !== this.scope.text) {\n            this.setTextState(newState.text);\n        }\n    }\n\n    ngOnDestroy() {\n        this.editor.nativeElement.removeEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription.unsubscribe();\n    }\n\n    onPaste(e: ClipboardEvent) {\n        e.preventDefault();\n\n        const textArr = e.clipboardData.getData('text/plain')\n            .split('\\n')\n            .map((str) => str.trim())\n            .filter((str) => str.length);\n\n        if (textArr.length === 1) {\n            document.execCommand('insertHTML', false, textArr[0]);\n        } else if (textArr.length > 1) {\n            // todo: add interface for UI api\n            textArr.reverse().forEach((text) => this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text', {text}));\n        }\n    }\n\n    onTextChange() {\n        this.textChange.next(this.scope.text);\n    }\n\n    // general handler of all key events\n    onKeyPress(e: KeyboardEvent) {\n        if (this.noMetaKeyIsPressed(e)) {\n            if (e.code === TOP_KEY) {\n                this.topKeyPressed(e);\n            }\n\n            if (e.code === BOTTOM_KEY) {\n                this.bottomKeyPressed(e);\n            }\n\n            if (e.code === LEFT_KEY && this.isCaretAtStart()) {\n                this.leftKeyPressed(e);\n            }\n\n            if (e.code === RIGHT_KEY && this.isCaretAtEnd()) {\n                this.rightKeyPressed(e);\n            }\n\n            if (e.code === ENTER_KEY || e.keyCode === ENTER_KEY_CODE_ANDROID || e.code === NUMPUB_ENTER_KEY) {\n                this.enterKeyPressed(e);\n            }\n\n            if (e.keyCode === ESCAPE_KEY) {\n                this.escapeKeyPressed(e);\n            }\n\n            if ((e.code === BACK_SPACE_KEY || e.keyCode === BACK_SPACE_KEY_CODE_ANDROID) && !this.isTextSelected()) {\n                this.backSpaceKeyPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text.length && this.isCaretAtEnd() && !this.isTextSelected()) {\n                this.concatWithNextTextSupportingBrick(e);\n            }\n\n            if (e.code === TAB_KEY && this.isCaretAtStart()) {\n                this.onTabPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text === '') {\n                this.onDeleteAndFocusToNext(e);\n            }\n        }\n    }\n\n    proxyToKeyHandler(keyHandlerName: string, e: KeyboardEvent) {\n        this.keypressHandlers[keyHandlerName].execute(e);\n    }\n\n    // key handler\n    topKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('top', e);\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('bottom', e);\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('enter', e);\n    }\n\n    leftKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('left', e);\n    }\n\n    rightKeyPressed(e) {\n        this.proxyToKeyHandler('right', e);\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        // do nothing\n    }\n\n    onTabPressed(e: KeyboardEvent) {\n        e.preventDefault();\n\n        this.increaseTab();\n        this.saveCurrentState();\n    }\n\n    backSpaceKeyPressed(e: KeyboardEvent) {\n        if (this.isCaretAtStart()) {\n            if (this.scope.tabs) {\n                this.decreaseTab();\n                this.saveCurrentState();\n            } else {\n                if (this.scope.text.length) {\n                    this.concatWithPreviousTextSupportingBrick(e);\n                } else {\n                    this.onDeleteAndFocusToPrevious(e);\n                }\n            }\n        }\n    }\n\n    // end key handlers\n\n    isCaretAtFirstLine(): boolean {\n        return this.getCursorPositionInLine().isOnFirstLine;\n    }\n\n    isCaretAtLastLine(): boolean {\n        return this.getCursorPositionInLine().isOnLastLine;\n    }\n\n    getCaretLeftCoordinate(): number {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return (new CursorLeftCoordinate(leftRightText.left, leftRightText.right, this.editor.nativeElement)).get();\n    }\n\n    getCursorPositionInLine(): ICursorPositionInLine {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return new CursorPositionInLine(leftRightText.left, leftRightText.right, this.editor.nativeElement);\n    }\n\n    concatWithPreviousTextSupportingBrick(e) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        if (previousTextBrickId) {\n            e.preventDefault();\n\n            const previousBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(previousTextBrickId);\n\n            this.wallModel.api.core.updateBrickState(previousTextBrickId, {\n                text: this.cleanUpText(previousBrickSnapshot.state.text) + this.scope.text\n            });\n\n            // wait for component re-rendering\n            setTimeout(() => {\n                const focusContext: IFocusContext = {\n                    initiator: FOCUS_INITIATOR,\n                    details: {\n                        concatText: true,\n                        concatenationText: this.scope.text\n                    }\n                };\n\n                this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n\n                // remove only after focus will be established\n                // that prevents flickering on mobile\n                this.wallUiApi.removeBrick(this.id);\n            });\n        }\n    }\n\n    concatWithNextTextSupportingBrick(e: Event) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            e.preventDefault();\n\n            const nextTextBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(nextTextBrickId);\n\n            const concatenationText = nextTextBrickSnapshot.state.text || '';\n\n            this.setTextState(this.scope.text + concatenationText);\n\n            this.saveCurrentState();\n\n            this.wallModel.api.core.removeBrick(nextTextBrickId);\n\n            setTimeout(() => {\n                this.placeCaretBaseOnConcatenatedText(concatenationText);\n            }, 10);\n        }\n    }\n\n    onDeleteAndFocusToPrevious(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        this.wallUiApi.removeBrick(this.id);\n\n        if (previousTextBrickId) {\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    onDeleteAndFocusToNext(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            this.wallUiApi.removeBrick(this.id);\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        return {\n            left: this.scope.text.slice(0, offset),\n            right: this.scope.text.slice(offset) || ''\n        };\n    }\n\n    // key handler end\n    onWallFocus(context?: IFocusContext): void {\n        if (this.editor.nativeElement !== document.activeElement) {\n            // focus by API call\n            this.editor.nativeElement.focus();\n\n            if (context && context.initiator === FOCUS_INITIATOR) {\n                if (context.details.deletePreviousText) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.concatText) {\n                    this.placeCaretBaseOnConcatenatedText(context.details.concatenationText);\n                }\n\n                if (context.details.leftKey) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.rightKey) {\n                    this.placeCaretAtStart();\n                }\n\n                if (context.details.bottomKey || context.details.topKey) {\n                    const line = context.details.bottomKey ? LineType.first : LineType.last;\n\n                    this.placeCaretAtLeftCoordinate(context.details.caretLeftCoordinate, line);\n                }\n            }\n        }\n    }\n\n    setTextState(text: string = '') {\n        this.scope.text = this.cleanUpText(text);\n    }\n\n    increaseTab() {\n        if (this.scope.tabs < this.maxTabNumber) {\n            this.scope.tabs++;\n        }\n    }\n\n    decreaseTab() {\n        if (this.scope.tabs > 0) {\n            this.scope.tabs--;\n        }\n    }\n\n    saveCurrentState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    // caret helpers\n    isTextSelected(): boolean {\n        return !window.getSelection().isCollapsed;\n    }\n\n    placeCaretAtStart(): void {\n        const deepLeftNode = new DeepLeftNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeStart(deepLeftNode.child);\n    }\n\n    placeCaretAtEnd(): void {\n        const rightNode = new DeepRightNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeEnd(rightNode.child);\n    }\n\n    placeCaretAtNodeStart(el: Node) {\n        this.placeCaretAtNodeToPosition(el, 0);\n    }\n\n    placeCaretAtNodeEnd(el: Node) {\n        this.placeCaretAtNodeToPosition(el, el.textContent.length);\n    }\n\n    placeCaretAtNodeToPosition(el: Node, position: number) {\n        (new PlaceCaretToPosition(el, position)).place();\n    }\n\n    // find the node which contains concatenated text and position in this node where cursor should be placed\n    placeCaretBaseOnConcatenatedText(concatenationText: string) {\n        if (concatenationText !== '') {\n            // find first level nodes for the text that was concatenated\n            const subStringNodes = new FirstSubStringNode(\n                this.editor.nativeElement,\n                concatenationText\n            );\n\n            // first level node which contains concatenated text\n            const firstLevelSubStringNode = subStringNodes.firstLevelSubStringNodes[0];\n\n            if (firstLevelSubStringNode) {\n                let focusNode;\n                let position;\n\n                if (firstLevelSubStringNode.nodeType === Node.TEXT_NODE) {\n                    // if first concatenated node is TEXT_NODE it might\n                    // be automatically concatenated with previous existing TEXT_NODE\n                    focusNode = firstLevelSubStringNode;\n\n                    // find text content for first concatenated TEXT_NODE\n                    const p = document.createElement('P');\n                    p.innerHTML = concatenationText;\n                    const firstLevelSubStringTextContent = p.childNodes[0].textContent;\n\n                    // finally find cursor position\n                    position = focusNode.textContent.length - firstLevelSubStringTextContent.length;\n                } else {\n                    focusNode = new DeepLeftNodeChild(firstLevelSubStringNode).child;\n\n                    position = 0;\n                }\n\n                this.placeCaretAtNodeToPosition(focusNode, position);\n            }\n        }\n    }\n\n    placeCaretAtLeftCoordinate(leftCoordinate: number, line: string) {\n        // todo: find the way to set caret based on coordinate number\n        if (line === LineType.last) {\n            this.placeCaretAtEnd();\n        } else {\n            this.placeCaretAtStart();\n        }\n    }\n\n    isCaretAtStart(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtStart();\n    }\n\n    isCaretAtEnd(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtEnd();\n    }\n\n    // remove all unnecessary tags\n    cleanUpText(text: string): string {\n        return (new StringWithoutEmptyNodes(text)).get();\n    }\n\n    private noMetaKeyIsPressed(e): boolean {\n        return !((e.shiftKey || e.altKey || e.ctrlKey || e.metaKey));\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'header-brick',\n    templateUrl: './header-brick.component.html',\n    styleUrls: ['./header-brick.component.scss']\n})\nexport class HeaderBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Header';\n}\n","import {Directive, ElementRef, HostListener, Input, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Directive({\n    selector: '[contenteditable]',\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: ContenteditableDirective, multi: true}\n    ]\n})\nexport class ContenteditableDirective implements ControlValueAccessor {\n    @Input() propValueAccessor: string = 'textContent';\n\n    private onChange: (value: string) => void;\n    private onTouched: () => void;\n    private removeDisabledState: () => void;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    }\n\n    @HostListener('input')\n    callOnChange() {\n        if (typeof this.onChange === 'function') {\n            this.onChange(this.elementRef.nativeElement[this.propValueAccessor]);\n        }\n    }\n\n    @HostListener('blur')\n    callOnTouched() {\n        if (typeof this.onTouched === 'function') {\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Writes a new value to the element.\n     * This method will be called by the forms API to write\n     * to the view when programmatic (model -> view) changes are requested.\n     *\n     * See: [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor#members)\n     */\n    writeValue(value: any): void { // todo add type\n        const normalizedValue = value === null ? '' : value;\n\n        this.renderer.setProperty(this.elementRef.nativeElement, this.propValueAccessor, normalizedValue);\n    }\n\n    /**\n     * Registers a callback function that should be called when\n     * the control's value changes in the UI.\n     *\n     * This is called by the forms API on initialization so it can update\n     * the form model when values propagate from the view (view -> model).\n     */\n    registerOnChange(fn: () => void): void {\n        this.onChange = fn;\n    }\n\n    /**\n     * Registers a callback function that should be called when the control receives a blur event.\n     * This is called by the forms API on initialization so it can update the form model on blur.\n     */\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * This function is called by the forms API when the control status changes to or from \"DISABLED\".\n     * Depending on the value, it should enable or disable the appropriate DOM element.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n            this.removeDisabledState = this.renderer\n                .listen(this.elementRef.nativeElement, 'keydown', this.listenerDisabledState);\n        } else {\n            if (this.removeDisabledState) {\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n                this.removeDisabledState();\n            }\n        }\n    }\n\n    private listenerDisabledState(e: KeyboardEvent) {\n        e.preventDefault();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {ContenteditableDirective} from './contenteditable.directive';\n\n@NgModule({\n    imports: [FormsModule],\n    exports: [ContenteditableDirective],\n    declarations: [ContenteditableDirective]\n})\nexport class ContenteditableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {HeaderBrickComponent} from './component/header-brick.component';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule\n    ],\n    exports: [HeaderBrickComponent],\n    declarations: [HeaderBrickComponent],\n    entryComponents: [HeaderBrickComponent]\n})\nexport class HeaderBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'header',\n            component: HeaderBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Header',\n            description: 'A large header with margins'\n        });\n    }\n}\n","import {InjectionToken} from '@angular/core';\nimport {IWallFileUploader} from './file-uploader.types';\n\nexport const WALL_FILE_UPLOADER = new InjectionToken<IWallFileUploader>('IWallFileUploader');\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applyImageSrc() {\n        this.notify({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onFileChange(event: any) {\n        this.notify({\n            file: event.target.files[0]\n        });\n    }\n\n    notify(data) {\n        this.ngxStickyModalRef.close(data);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applyImageSrc();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {WALL_FILE_UPLOADER} from '../../../modules/file-uploader/file-uploader.token';\nimport {IWallFileUploader, IWallFileUploaderResult} from '../../../modules/file-uploader/file-uploader.types';\nimport {IResizeData} from '../../../modules/resizable/resizable.directive';\nimport {Base64ToFile} from '../../../modules/utils/base64-to-file';\nimport {Guid} from '../../../modules/utils/guid';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {ImgBrickState, ImgBrickStateMetadata} from '../img-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\nimport {IOnWallFocus} from '../../../wall/components/wall/interfaces/wall-component/on-wall-focus.interface';\n\n@Component({\n    selector: 'img-brick',\n    templateUrl: './img-brick.component.html',\n    styleUrls: ['./img-brick.component.scss']\n})\nexport class ImgBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: ImgBrickState;\n\n    @Output() stateChanges: EventEmitter<ImgBrickState> = new EventEmitter();\n\n    @ViewChild('image') image: ElementRef;\n\n    scope: ImgBrickState = {\n        src: '',\n        metadata: null,\n        width: null\n    };\n\n    isSrcBase64 = false;\n\n    lastWidth: number;\n\n    imageSrcPlaceholderRef: StickyModalRef;\n\n    resizable = {\n        resize: this.onResize.bind(this),\n        resizeStart: this.onResizeStart.bind(this),\n        resizeEnd: this.onResizeEnd.bind(this)\n    };\n\n    constructor(private renderer: Renderer2,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService,\n                @Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ImgBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        if (this.scope.src) {\n            this.isSrcBase64 = this.isBase64(this.scope.src);\n\n            if (!this.scope.width) {\n                this.setUpImageWidth();\n            }\n\n            if (this.isSrcBase64) {\n                this.processBase64ImgSrc();\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    // resize callbacks\n    onResize(resizeData: IResizeData) {\n        this.scope.width = this.lastWidth + resizeData.offset;\n    }\n\n    onResizeStart() {\n        this.lastWidth = this.scope.width;\n    }\n\n    onResizeEnd() {\n        this.save();\n    }\n\n    applyImageSrc(imageSrc: string, metadata?: ImgBrickStateMetadata): Promise<any> {\n        return this.isImage(imageSrc)\n            .then(() => {\n                this.scope.src = imageSrc;\n                this.isSrcBase64 = false;\n\n                if (metadata) {\n                    this.scope.metadata = metadata;\n                }\n\n                this.save();\n\n                return this.setUpImageWidth();\n            })\n            .catch(() => {\n                alert('Please enter valid url');\n            });\n    }\n\n    applyImageFile(imgFile: File): Promise<void> {\n        return (new ImgEncoder(imgFile)).getBase64Representation().then((imgBase64) => {\n            return this.applyImageSrc(imgBase64).then(() => {\n                return this.processBase64ImgSrc();\n            });\n        });\n    }\n\n    processBase64ImgSrc(): Promise<void> {\n        return this.uploadImage().then((uploadInfo) => {\n            return this.applyImageSrc(uploadInfo.downloadURL, {\n                path: uploadInfo.path\n            });\n        }, () => {\n        });\n    }\n\n    showPanel() {\n        if (!this.imageSrcPlaceholderRef) {\n            this.imageSrcPlaceholderRef = this.ngxStickyModalService.open({\n                component: InputContextComponent,\n                positionStrategy: {\n                    name: StickyPositionStrategy.flexibleConnected,\n                    options: {\n                        relativeTo: this.el.nativeElement\n                    }\n                },\n                position: {\n                    originX: 'center',\n                    originY: 'bottom',\n                    overlayX: 'center',\n                    overlayY: 'top'\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            });\n\n            this.imageSrcPlaceholderRef.result.then((result) => {\n                this.imageSrcPlaceholderRef = null;\n\n                if (result.src) {\n                    this.applyImageSrc(result.src);\n                } else {\n                    this.applyImageFile(result.file);\n                }\n            }, () => {\n                this.imageSrcPlaceholderRef = null;\n            });\n        }\n    }\n\n    isBase64(str: string) {\n        str = str.replace(/^data:image\\/(png|jpg|jpeg);base64,/, '');\n\n        try {\n            return btoa(atob(str)) === str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    private uploadImage(): Promise<IWallFileUploaderResult> {\n        if (!this.wallFileUploader.canUploadFile()) {\n            return Promise.reject();\n        }\n\n        const fileName = (new Guid()).get();\n        const imgFile = (new Base64ToFile(this.scope.src, fileName)).getFile();\n\n        return this.wallFileUploader.upload(this.id, imgFile);\n    }\n\n    private setUpImageWidth(): Promise<void> {\n        return this.loadImage(this.scope.src).then(() => {\n            this.scope.width = this.image.nativeElement.width;\n\n            this.save();\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private loadImage(src: string) {\n        return this.isImage(src);\n    }\n\n    private isImage(src): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n\n            img.onload = () => {\n                resolve();\n            };\n\n            img.onerror = () => {\n                reject();\n            };\n\n            img.src = src;\n        });\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {IWallFileUploader, WALL_FILE_UPLOADER} from '../../modules/file-uploader/file-uploader';\nimport {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\n@Injectable()\nexport class ImgModel {\n    constructor(@Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader) {\n    }\n\n    remove(brickSnapshot: IBrickSnapshot): Promise<any> {\n        const state: ImgBrickState = brickSnapshot.state;\n\n        if (state.src && state.metadata && state.metadata.path) {\n            return this.wallFileUploader.remove(state.metadata.path);\n        }\n\n        return Promise.resolve();\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\nexport class ImgBrickTextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `img!${(this.brickSnapshot.state as ImgBrickState).src}`;\n    }\n}\n","import {Component, EventEmitter, HostListener, Input, Output} from '@angular/core';\n\n@Component({\n    template: `<span [ngClass]=\"customClassName\"></span>`\n})\nexport class ResizableHandlerComponent {\n    @Input() customClassName: string;\n    @Output() mouseDownEvent: EventEmitter<MouseEvent> = new EventEmitter();\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        this.mouseDownEvent.emit(event);\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {ComponentFactoryResolver, Directive, Inject, Input, NgZone, OnInit, ViewContainerRef} from '@angular/core';\nimport {ComponentRef} from '@angular/core/src/linker/component_factory';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {LEFT_HANDLER_CLASS, RIGHT_HANDLER_CLASS} from './resizable.const';\n\nexport interface IResizeData {\n    xInitial: number;\n    xCurrent: number;\n\n    offset: number;\n\n    isLeftDirection: boolean;\n    isRightDirection: boolean;\n}\n\n/**\n * @description\n * 1. dynamically add left and right handlers\n * 2. allow to show/hide handlers\n * 3. call callback, where to pass\n *  - distance on which handlers is moved\n *  - handler type (left of right)\n */\n@Directive({\n    selector: '[wResizable]'\n})\nexport class ResizableDirective implements OnInit {\n    @Input() wResizable: {\n        resize: (resizeData: IResizeData) => void;\n        resizeStart: (resizeData: IResizeData) => void;\n        resizeEnd: (resizeData: IResizeData) => void;\n    };\n\n    private resizeData: IResizeData = null;\n\n    constructor(private el: ViewContainerRef,\n                private zone: NgZone,\n                private cfr: ComponentFactoryResolver,\n                @Inject(DOCUMENT) private doc) {\n    }\n\n    ngOnInit() {\n        const leftHandler = this.createHandler(LEFT_HANDLER_CLASS);\n        const rightHandler = this.createHandler(RIGHT_HANDLER_CLASS);\n\n        leftHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, true);\n        });\n\n        rightHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, false);\n        });\n\n        this.doc.addEventListener('mousemove', (event: MouseEvent) => {\n            if (this.resizeData) {\n                this.resizeData.xCurrent = event.clientX;\n\n                if (this.resizeData.isLeftDirection) {\n                    this.resizeData.offset = this.resizeData.xInitial - this.resizeData.xCurrent;\n                } else if (this.resizeData.isRightDirection) {\n                    this.resizeData.offset = this.resizeData.xCurrent - this.resizeData.xInitial;\n                }\n\n                if (this.wResizable.resize) {\n                    this.wResizable.resize(this.resizeData);\n                }\n            }\n        });\n\n        this.doc.addEventListener('mouseup', () => {\n            if (this.wResizable.resizeEnd) {\n                this.wResizable.resizeEnd(this.resizeData);\n            }\n\n            this.resizeData = null;\n        });\n    }\n\n    private createHandler(customClassName: string): ComponentRef<ResizableHandlerComponent> {\n        const handler = this.el.createComponent(\n            this.cfr.resolveComponentFactory(ResizableHandlerComponent)\n        );\n\n        handler.instance.customClassName = customClassName;\n\n        return handler;\n    }\n\n    private mouseDownHandler(e: MouseEvent, isLeftDirection: boolean) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.resizeData = {\n            xInitial: e.clientX,\n            xCurrent: e.clientX,\n            offset: 0,\n            isLeftDirection,\n            isRightDirection: !isLeftDirection\n        };\n\n        if (this.wResizable.resizeStart) {\n            this.wResizable.resizeStart(this.resizeData);\n        }\n    }\n}\n","export const LEFT_HANDLER_CLASS = 'left-handler';\nexport const RIGHT_HANDLER_CLASS = 'right-handler';\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {ResizableDirective} from './resizable.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ResizableDirective],\n    declarations: [ResizableDirective, ResizableHandlerComponent],\n    entryComponents: [ResizableHandlerComponent]\n})\nexport class ResizableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {ImgBrickComponent} from './component/img-brick.component';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {ImgModel} from './img-brick-destructor.class';\nimport {ImgBrickState} from './img-brick-state.interface';\nimport {ImgBrickTextRepresentation} from './img-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {ResizableModule} from '../../modules/resizable/resizable.module';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {IBrickSnapshot} from '../../wall/model/interfaces/brick-snapshot.interface';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HelperComponentsModule,\n        ResizableModule,\n        TowModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [ImgBrickComponent],\n    declarations: [ImgBrickComponent, InputContextComponent],\n    entryComponents: [ImgBrickComponent, InputContextComponent],\n    providers: [\n        ImgModel\n    ]\n})\nexport class ImgBrickModule {\n    constructor(private brickRegistry: BrickRegistry,\n                private imgModel: ImgModel) {\n        this.brickRegistry.register({\n            tag: 'image',\n            component: ImgBrickComponent,\n            textRepresentation: ImgBrickTextRepresentation,\n\n            destructor: (brickSnapshot: IBrickSnapshot): Promise<void> => {\n                return this.imgModel.remove(brickSnapshot);\n            },\n\n            getBrickResourcePaths: (brickSnapshot: IBrickSnapshot) => {\n                const imageState: ImgBrickState = brickSnapshot.state;\n\n                if (imageState.metadata && imageState.metadata.path) {\n                    return [imageState.metadata.path];\n                }\n\n                return [];\n            },\n\n            name: 'Image',\n            description: 'Embed with a link'\n        });\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'quote-brick',\n    templateUrl: './quote-brick.component.html',\n    styleUrls: ['./quote-brick.component.scss']\n})\nexport class QuoteBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Quote';\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrickRegistry} from '../../wall/wall';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {QuoteBrickComponent} from './component/quote-brick.component';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ContenteditableModule\n    ],\n    exports: [QuoteBrickComponent],\n    declarations: [QuoteBrickComponent],\n    entryComponents: [QuoteBrickComponent]\n})\nexport class QuoteBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'quote',\n            component: QuoteBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Quote',\n            description: 'Capture a quote'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IOnWallFocus} from '../../../wall/wall';\nimport {IVideoBrickState} from '../video-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\n\n@Component({\n    selector: 'video-brick',\n    templateUrl: './video-brick.component.html',\n    styleUrls: ['./video-brick.component.scss']\n})\nexport class VideoBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: IVideoBrickState;\n\n    @Output() stateChanges: EventEmitter<IVideoBrickState> = new EventEmitter();\n\n    @ViewChild('iframe') iframe: ElementRef;\n\n    // ui\n    uiStates: any = {\n        initial: 'initial',\n        video: 'video'\n    };\n\n    uiState: string = this.uiStates.initial;\n\n    scope: IVideoBrickState = {\n        src: ''\n    };\n\n    videoSrcPlaceholderRef: StickyModalRef;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        if (this.state && this.state.src !== this.scope.src) {\n            this.scope.src = this.state.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallStateChange(newState: IVideoBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            this.scope.src = newState.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (this.uiState === this.uiStates.initial && !this.videoSrcPlaceholderRef) {\n            setTimeout(() => {\n                this.showVideoPanel();\n            }, 0);\n        }\n    }\n\n    applySrc(src: string) {\n        this.uiState = this.uiStates.initial;\n\n        if (src.length) {\n            const srcArray = src.split('=');\n            const youtubeId = srcArray[1];\n\n            if (youtubeId) {\n                this.scope.src = `https://www.youtube.com/embed/${youtubeId}`;\n\n                this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n\n                this.save();\n\n                this.uiState = this.uiStates.video;\n            }\n        }\n    }\n\n    showVideoPanel() {\n        this.videoSrcPlaceholderRef = this.ngxStickyModalService.open({\n            component: InputContextComponent,\n            positionStrategy: {\n                name: StickyPositionStrategy.flexibleConnected,\n                options: {\n                    relativeTo: this.el.nativeElement\n                }\n            },\n            position: {\n                originX: 'center',\n                originY: 'bottom',\n                overlayX: 'center',\n                overlayY: 'top'\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.videoSrcPlaceholderRef.result.then((result) => {\n            this.videoSrcPlaceholderRef = null;\n\n            this.applySrc(result.src);\n        }, () => {\n            this.videoSrcPlaceholderRef = null;\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IVideoBrickState} from './video-brick-state.interface';\n\nexport class VideoBrickTextRepresentationClass {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `video!${(this.brickSnapshot.state as IVideoBrickState).src}`;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {VideoBrickComponent} from './component/video-brick.component';\nimport {VideoBrickTextRepresentationClass} from './video-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [VideoBrickComponent],\n    declarations: [VideoBrickComponent, InputContextComponent],\n    entryComponents: [VideoBrickComponent, InputContextComponent]\n})\nexport class VideoBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'video',\n            component: VideoBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Video',\n            description: 'Embed from Youtube and more'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IWebBookmarkBrickState} from '../web-bookmark-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\n\n@Component({\n    selector: 'web-bookmark-brick',\n    templateUrl: './web-bookmark-brick.component.html',\n    styleUrls: ['./web-bookmark-brick.component.scss']\n})\nexport class WebBookmarkBrickComponent implements OnInit {\n    @Input() id: string;\n    @Input() state: IWebBookmarkBrickState;\n\n    @Output() stateChanges: EventEmitter<IWebBookmarkBrickState> = new EventEmitter();\n\n    scope: IWebBookmarkBrickState = {\n        src: null,\n        description: null,\n        image: {\n            height: null,\n            width: null,\n            url: null\n        },\n        logo: {\n            height: null,\n            width: null,\n            url: null\n        },\n        title: null,\n        author: null\n    };\n\n    loading = false;\n\n    constructor(private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n    }\n\n    onWallStateChange(newState: IWebBookmarkBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n        }\n    }\n\n    applySrc(src: string) {\n        if (src.length) {\n            if (this.isValidUrl(src)) {\n                this.loading = true;\n\n                this.getWebPageMetaInfo(src).then((webPageMetaInfo) => {\n                    Object.assign(this.scope, webPageMetaInfo);\n\n                    this.scope.src = src;\n\n                    this.save();\n\n                    this.loading = false;\n                }, () => {\n                    this.loading = false;\n                });\n            } else {\n                alert('Url is invalid');\n            }\n        }\n    }\n\n    showPanel() {\n        if (!this.loading) {\n            this.ngxStickyModalService.open({\n                component: InputContextComponent,\n                positionStrategy: {\n                    name: StickyPositionStrategy.flexibleConnected,\n                    options: {\n                        relativeTo: this.el.nativeElement\n                    }\n                },\n                position: {\n                    originX: 'center',\n                    originY: 'bottom',\n                    overlayX: 'center',\n                    overlayY: 'top'\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            }).result.then((result) => {\n                this.applySrc(result.src);\n            }, () => {\n            });\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private getWebPageMetaInfo(url: string): Promise<any> {\n        return fetch(`https://api.microlink.io/?url=${url}`).then((page) => {\n            return page.json().then((pageMetadata) => {\n                const {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                } = pageMetadata.data;\n\n                return {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                };\n            });\n        });\n    }\n\n    private isValidUrl(src: string): boolean {\n        let url;\n\n        try {\n            url = new URL(src);\n        } catch (e) {\n        }\n\n        return Boolean(url);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {VideoBrickTextRepresentationClass} from '../video-brick/video-brick-text-representation.class';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {WebBookmarkBrickComponent} from './component/web-bookmark-brick.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        TowModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [\n        WebBookmarkBrickComponent\n    ],\n    declarations: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    entryComponents: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    providers: []\n})\nexport class WebBookmarkBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'webbookmark',\n            component: WebBookmarkBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Web Bookmark',\n            description: 'Save a link as a visual bookmark'\n        });\n    }\n}\n","export const SUPPORTED_MODES = [\n    {\n        value: 'javascript',\n        name: 'Javascript'\n    },\n    {\n        value: 'shell',\n        name: 'Shell'\n    },\n    {\n        value: 'xml',\n        name: 'XML'\n    }\n];\n\nexport const DEFAULT_THEME = 'neo';\n","import {Component, Inject} from '@angular/core';\nimport {STICKY_MODAL_DATA, StickyModalRef} from 'ngx-sticky-modal';\n\nexport interface IModeListComponentConfig {\n    modes: { value: string, name: string }[];\n}\n\n@Component({\n    selector: 'w-mode-list-component',\n    templateUrl: './mode-list.component.html'\n})\nexport class ModeListComponent {\n    constructor(@Inject(STICKY_MODAL_DATA) public config: IModeListComponentConfig,\n                private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    onSelected(mode: string) {\n        this.ngxStickyModalRef.close(mode);\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/shell/shell';\nimport 'codemirror/mode/xml/xml';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {DEFAULT_THEME, SUPPORTED_MODES} from '../code-brick.constant';\nimport {ModeListComponent} from '../mode-list/mode-list.component';\n\nexport interface ICodeBrickState {\n    code: string;\n    mode: string;\n}\n\n@Component({\n    selector: 'code-brick',\n    templateUrl: './code-brick.component.html',\n    styleUrls: ['./code-brick.component.scss']\n})\nexport class CodeBrickComponent implements OnInit {\n    scope: ICodeBrickState = {\n        code: '',\n        mode: SUPPORTED_MODES[0].value\n    };\n\n    ui: {\n        displayModeName: string;\n    } = {\n        displayModeName: SUPPORTED_MODES[0].name\n    };\n\n    codeMirrorInstance: any;\n\n    @Input() id: string;\n    @Input() state: ICodeBrickState;\n    @ViewChild('container', {read: ElementRef}) container: ElementRef;\n    @ViewChild('mode', {read: ElementRef}) mode: ElementRef;\n\n    @Output() stateChanges: EventEmitter<ICodeBrickState> = new EventEmitter();\n\n    constructor(private ngxStickyModalService: StickyModalService,\n                private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.codeMirrorInstance = CodeMirror(this.container.nativeElement, {\n            value: ``,\n            mode: this.scope.mode,\n            theme: DEFAULT_THEME,\n            dragDrop: false,\n            scrollbarStyle: null\n        });\n\n        this.codeMirrorInstance.on('change', () => {\n            this.scope.code = this.codeMirrorInstance.getValue();\n\n            this.saveState();\n        });\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ICodeBrickState) {\n        if (newState && newState.code !== this.scope.code) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        this.codeMirrorInstance.setValue(this.scope.code);\n\n        if (this.scope.mode !== this.codeMirrorInstance.getMode().name) {\n            this.codeMirrorInstance.setOption('mode', this.scope.mode);\n        }\n\n        this.ui.displayModeName = SUPPORTED_MODES.find((mode) => mode.value === this.scope.mode).name;\n    }\n\n    saveState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    onModeSelected() {\n        const elementBoundingRect = this.mode.nativeElement.getBoundingClientRect();\n\n        const modes: any[] = SUPPORTED_MODES.map((mode) => {\n            return {\n                ...mode,\n                selected: mode.value === this.scope.mode\n            };\n        });\n\n        this.ngxStickyModalService.open({\n            component: ModeListComponent,\n            data: {modes},\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.x,\n                    clientY: elementBoundingRect.y + 35\n                }\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        }).result.then((mode: any) => {\n            Object.assign(this.scope, {\n                ...this.state,\n                mode: mode.value\n            });\n\n            this.processNewState();\n        }, () => {\n            // nothing\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {CodeBrickComponent} from './component/code-brick.component';\nimport {ModeListComponent} from './mode-list/mode-list.component';\nimport {MatButtonModule, MatListModule} from '@angular/material';\nimport {CommonModule} from '@angular/common';\nimport {WallModule} from '../../wall/wall.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        WallModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatListModule\n    ],\n    declarations: [\n        CodeBrickComponent,\n        ModeListComponent\n    ],\n    entryComponents: [\n        CodeBrickComponent,\n        ModeListComponent\n    ]\n})\nexport class CodeBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'code',\n            component: CodeBrickComponent,\n            name: 'Code',\n            description: 'Capture a code snippet'\n        });\n    }\n}\n","import {ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {BrickRegistry, IBrickDefinition, IBrickSpecification} from '../../../wall/wall';\nimport {TEXT_BRICK_TAG} from '../text-brick.constant';\n\nexport interface IBricksListComponentConfig {\n    text$: Observable<string>;\n    up$: Observable<any>;\n    down$: Observable<any>;\n    enter$: Observable<any>;\n    selectedTag$: Subject<string>;\n}\n\n@Component({\n    selector: 'w-bricks-list',\n    templateUrl: './bricks-list.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BricksListComponent implements OnInit, OnDestroy {\n    selectedTag$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n    bricksList$: BehaviorSubject<IBrickSpecification[]> = new BehaviorSubject([]);\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private brickRegistry: BrickRegistry,\n                @Inject(STICKY_MODAL_DATA) public config: IBricksListComponentConfig) {\n        this.updateBricksList('');\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.config.text$.subscribe((filterText) => {\n                this.updateBricksList(filterText.slice(1));\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.up$.subscribe(() => {\n                this.onNavigationUpDownHandler(true);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.down$.subscribe(() => {\n                this.onNavigationUpDownHandler(false);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.enter$.subscribe(() => {\n                this.notifySelectedTag();\n            })\n        );\n    }\n\n    onBrickSelected(brickDescription: IBrickDefinition) {\n        this.selectedTag$.next(brickDescription.tag);\n\n        this.notifySelectedTag();\n    }\n\n    trackByFn(index, item) {\n        return item.tag;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    private notifySelectedTag() {\n        this.config.selectedTag$.next(this.selectedTag$.getValue());\n    }\n\n    private updateBricksList(filterText: string) {\n        const brickDescriptors = this.brickRegistry.getAll()\n            .filter((brickDescriptor) => {\n                if (brickDescriptor.tag === TEXT_BRICK_TAG) {\n                    return false;\n                } else {\n                    return brickDescriptor.tag.includes(filterText);\n                }\n            }).sort((a, b) => {\n                if (a.tag.startsWith(filterText)) {\n                    return -1;\n                } else if (b.tag.startsWith(filterText)) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n        if (brickDescriptors.length) {\n            this.selectedTag$.next(brickDescriptors[0].tag);\n        } else {\n            this.selectedTag$.next(null);\n        }\n\n        this.bricksList$.next(brickDescriptors);\n    }\n\n    private onNavigationUpDownHandler(isUp: boolean): void {\n        const currentSelectedTag = this.selectedTag$.getValue();\n        const currentBrickList = this.bricksList$.getValue();\n\n        if (currentSelectedTag && currentBrickList.length > 1) {\n            const currentSelectedBrickIndex = currentBrickList.findIndex((brickDescriptor) => {\n                return brickDescriptor.tag === currentSelectedTag;\n            });\n\n            let nextSelectedBrick;\n\n            if (isUp) {\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex - 1];\n\n                if (!nextSelectedBrick) {\n                    // take last brick\n                    nextSelectedBrick = currentBrickList[currentBrickList.length - 1];\n                }\n            } else {\n                // is bottom\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex + 1];\n\n                if (!nextSelectedBrick) {\n                    // take first brick\n                    nextSelectedBrick = currentBrickList[0];\n                }\n            }\n\n            this.selectedTag$.next(nextSelectedBrick.tag);\n\n            // wait until component re-renders\n            setTimeout(() => {\n                document.getElementsByClassName('w-bricks-list__selected')[0].scrollIntoView();\n            });\n        }\n    }\n}\n","export const TEXT_BRICK_TAG = 'text';\n","export class NodeTreeSplit {\n    leftTree: HTMLElement;\n    rightTree: HTMLElement;\n\n    constructor(private root: HTMLElement,\n                private targetElement: Node, // text node\n                private offset: number) {\n        if (root === targetElement) {\n            // edge case scenario, just return root node itself\n            this.leftTree = root as HTMLElement;\n            this.rightTree = root as HTMLElement;\n        } else {\n            // get direct parent of target node\n            let parent = targetElement.parentNode;\n\n            // create left and right trees which will be returned as result\n            let rightTree = parent.cloneNode(false);\n            let leftTree = parent.cloneNode(false);\n\n            // Build Right tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            rightTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all next siblings of target node to the right tree\n            this.appendNextSiblingsToNode(rightTree, targetElement);\n\n            // Build Left tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            leftTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(0, offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all previous siblings of target node to the left tree\n            this.prependPreviousSiblingsToNode(leftTree, targetElement);\n\n            if (root === parent) {\n                // we already fully build left and right trees\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            } else {\n                // recursively build left and right trees\n                // climbing from parent node to the root node\n                let leftParentTree;\n                let rightParentTree;\n                let grandparent = parent.parentNode;\n\n                while (root.contains(grandparent) || grandparent === root) {\n                    rightParentTree = grandparent.cloneNode(false);\n                    leftParentTree = grandparent.cloneNode(false);\n\n                    // Process Left tree\n                    this.prependPreviousSiblingsToNode(leftParentTree, parent);\n\n                    leftParentTree.appendChild(leftTree);\n                    leftTree = leftParentTree;\n\n                    // Process Right tree\n                    this.appendNextSiblingsToNode(rightParentTree, parent);\n\n                    rightParentTree.prepend(rightTree);\n                    rightTree = rightParentTree;\n\n                    parent = grandparent;\n                    grandparent = grandparent.parentNode;\n                }\n\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            }\n        }\n    }\n\n    private prependPreviousSiblingsToNode(leftTree, targetNode: Node): void {\n        let previousSibling = targetNode.previousSibling;\n\n        while (previousSibling) {\n            leftTree.prepend(previousSibling.cloneNode(true));\n\n            previousSibling = previousSibling.previousSibling;\n        }\n    }\n\n    private appendNextSiblingsToNode(rightTree, targetElement: Node): void {\n        let nextSibling = targetElement.nextSibling;\n\n        while (nextSibling) {\n            rightTree.appendChild(nextSibling.cloneNode(true));\n\n            nextSibling = nextSibling.nextSibling;\n        }\n    }\n}\n","export class TreeNodeTraverse {\n    constructor(private root: HTMLElement) {\n    }\n\n    traversePostOrder(fn: (node: Node) => void) {\n        this._traversePostOrder(this.root, fn);\n    }\n\n    traversePreOrder(fn: (node: Node) => void) {\n        this._traversePreOrder(this.root, fn);\n    }\n\n    traversePostPreOrder(fn: (node: Node) => void) {\n        this._traversePostPreOrder(this.root, fn);\n    }\n\n    getPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostPreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    private _traversePostOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n\n    private _traversePreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePreOrder(childNode, fn);\n            }\n        });\n    }\n\n    private _traversePostPreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostPreOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n}\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {ITextBrickApi} from '../text-brick-api.interface';\n\nexport interface ITextContextMenuComponent {\n    api: ITextBrickApi;\n}\n\n@Component({\n    selector: 'w-text-context-menu',\n    templateUrl: './text-context-menu.component.html'\n})\nexport class TextContextMenuComponent implements OnInit {\n    @ViewChild('linkEl') linkEl: ElementRef;\n\n    ui = {\n        showLinkForm: false\n    };\n\n    constructor(@Inject(STICKY_MODAL_DATA) public config: ITextContextMenuComponent) {\n\n    }\n\n    ngOnInit() {\n        this.config.api.saveSelection();\n    }\n\n    bold() {\n        this.config.api.bold();\n    }\n\n    italic() {\n        this.config.api.italic();\n    }\n\n    link() {\n        this.switchLinkFormVisibility();\n\n        if (this.ui.showLinkForm) {\n            this.config.api.saveSelection();\n\n            setTimeout(() => {\n                if (this.config.api.isLinkSelected()) {\n                    this.linkEl.nativeElement.value = this.config.api.getSelectedLinkHref();\n                }\n\n                this.linkEl.nativeElement.focus();\n            });\n        } else {\n            this.config.api.restoreSelection();\n        }\n    }\n\n    applyLink() {\n        this.config.api.restoreSelection();\n\n        if (this.config.api.isLinkSelected()) {\n            this.config.api.changeLinkUrl(this.linkEl.nativeElement.value);\n        } else {\n            this.config.api.createLink(this.linkEl.nativeElement.value);\n        }\n\n        this.switchLinkFormVisibility();\n    }\n\n    unlink() {\n        this.config.api.restoreSelection();\n\n        this.config.api.unlink();\n\n        this.switchLinkFormVisibility();\n    }\n\n    switchLinkFormVisibility() {\n        this.ui.showLinkForm = !this.ui.showLinkForm;\n    }\n}\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {debounceTime, filter} from 'rxjs/operators';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {NodeTreeSplit} from '../../../modules/utils/node-tree-split';\nimport {TreeNodeTraverse} from '../../../modules/utils/node/tree-node-traverse';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\nimport {BricksListComponent} from '../bricks-list/bricks-list.component';\nimport {ITextBrickApi} from '../text-brick-api.interface';\nimport {TextContextMenuComponent} from '../text-context-menu/text-context-menu.component';\nimport {IWallModel} from '../../../wall/model/interfaces/wall-model.interface';\nimport {DIVIDER_BRICK_TAG} from '../../divider-brick/divider-brick.constant';\n\n@Component({\n    selector: 'text-brick',\n    templateUrl: './text-brick.component.html',\n    styleUrls: ['./text-brick.component.scss']\n})\nexport class TextBrickComponent extends BaseTextBrickComponent implements OnInit, OnDestroy, ITextBrickApi {\n    @Input() wallModel: IWallModel;\n\n    placeholder = null;\n\n    brickSelectionModalRef: StickyModalRef;\n    contextMenuModalRef: StickyModalRef;\n\n    up$ = new Subject();\n    down$ = new Subject();\n    enter$ = new Subject();\n    selectedTag$: Subject<string> = new Subject();\n\n    subscriptions: Subscription[] = [];\n\n    selectionInfo: {\n        ranges: Range[],\n        selectedLink: HTMLElement\n    };\n\n    api: ITextBrickApi = {\n        bold: this.bold.bind(this),\n        italic: this.italic.bind(this),\n        createLink: this.createLink.bind(this),\n        changeLinkUrl: this.changeLinkUrl.bind(this),\n        isLinkSelected: this.isLinkSelected.bind(this),\n        getSelectedLinkHref: this.getSelectedLinkHref.bind(this),\n        saveSelection: this.saveSelection.bind(this),\n        restoreSelection: this.restoreSelection.bind(this),\n        unlink: this.unlink.bind(this)\n    };\n\n    constructor(private zone: NgZone,\n                private ngxStickyModalService: StickyModalService,\n                private cd: ChangeDetectorRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private el: ElementRef) {\n        super();\n\n        this.selectedTag$.subscribe((newTag) => {\n            if (newTag) {\n                this.hideBricksList();\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                if (newTag === DIVIDER_BRICK_TAG) {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            }\n        });\n\n        this.subscriptions.push(\n            // show sub-menu for selected text\n            fromEvent(this.el.nativeElement, 'mouseup')\n                .pipe(\n                    filter(() => Boolean(this.scope.text.length)),\n                    debounceTime(500),\n                    filter(() => this.el.nativeElement.contains(window.getSelection().anchorNode))\n                )\n                .subscribe((e: any) => {\n                    this.onTextSelection();\n                })\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    onBlur() {\n        this.placeholder = null;\n    }\n\n    onFocus() {\n        this.placeholder = 'Type \\'/\\' for commands';\n    }\n\n    onKeyPress(e: KeyboardEvent) {\n        super.onKeyPress(e);\n\n        this.hideContextMenuModal();\n    }\n\n    // open the link in new window\n    onClick(event: MouseEvent) {\n        const target = event.target as Node;\n\n        if (this.isHTMLElement(target)) {\n            if (target.tagName === 'A') {\n                window.open(target.getAttribute('href'), '_blank');\n            }\n        }\n    }\n\n    topKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.up$.next();\n        } else {\n            super.topKeyPressed(e);\n        }\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.down$.next();\n        } else {\n            super.bottomKeyPressed(e);\n        }\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            this.enter$.next();\n\n            setTimeout(() => {\n                this.hideBricksList();\n            }, 10);\n        } else {\n            if (this.isTag()) {\n                const newTag = this.scope.text.slice(1);\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                // d - divider tag\n                if (newTag === 'd') {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            } else {\n                super.enterKeyPressed(e);\n            }\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        const nodeTreeSplit = new NodeTreeSplit(this.editor.nativeElement, target, offset);\n\n        return {\n            left: nodeTreeSplit.leftTree.innerHTML,\n            right: nodeTreeSplit.rightTree.innerHTML\n        };\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.hideBricksList();\n        }\n    }\n\n    onTextChange() {\n        super.onTextChange();\n\n        if (this.brickSelectionModalRef) {\n            if (!this.scope.text.length) {\n                this.hideBricksList();\n            }\n        } else if (this.scope.text[0] === '/' && this.scope.text.length === 1) {\n            this.editor.nativeElement.blur();\n\n            const elementBoundingRect = this.el.nativeElement.getBoundingClientRect();\n\n            this.brickSelectionModalRef = this.ngxStickyModalService.open({\n                component: BricksListComponent,\n                data: {\n                    text$: this.textChange,\n                    up$: this.up$,\n                    down$: this.down$,\n                    enter$: this.enter$,\n                    selectedTag$: this.selectedTag$\n                },\n                positionStrategy: {\n                    name: StickyPositionStrategy.coordinate,\n                    options: {\n                        clientX: elementBoundingRect.x,\n                        clientY: elementBoundingRect.y + 35\n                    }\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            });\n\n            setTimeout(() => {\n                this.editor.nativeElement.focus();\n            });\n        }\n    }\n\n    onPaste(e: ClipboardEvent) {\n        const imageDataTransferItem = this.extractImageDataTransferItem(e.clipboardData.items);\n\n        if (imageDataTransferItem) {\n            e.preventDefault();\n\n            (new ImgEncoder(imageDataTransferItem.getAsFile())).getBase64Representation().then((imgBase64) => {\n                this.wallModel.api.core.turnBrickInto(this.id, 'image', {\n                    src: imgBase64\n                });\n            });\n        } else {\n            super.onPaste(e);\n        }\n    }\n\n    onTextSelection() {\n        if (!this.contextMenuModalRef) {\n            const selection = window.getSelection();\n\n            if (!selection.isCollapsed) {\n                this.showContextModal();\n            }\n        }\n    }\n\n    // API\n    bold(): void {\n        document.execCommand('bold', false);\n    }\n\n    italic(): void {\n        document.execCommand('italic', false);\n    }\n\n    createLink(url: string): void {\n        document.execCommand('createLink', false, url);\n    }\n\n    getSelectedLinkHref(): string {\n        if (this.selectionInfo.selectedLink) {\n            return this.selectionInfo.selectedLink.getAttribute('href');\n        }\n    }\n\n    unlink(): void {\n        document.execCommand('unlink', false);\n    }\n\n    changeLinkUrl(url: string): void {\n        if (this.selectionInfo.selectedLink) {\n            this.selectionInfo.selectedLink.setAttribute('href', url);\n\n            this.triggerEditorChange();\n        }\n    }\n\n    isLinkSelected(): boolean {\n        return Boolean(this.selectionInfo && this.selectionInfo.selectedLink);\n    }\n\n    saveSelection() {\n        this.selectionInfo = {\n            selectedLink: this.getSelectedLink(),\n            ranges: this.getSelectedRanges()\n        };\n    }\n\n    restoreSelection() {\n        const sel = window.getSelection();\n\n        sel.removeAllRanges();\n\n        for (let i = 0, len = this.selectionInfo.ranges.length; i < len; ++i) {\n            sel.addRange(this.selectionInfo.ranges[i]);\n        }\n    }\n\n    // end API\n\n    private getSelectedLink(): HTMLElement {\n        const selection = window.getSelection();\n\n        let anchorNodeLink;\n        let focusNodeLink;\n\n        const isAnchorNodeBelongToBrick = this.el.nativeElement.contains(selection.anchorNode);\n        const isFocusNodeBelongToBrick = this.el.nativeElement.contains(selection.focusNode);\n\n        if (isAnchorNodeBelongToBrick) {\n            anchorNodeLink = this.findParentLink(selection.anchorNode);\n        }\n\n        if (isFocusNodeBelongToBrick) {\n            focusNodeLink = this.findParentLink(selection.focusNode);\n        }\n\n        if (anchorNodeLink) {\n            return anchorNodeLink;\n        } else if (focusNodeLink) {\n            return focusNodeLink;\n        } else if (selection.anchorNode !== selection.focusNode &&\n            isFocusNodeBelongToBrick && isAnchorNodeBelongToBrick) {\n            return this.findLinkBetweenNodes(selection.anchorNode, selection.focusNode);\n        }\n    }\n\n    private triggerEditorChange() {\n        this.editor.nativeElement.dispatchEvent(new Event('input'));\n    }\n\n    private showContextModal() {\n        this.editor.nativeElement.blur();\n\n        const sel = window.getSelection();\n\n        const elementBoundingRect = sel.getRangeAt(0).getBoundingClientRect();\n\n        this.contextMenuModalRef = this.ngxStickyModalService.open({\n            component: TextContextMenuComponent,\n            data: {\n                api: this.api\n            },\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.left + ((elementBoundingRect.right - elementBoundingRect.left) / 2.5),\n                    clientY: elementBoundingRect.top - 35\n                }\n            },\n            overlayConfig: {\n                hasBackdrop: false\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.contextMenuModalRef.result.then(() => {\n            this.hideContextMenuModal();\n        }, () => {\n            this.hideContextMenuModal();\n        });\n\n        setTimeout(() => {\n            this.editor.nativeElement.focus();\n        });\n    }\n\n    // todo: might be as util method\n    private getSelectedRanges(): Range[] {\n        const sel = window.getSelection();\n        const ranges = [];\n\n        for (let i = 0, len = sel.rangeCount; i < len; ++i) {\n            ranges.push(sel.getRangeAt(i));\n        }\n\n        return ranges;\n    }\n\n    private extractImageDataTransferItem(items: DataTransferItemList): DataTransferItem {\n        let index;\n\n        for (index in items) {\n            if (items.hasOwnProperty(index)) {\n                const item = items[index];\n\n                if (item.kind === 'file') {\n                    return item;\n                }\n            }\n        }\n    }\n\n    private isTag() {\n        return this.scope.text && this.scope.text[0] === '/' &&\n            this.wallModel.api.core.isRegisteredBrick(this.scope.text.slice(1));\n    }\n\n    private hideBricksList() {\n        if (this.brickSelectionModalRef) {\n            this.brickSelectionModalRef.close();\n\n            this.brickSelectionModalRef = null;\n        }\n    }\n\n    private hideContextMenuModal() {\n        if (this.contextMenuModalRef) {\n            this.contextMenuModalRef.close();\n\n            this.contextMenuModalRef = null;\n        }\n    }\n\n    private findParentLink(node: Node): HTMLElement {\n        let currentNode: Node = node;\n        let linkNode = null;\n\n        while (!linkNode && currentNode !== this.el.nativeElement) {\n            if ((currentNode as HTMLElement).tagName === 'A') {\n                linkNode = currentNode;\n            }\n\n            currentNode = currentNode.parentElement;\n        }\n\n        return linkNode;\n    }\n\n    private findLinkBetweenNodes(nodeA: Node, nodeB: Node): HTMLElement {\n        const treeNodeTraverse = new TreeNodeTraverse(this.editor.nativeElement);\n\n        const orderedNodes = treeNodeTraverse.getPostPreOrderNodes();\n\n        let nodeAIndex = orderedNodes.indexOf(nodeA);\n        let nodeBIndex = orderedNodes.indexOf(nodeB);\n\n        if (nodeBIndex < nodeAIndex) {\n            const temp = nodeBIndex;\n\n            nodeBIndex = nodeAIndex;\n            nodeAIndex = temp;\n        }\n\n        const orderedNodesBetweenNodes = orderedNodes.slice(nodeAIndex, nodeBIndex);\n\n        const linkNodes = orderedNodesBetweenNodes.filter((node) => {\n            if (this.isHTMLElement(node)) {\n                return node.tagName === 'A';\n            }\n        });\n\n        return linkNodes[0] as HTMLElement;\n    }\n\n    private isHTMLElement(node: Node | HTMLElement): node is HTMLElement {\n        return (node as HTMLElement).querySelector !== undefined;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {BricksListComponent} from './bricks-list/bricks-list.component';\nimport {TextBrickComponent} from './component/text-brick.component';\nimport {TextContextMenuComponent} from './text-context-menu/text-context-menu.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatListModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatListModule\n    ],\n    exports: [\n        TextBrickComponent,\n        BricksListComponent,\n        TextContextMenuComponent\n    ],\n    declarations: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ],\n    entryComponents: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ]\n})\nexport class TextBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'text',\n            component: TextBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Text',\n            description: 'Just start writing with plain text'\n        });\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToTopLeftPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToLeftCenterPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","export const WALL = {\n    MODES: {\n        EDIT: 'edit',\n        READ: 'READ'\n    }\n};\n"]}