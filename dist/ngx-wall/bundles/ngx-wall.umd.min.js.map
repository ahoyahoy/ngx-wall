{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-wall/lib/modules/utils/guid.ts","ng://ngx-wall/lib/modules/utils/base64-to-file.ts","ng://ngx-wall/lib/modules/utils/img-encoder.service.ts","ng://ngx-wall/lib/wall/model/wall-brick.model.ts","ng://ngx-wall/lib/wall/plugins/core/events/add-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/before-change.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/move-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-bricks.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/set-plan.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/turn-brick-into.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/update-brick-state.event.ts","ng://ngx-wall/lib/wall/plugins/core/layout-walker.class.ts","ng://ngx-wall/lib/wall/plugins/core/wall-layout.model.ts","ng://ngx-wall/lib/wall/plugins/core/wall-core.plugin.ts","ng://ngx-wall/lib/wall/model/events/wall-plugin-initialized.event.ts","ng://ngx-wall/lib/wall/model/wall.model.ts","ng://ngx-wall/lib/wall/registry/brick-registry.service.ts","ng://ngx-wall/lib/wall/factory/wall-model.factory.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/component/placeholder.component.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.service.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.module.ts","ng://ngx-wall/lib/wall/components/wall-canvas/wall-canvas.component.ts","ng://ngx-wall/lib/modules/radar/events/location-updated.event.ts","ng://ngx-wall/lib/modules/radar/spot.model.ts","ng://ngx-wall/lib/modules/radar/radar-coordinator.service.ts","ng://ngx-wall/lib/modules/radar/radar.service.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component.ts","ng://ngx-wall/lib/wall/components/wall/events/selected-brick.event.ts","ng://ngx-wall/lib/wall/components/wall/wall-view.model.ts","ng://ngx-wall/lib/wall/components/wall/wall.component.ts","ng://ngx-wall/lib/modules/tow/events/start-working.event.ts","ng://ngx-wall/lib/modules/tow/events/stop-working.event.ts","ng://ngx-wall/lib/modules/tow/events/work-in-progress.event.ts","ng://ngx-wall/lib/modules/tow/tow-coordinator.service.ts","ng://ngx-wall/lib/modules/tow/tow-slave/tow-slave.directive.ts","ng://ngx-wall/lib/modules/tow/tow.service.ts","ng://ngx-wall/lib/modules/radar/directive/spot.directive.ts","ng://ngx-wall/lib/modules/radar/radar.module.ts","ng://ngx-wall/lib/modules/tow/tow.module.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.component.ts","ng://ngx-wall/lib/modules/pick-out/events/end-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/pick-out-items.event.ts","ng://ngx-wall/lib/modules/pick-out/events/start-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/stop-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-coordinator.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.model.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.directive.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.constant.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.module.ts","ng://ngx-wall/lib/wall/wall.module.ts","ng://ngx-wall/lib/modules/helper-components/brick-input-placeholder/brick-input-placeholder.component.ts","ng://ngx-wall/lib/modules/helper-components/loading-wrapper/loading-wrapper.component.ts","ng://ngx-wall/lib/modules/helper-components/helper-components.module.ts","ng://ngx-wall/lib/plugins/copy/copy.plugin.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.plugin.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.constant.ts","ng://ngx-wall/lib/modules/tow/tow.constant.ts","ng://ngx-wall/lib/plugins/selections/selection.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.constant.ts","ng://ngx-wall/lib/bricks/divider-brick/component/divider-brick.component.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.module.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-representation.class.ts","ng://ngx-wall/lib/modules/utils/deep-left-node-child.ts","ng://ngx-wall/lib/modules/utils/deep-right-node-child.ts","ng://ngx-wall/lib/modules/utils/first-sub-string-node.ts","ng://ngx-wall/lib/modules/utils/node/caret-start-end-position.ts","ng://ngx-wall/lib/modules/utils/node/cursor-left-coordinate.ts","ng://ngx-wall/lib/modules/utils/node/cursor-position-in-line.ts","ng://ngx-wall/lib/modules/utils/node/place-caret-to-position.ts","ng://ngx-wall/lib/modules/utils/node/string-without-empty-nodes.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.constant.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/bottom-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/enter-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/left-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/right-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/top-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.component.ts","ng://ngx-wall/lib/bricks/header-brick/component/header-brick.component.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.directive.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.module.ts","ng://ngx-wall/lib/bricks/header-brick/header-brick.module.ts","ng://ngx-wall/lib/modules/file-uploader/file-uploader.token.ts","ng://ngx-wall/lib/bricks/img-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/base-brick/base-brick.component.ts","ng://ngx-wall/lib/bricks/img-brick/component/img-brick.component.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-destructor.class.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-text-representation.class.ts","ng://ngx-wall/lib/modules/resizable/resizable-handler.component.ts","ng://ngx-wall/lib/modules/resizable/resizable.directive.ts","ng://ngx-wall/lib/modules/resizable/resizable.const.ts","ng://ngx-wall/lib/modules/resizable/resizable.module.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick.module.ts","ng://ngx-wall/lib/bricks/quote-brick/component/quote-brick.component.ts","ng://ngx-wall/lib/bricks/quote-brick/quote-brick.module.ts","ng://ngx-wall/lib/bricks/video-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/video-brick/component/video-brick.component.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick-text-representation.class.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick.module.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/component/web-bookmark-brick.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/web-bookmark-brick.module.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.constant.ts","ng://ngx-wall/lib/bricks/code-brick/mode-list/mode-list.component.ts","ng://ngx-wall/lib/bricks/code-brick/component/code-brick.component.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.module.ts","ng://ngx-wall/lib/bricks/text-brick/bricks-list/bricks-list.component.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.constant.ts","ng://ngx-wall/lib/modules/utils/node-tree-split.ts","ng://ngx-wall/lib/modules/utils/node/tree-node-traverse.ts","ng://ngx-wall/lib/bricks/text-brick/text-context-menu/text-context-menu.component.ts","ng://ngx-wall/lib/bricks/text-brick/component/text-brick.component.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.module.ts","ng://ngx-wall/lib/modules/radar/events/location-to-top-left-point.event.ts","ng://ngx-wall/lib/modules/radar/events/location-to-left-center-point.event.ts","ng://ngx-wall/lib/wall/components/wall/wall.constant.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","Guid","get","s4","Math","floor","random","toString","substring","Base64ToFile","base64","fileName","getFile","arr","split","mime","match","bstr","atob","u8arr","Uint8Array","charCodeAt","File","type","ImgEncoder","image","getBase64Representation","_this","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","readAsDataURL","WallBrick","id","tag","meta","state","getState","JSON","parse","stringify","updateState","newState","keys","turnInto","getSnapshot","AddBrickEvent","brickId","BeforeChangeEvent","beforeEventType","MoveBrickEvent","movedBrickIds","beforeBrickId","RemoveBrickEvent","brick","previousBrickId","nextBrickId","RemoveBricksEvent","bricks","SetPlanEvent","TurnBrickIntoEvent","newTag","oldTag","UpdateBrickStateEvent","brickState","oldBrickState","LayoutWalker","brickRegistry","rows","getRowCount","isBrickAheadOf","firstBrickId","secondBrickId","brickIdsSequence","getBrickSequence","map","indexOf","getBrickTag","getBrickById","getBrickIds","filterBricks","predictor","wallBrick","getBrickPosition","brickPosition","rowIndex","columnIndex","brickIndex","columns","forEach","column","index","getColumnCount","getBricksCount","getNextBrick","bricksSequence","findIndex","getNextBrickId","nextBrick","getPreviousBrick","getPreviousBrickId","previousBrick","predicate","brickSequence","traverse","row","getNextTextBrickId","nextTextBrick","getNextTextBrick","getPreviousTextBrickId","previousTextBrick","getPreviousTextBrick","findBricksAfter","currentBrick","supportText","previousTextBricks","findBrickBefore","currentBrickIdIndex","splice","brickIdAfter","find","brickIdBefore","setLayout","fn","WallLayout","layoutWalker","addBrickToNewRow","rowId","lastRowIndex","createNewRow","generateId","addBrick","addBrickToExistingColumn","getColumn","bricksCount","addBrickToNewColumn","columnCount","createNewColumn","moveBrickAfterInNewRow","afterBrickId","reverse","movedBrickId","currentMovedBrick","removeBrick","newRowIndex","moveBrickAfterInSameColumn","afterBrickPosition","moveBrickBeforeInNewRow","beforeBrickPosition","moveBrickBeforeInSameColumn","moveBrickToNewColumn","side","movedBricks","movedBrick","initializeNewRow","initializeNewColumn","WallCorePlugin","name","version","DEFAULT_BRICK","events","Subject","onWallInitialize","wallModel","methodName","bind","registerApi","setPlan","plan","dispatch","layout","planBrick","currentPlanBrick","restoreBrick","addBrickAfterBrickId","newBrick","createBrick","getBrickSnapshot","addBrickBeforeBrickId","addDefaultBrick","brickCount","addBrickAtStart","updateBrickState","oldState","clearBrickResources","then","removedBrick","removeBricks","brickIds","clearPromises","all","removedBricks","clear","turnBrickInto","moveBrickAfterBrickId","moveBrickBeforeBrickId","targetBrickIds","getPlan","planColumn","data","sortBrickIdsByLayoutOrder","filter","preparedRow","getBrickResourcePaths","brickSpecification","getBrickTextRepresentation","textRepresentation","getText","subscribe","callback","isRegisteredBrick","Boolean","generateGuid","brickDefinition","destructor","WallPluginInitializedEvent","pluginName","WallModel","config","api","core","events$","plugins","Map","plugin","initializePlugin","apiName","destroy","destroyPlugin","set","onWallPluginDestroy","BrickRegistry","register","brickConfiguration","getAll","Injectable","WallModelFactory","unshift","PlaceholderComponent","setCoordinate","x","size","isHorizontal","Component","args","template","PlaceholderRenderer","componentFactoryResolver","appRef","injector","placeholderComponentRef","render","renderPlaceholderComponent","removePlaceholderComponent","resolveComponentFactory","attachView","hostView","domElem","rootNodes","document","appendChild","detachView","instance","ComponentFactoryResolver","ApplicationRef","Injector","PlaceholderRendererModule","NgModule","imports","CommonModule","declarations","providers","entryComponents","WallCanvasComponent","doc","selectedBricks","focusedBrick","canvasClick","EventEmitter","onBrickStateChanged","focusedBrick$","selectedBricks$","onEditorClick","expander","nativeElement","emit","ngOnChanges","changes","currentValue","brickStateChanged","trackRowsBy","item","selector","Inject","DOCUMENT","Input","Output","ViewChild","LocationUpdatedEvent","spots","SpotModel","updateInfo","_a","getInfo","position","isCross13Line","height","getMinimalDistanceToPoint","distanceToLine12","abs","distanceToLine43","distanceToLine14","distanceToLine23","width","minDistanceToHorizontalLine","min","minDistanceToVerticalLine","sqrt","getDistanceToTopLeftPoint","a","getDistanceToBottomLeftPoint","getDistanceToLeftCenterPoint","isPointInsideSpot","RadarCoordinator","zone","mouseMove$","fromEvent","runOutsideAngular","pipe","throttleTime","updateSpotsInfo","updateLocationPosition","clientX","clientY","spotId","spotInstance","unRegister","delete","spot","filterSpots","from","_b","o","m","r","ar","error","__read","sortedSpots","minimalDistance","topLeftPointDistance","bottomLeftPointDistance","centerLeftPointDistance","NgZone","Radar","radarCoordinator","WallCanvasBrickComponent","resolver","radar","cdRef","wallCanvasComponent","selected","isMouseNear","isMediaInteractionEnabled","minimalDistanceToMouse","ngOnInit","isPickOutItem","isBeacon","componentReference","renderBrick","radarSubscription","currentSpot","detectChanges","focusedBrickSubscription","callInstanceApi","context","selectedBricksSubscription","isMediaInteractionEnabledSubscription","isMediaInteractionEnabled$","firstChange","ngOnDestroy","unsubscribe","stateChangesSubscription","factory","component","container","createComponent","componentInstance","stateChanges","ChangeDetectorRef","read","ViewContainerRef","WallCanvasRowComponent","trackColumnsBy","trackBricksBy","hash","SelectedBrickEvent","selectedBrickIds","WallViewModel","BehaviorSubject","canvasLayout","getCanvasLayout","brickConfig","initialize","coreApi","reduce","seal","wallModelSubscription","focusOnBrickId","unSelectBricks","selectBrick","selectedBricksClone","slice","selectBricks","addBrickToSelection","removeBrickFromSelection","brickIdIndex","getSelectedBrickIds","getFocusedBrickId","focusContext","focusOnPreviousTextBrick","previousTextBrickId","focusOnNextTextBrick","nextTextBrickId","enableMediaInteraction","disableMediaInteraction","currentBrickIds","brickSnapshot","text","onCanvasClick","rowCount","lastBrickSnapshot","reset","WallComponent","wallViewModel","model","configuration","cleanUp","StartWorkingEvent","slaveId","StopWorkingEvent","WorkInProgressEvent","mousePosition","TowCoordinator","isSlaveWorking","addEventListener","preventDefault","dataTransfer","dropEffect","slaveWorkProgress","slaveStartWorking","slaveStopWorking","TowSlaveDirective","renderer2","el","towCoordinator","dragStart","setData","drag","dragEnd","stopPropagation","setAttribute","Directive","Renderer2","ElementRef","HostListener","TowService","SpotDirective","String","getData","getSize","getPosition","offsetWidth","offsetHeight","offsets","getBoundingClientRect","left","top","RadarModule","exports","TowModule","PickOutAreaComponent","pickOutAreaModel","EndPickOut","PickOutItems","ids","StartPickOut","StopPickOut","PickOutCoordinator","isPickOutAllowed","disablePickOut","enablePickOut","stopPickOut","startPickOut","pickOutChanged","range","pickOutSpotModels","spotModel","getSelectedItemIds","endPickOut","pickOutsItem","pickOutItem","PickOutAreaModel","scrollableContainer","overBrickId","isPickOutProcessInitialized","minimumMoveDistance","initialX","initialY","initialBrickId","currentBrickId","recalculatePositionAndSize","scrollContextRect","pageX","previousClientX","pageY","previousClientY","scrollTop","updatePickOutAreaPositionAndSize","updateCurrentClientPosition","updateCurrentBrickId","canInitiatePickOutProcess","isMouseMovedEnough","initiatePickOutProcess","PickOutAreaDirective","pickOutCoordinator","selectionRangeComponentRef","onMouseUpBound","onMouseUp","onMouseMoveBound","onMouseMove","onSelectionStartBound","onSelectionStart","onContainerScrollBound","onContainerScroll","triggerPickOutChanged","mouseDown","button","isMouseOverDraggableElement","brickIdOverMouse","findBrickIdByCoordinate","onStartPicKOut","onStopPickOut","renderRangeComponent","removeRangeComponent","activeElement","blur","clearSelection","removeEventListener","window","getSelection","empty","currentElement","elementFromPoint","tagName","parentElement","getElementsByClassName","getAttribute","draggable","classList","contains","PickOutService","pickOutHandlerService","PickOutModule","WallModule","forRoot","ngModule","MatIconModule","BrickInputPlaceholderComponent","onClick","changeDetection","ChangeDetectionStrategy","OnPush","LoadingWrapperComponent","HelperComponentsModule","CopyPlugin","onCopyBound","onCopy","selectedTextRepresentation","getSelectedTextRepresentation","addToClipboard","str","clipboardData","ui","selectedBrickId","trim","join","UndoRedoPlugin","processingUndo","undoPlanStack","redoPlanStack","undo","undoSize","redo","redoSize","apiSubscription","wallModelEventHandler","onUndoKeyHandlerBound","onUndoKeyHandler","keyCode","ctrlKey","shiftKey","redoPlan","previousPlan","TOW","dropTypes","horizontal","vertical","dropSides","right","bottom","SelectionPlugin","options","isMouseSelection","placeholderHeight","isEnableDropZoneHighlight","shouldUnselectBrick","pickOutService","placeholderRenderer","towService","onMouseDownBound","onMouseDown","onKeyDownHandlerBound","onKeyDownHandler","pickOutServiceSubscription","towServiceSubscription","nearestBrickToDrop","concat","nearestSpot_1","centerYPosition","renderPlaceholder","isMouseOverDraggableBox","firstSelectedBrickId","lastSelectedBrickId","key","isDownSelectionDirection","lastBrickId","penultimateBrickId","placeholderX","placeholderY","placeholderSize","placeholderIsHorizontal","DIVIDER_BRICK_TAG","DividerBrickComponent","DividerBrickModule","description","TextRepresentation","DeepLeftNodeChild","root","currentNode","childNodes","child","DeepRightNodeChild","FirstSubStringNode","subStringHTML","firstLevelSubStringNodes","subString","getSubStringTextContent","findFirstLevelSubStringNodes","includes","textContent","pNode","createElement","innerHTML","CaretStartEndPosition","isCaretAtEnd","sel","rangeCount","selRange","getRangeAt","testRange","cloneRange","selectNodeContents","setStart","endContainer","endOffset","isCaretAtStart","setEnd","startContainer","startOffset","CursorLeftCoordinate","leftText","rightText","targetNode","div","createElementClone","span","style","padding","margin","leftCoordinate","offsetLeft","remove","node","getComputedStyle","prop","CursorPositionInLine","isOnFirstLine","isOnLastLine","span1","span2","innerText","lh","PlaceCaretToPosition","place","createRange","removeAllRanges","addRange","StringWithoutEmptyNodes","FOCUS_INITIATOR","BottomKeyHandler","baseTextBrickComponent","execute","isCaretAtLastLine","caretLeftCoordinate","getCaretLeftCoordinate","initiator","details","bottomKey","wallUiApi","EnterKeyHandler","splittedText","getSplittedText","focusOffset","focusNode","cleanUpText","splitBrickForTwoPart","addEmptyBrickAfter","addEmptyTextBrickBefore","addBrickAfter","setTextState","saveCurrentState","newTextState","tabs","scope","editor","scrollIntoView","behavior","block","inline","addedBrick","setTimeout","LeftKeyHandler","leftKey","RightKeyHandler","rightKey","TopKeyHandler","isCaretAtFirstLine","topKey","BaseTextBrickComponent","keypressHandlers","enter","maxTabNumber","textChange","onPasteBound","onPaste","textChangeSubscription","onWallStateChange","textArr","execCommand","onTextChange","onKeyPress","noMetaKeyIsPressed","code","topKeyPressed","bottomKeyPressed","leftKeyPressed","rightKeyPressed","enterKeyPressed","escapeKeyPressed","isTextSelected","backSpaceKeyPressed","concatWithNextTextSupportingBrick","onTabPressed","onDeleteAndFocusToNext","proxyToKeyHandler","keyHandlerName","increaseTab","decreaseTab","concatWithPreviousTextSupportingBrick","onDeleteAndFocusToPrevious","getCursorPositionInLine","leftRightText","previousBrickSnapshot","concatText","concatenationText","concatenationText_1","placeCaretBaseOnConcatenatedText","deletePreviousText","offset","onWallFocus","focus","placeCaretAtEnd","placeCaretAtStart","line","LineType","placeCaretAtLeftCoordinate","isCollapsed","deepLeftNode","placeCaretAtNodeStart","rightNode","placeCaretAtNodeEnd","placeCaretAtNodeToPosition","firstLevelSubStringNode","nodeType","Node","TEXT_NODE","firstLevelSubStringTextContent","altKey","metaKey","HeaderBrickComponent","_super","placeholder","tslib_1.__extends","ContenteditableDirective","elementRef","renderer","propValueAccessor","callOnChange","onChange","callOnTouched","onTouched","writeValue","normalizedValue","setProperty","registerOnChange","registerOnTouched","setDisabledState","isDisabled","removeDisabledState","listen","listenerDisabledState","removeAttribute","provide","NG_VALUE_ACCESSOR","useExisting","multi","ContenteditableModule","FormsModule","HeaderBrickModule","WALL_FILE_UPLOADER","InjectionToken","InputContextComponent","ngxStickyModalRef","srcInput","applyImageSrc","notify","src","onFileChange","file","files","close","onSubmit","dismiss","StickyModalRef","getModalConfig","elementBoundingRect","elementHeight","console","log","positionStrategy","StickyPositionStrategy","coordinate","scrollY","closeOnEscape","ImgBrickComponent","ngxStickyModalService","wallFileUploader","metadata","isSrcBase64","resizable","resize","onResize","resizeStart","onResizeStart","resizeEnd","onResizeEnd","processNewState","isBase64","setUpImageWidth","processBase64ImgSrc","showPanel","resizeData","lastWidth","save","imageSrc","isImage","catch","alert","applyImageFile","imgFile","imgBase64","uploadImage","uploadInfo","downloadURL","path","_arguments","generator","imageSrcPlaceholderRef","modalConfig","open","P","fulfilled","rejected","replace","btoa","err","canUploadFile","upload","loadImage","img","Image","StickyModalService","ImgModel","ImgBrickTextRepresentation","ResizableHandlerComponent","mouseDownEvent","ResizableDirective","cfr","leftHandler","createHandler","rightHandler","mouseDownHandler","xCurrent","isLeftDirection","xInitial","isRightDirection","wResizable","customClassName","handler","ResizableModule","ImgBrickModule","imgModel","imageState","StickyModalModule","MatButtonModule","MatInputModule","MatFormFieldModule","QuoteBrickComponent","QuoteBrickModule","InputContextComponent$1","applySrc","VideoBrickComponent","uiStates","initial","video","uiState","iframe","videoSrcPlaceholderRef","showVideoPanel","youtubeId","VideoBrickTextRepresentationClass","VideoBrickModule","InputContextComponent$2","WebBookmarkBrickComponent","url","logo","title","author","loading","isValidUrl","getWebPageMetaInfo","webPageMetaInfo","modalRef","fetch","page","json","pageMetadata","URL","WebBookmarkBrickModule","SUPPORTED_MODES","ModeListComponent","onSelected","mode","STICKY_MODAL_DATA","CodeBrickComponent","displayModeName","codeMirrorInstance","CodeMirror","theme","dragDrop","scrollbarStyle","on","getValue","saveState","setValue","getMode","setOption","onModeSelected","modes","CodeBrickModule","MatListModule","BricksListComponent","selectedTag$","bricksList$","subscriptions","updateBricksList","text$","filterText","up$","onNavigationUpDownHandler","down$","enter$","notifySelectedTag","onBrickSelected","brickDescription","trackByFn","subscription","brickDescriptors","brickDescriptor","sort","startsWith","isUp","currentSelectedTag","currentBrickList","currentSelectedBrickIndex","nextSelectedBrick","NodeTreeSplit","targetElement","leftTree","rightTree","parent_1","parentNode","cloneNode","createTextNode","appendNextSiblingsToNode","prependPreviousSiblingsToNode","leftParentTree","rightParentTree","grandparent","prepend","previousSibling","nextSibling","TreeNodeTraverse","traversePostOrder","_traversePostOrder","traversePreOrder","_traversePreOrder","traversePostPreOrder","_traversePostPreOrder","getPreOrderNodes","nodes","getPostOrderNodes","getPostPreOrderNodes","childNode","TextContextMenuComponent","showLinkForm","saveSelection","bold","italic","link","switchLinkFormVisibility","isLinkSelected","linkEl","getSelectedLinkHref","restoreSelection","applyLink","changeLinkUrl","createLink","unlink","TextBrickComponent","cd","hideBricksList","debounceTime","anchorNode","onTextSelection","onBlur","onFocus","hideContextMenuModal","isHTMLElement","brickSelectionModalRef","isTag","nodeTreeSplit","openBricksListModal","imageDataTransferItem","extractImageDataTransferItem","items","getAsFile","contextMenuModalRef","showContextModal","selectionInfo","selectedLink","triggerEditorChange","getSelectedLink","ranges","getSelectedRanges","len","anchorNodeLink","focusNodeLink","selection","isAnchorNodeBelongToBrick","isFocusNodeBelongToBrick","findParentLink","findLinkBetweenNodes","dispatchEvent","Event","overlayConfig","hasBackdrop","kind","linkNode","nodeA","nodeB","orderedNodes","nodeAIndex","nodeBIndex","temp","querySelector","undefined","TextBrickModule","LocationToTopLeftPointEvent","LocationToLeftCenterPointEvent","MODES","EDIT","READ"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class Guid {\n    get() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n}\n","export class Base64ToFile {\n    constructor(private base64: string, private fileName: string) {\n    }\n\n    getFile(): File {\n        const arr = this.base64.split(',');\n        const mime = arr[0].match(/:(.*?);/)[1];\n        const bstr = atob(arr[1]);\n        let n = bstr.length;\n        const u8arr = new Uint8Array(n);\n\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], this.fileName, {type: mime});\n    }\n}\n","export class ImgEncoder {\n    constructor(private image: File) {\n    }\n\n    getBase64Representation(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                resolve(event.target.result);\n            };\n\n            reader.onerror = (event: any) => {\n                reject(event);\n            };\n\n            reader.readAsDataURL(this.image);\n        });\n    }\n}\n","import {IBrickSnapshot} from './interfaces/brick-snapshot.interface';\n\nexport class WallBrick {\n    id: string;\n    tag: string;\n    meta: any;\n    state: any = {};\n\n    constructor(id: string, tag: string, meta: any) {\n        this.id = id;\n        this.tag = tag;\n        this.meta = meta;\n    }\n\n    getState(): any {\n        return JSON.parse(JSON.stringify(this.state));\n    }\n\n    updateState(newState) {\n        if (Object.keys(newState).length) {\n            Object.assign(this.state, newState);\n        } else {\n            this.state = {};\n        }\n\n        return this;\n    }\n\n    turnInto(tag: string) {\n        this.tag = tag;\n\n        this.updateState({});\n\n        return this;\n    }\n\n    getSnapshot(): IBrickSnapshot {\n        return {\n            id: this.id,\n            tag: this.tag,\n            meta: this.meta,\n            state: this.getState()\n        };\n    }\n}\n","export class AddBrickEvent {\n    constructor(public brickId: string) {\n    }\n}\n","export class BeforeChangeEvent {\n    constructor(public beforeEventType: any) {\n    }\n}\n","export class MoveBrickEvent {\n    constructor(public movedBrickIds: string[], beforeBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBrickEvent {\n    constructor(public brick: IBrickSnapshot,\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBricksEvent {\n    constructor(public bricks: IBrickSnapshot[],\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","export class SetPlanEvent {\n}\n\n","export class TurnBrickIntoEvent {\n    constructor(public brickId: string,\n                public newTag: string,\n                public oldTag: string) {\n    }\n}\n","export class UpdateBrickStateEvent {\n    constructor(public brickId: string,\n                public brickState: any,\n                public oldBrickState: any) {\n    }\n}\n","import {BrickRegistry} from '../../registry/brick-registry.service';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Execute queries commands over rows\n* */\nexport class LayoutWalker {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // public API\n\n    getRowCount() {\n        return this.rows.length;\n    }\n\n    isBrickAheadOf(firstBrickId: string, secondBrickId: string): boolean {\n        const brickIdsSequence = this.getBrickSequence(() => true).map((brick) => brick.id);\n\n        return brickIdsSequence.indexOf(firstBrickId) < brickIdsSequence.indexOf(secondBrickId);\n    }\n\n    getBrickTag(brickId: string): string {\n        return this.getBrickById(brickId).tag;\n    }\n\n    getBrickById(brickId: string): WallBrick {\n        return this.getBrickSequence((brick: WallBrick) => {\n            return brick.id === brickId;\n        })[0];\n    }\n\n    getBrickIds(): string[] {\n        return this.getBrickSequence(() => true).map((brick) => brick.id);\n    }\n\n    filterBricks(predictor: (brick: IBrickSnapshot) => boolean) {\n        return this.getBrickSequence((wallBrick) => {\n            return predictor(wallBrick.getSnapshot());\n        });\n    }\n\n    getBrickPosition(brickId: string) {\n        const brickPosition = {\n            rowIndex: null,\n            columnIndex: null,\n            brickIndex: null\n        };\n\n        let i = 0;\n\n        while (brickPosition.rowIndex === null && i < this.rows.length) {\n            this.rows[i].columns.forEach((column, columnIndex) => {\n                let brickIndex = null;\n\n                column.bricks.forEach((brick, index) => {\n                    if (brick.id === brickId) {\n                        brickIndex = index;\n                    }\n                });\n\n                if (brickIndex || brickIndex === 0) {\n                    brickPosition.rowIndex = i;\n                    brickPosition.columnIndex = columnIndex;\n                    brickPosition.brickIndex = brickIndex;\n                }\n            });\n\n            i++;\n        }\n\n        return brickPosition;\n    }\n\n    getColumnCount(rowIndex: number): number {\n        return this.rows[rowIndex].columns.length;\n    }\n\n    getBricksCount(): number {\n        return this.getBrickSequence(() => true).length;\n    }\n\n    getNextBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex + 1];\n    }\n\n    getNextBrickId(brickId: string): string {\n        const nextBrick = this.getNextBrick(brickId);\n\n        return nextBrick && nextBrick.id;\n    }\n\n    getPreviousBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex - 1];\n    }\n\n    getPreviousBrickId(brickId: string): string {\n        const previousBrick = this.getPreviousBrick(brickId);\n\n        return previousBrick && previousBrick.id;\n    }\n\n    getBrickSequence(predicate): WallBrick[] {\n        const brickSequence = [];\n\n        this.traverse((row: IWallRow) => {\n            row.columns.forEach((column) => {\n                column.bricks.forEach((brick) => {\n                    if (predicate(brick)) {\n                        brickSequence.push(brick);\n                    }\n                });\n            });\n        });\n\n        return brickSequence;\n    }\n\n    getNextTextBrickId(brickId: string): string {\n        const nextTextBrick = this.getNextTextBrick(brickId);\n\n        return nextTextBrick && nextTextBrick.id;\n    }\n\n    getPreviousTextBrickId(brickId: string): string {\n        const previousTextBrick = this.getPreviousTextBrick(brickId);\n\n        return previousTextBrick && previousTextBrick.id;\n    }\n\n    // end public API\n\n    getNextTextBrick(brickId: string): WallBrick {\n        const nextTextBricks = this.findBricksAfter(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return nextTextBricks[0];\n    }\n\n    getPreviousTextBrick(brickId: string): WallBrick {\n        const previousTextBricks = this.findBrickBefore(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return previousTextBricks[previousTextBricks.length - 1];\n    }\n\n    findBricksAfter(brickId: string, predicate): WallBrick[] {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsAfter = brickIdsSequence.splice(currentBrickIdIndex + 1);\n\n            brickIdsAfter.forEach((brickIdAfter) => {\n                const currentBrick = bricksSequence.find((brick) => {\n                    return brick.id === brickIdAfter;\n                });\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    findBrickBefore(brickId: string, predicate) {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsBefore = brickIdsSequence.splice(0, currentBrickIdIndex);\n\n            brickIdsBefore.forEach((brickIdBefore) => {\n                const currentBrick = bricksSequence.find((brick) => brick.id === brickIdBefore);\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    setLayout(rows: IWallRow[]) {\n        this.rows = rows;\n    }\n\n    traverse(fn: (row: IWallRow) => void) {\n        this.rows.forEach((row) => {\n            fn(row);\n        });\n    }\n}\n","import {Guid} from '../../../modules/utils/utils';\nimport {BrickRegistry} from '../../registry/public_api';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {LayoutWalker} from './layout-walker.class';\n\n/*\n* Modify layout wall rows\n* */\nexport class WallLayout {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry, private layoutWalker: LayoutWalker) {\n    }\n\n    // create new row and one column inside\n    addBrickToNewRow(rowIndex: number, brick: WallBrick, rowId?: string) {\n        const totalRowCount = this.rows.length;\n        const lastRowIndex = totalRowCount - 1;\n\n        // user cannot create row in position more than last row index + 1\n        // todo: remove helper checks, lets face the problem earlier\n        if (rowIndex > (lastRowIndex + 1)) {\n            rowIndex = lastRowIndex + 1;\n        }\n\n        this.createNewRow(rowIndex, rowId || this.generateId());\n\n        this.addBrick(rowIndex, 0, 0, brick);\n    }\n\n    // add only in already existing row and column\n    addBrickToExistingColumn(rowIndex: number, columnIndex: number, brickIndex: number, brick: WallBrick) {\n        const column = this.getColumn(rowIndex, columnIndex);\n\n        if (column) {\n            const bricksCount = column.bricks.length;\n\n            // user cannot put brick in position more than total brick count + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (brickIndex > (bricksCount + 1)) {\n                brickIndex = bricksCount + 1;\n            }\n\n            this.addBrick(rowIndex, columnIndex, brickIndex, brick);\n        }\n    }\n\n    // create new column in existing row\n    addBrickToNewColumn(rowIndex, columnIndex, brick: WallBrick) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            const columnCount = row.columns.length;\n\n            // user cannot create column in position more than total column cound + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (columnIndex > (columnCount + 1)) {\n                columnIndex = columnCount + 1;\n            }\n\n            this.createNewColumn(rowIndex, columnIndex);\n\n            this.addBrick(rowIndex, columnIndex, 0, brick);\n        }\n    }\n\n    moveBrickAfterInNewRow(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            const newRowIndex = afterBrickPosition.rowIndex + 1;\n\n            this.addBrickToNewRow(newRowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickAfterInSameColumn(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            this.addBrickToExistingColumn(\n                afterBrickPosition.rowIndex,\n                afterBrickPosition.columnIndex,\n                afterBrickPosition.brickIndex + index + 1,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInNewRow(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            let beforeBrickPosition;\n\n            if (index === 0) {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            } else {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(movedBrickIds[index - 1]);\n            }\n\n            this.addBrickToNewRow(beforeBrickPosition.rowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInSameColumn(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n            this.addBrickToExistingColumn(\n                beforeBrickPosition.rowIndex,\n                beforeBrickPosition.columnIndex,\n                beforeBrickPosition.brickIndex,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickToNewColumn(movedBrickIds, beforeBrickId, side): void {\n        const movedBricks = movedBrickIds.map((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            return currentMovedBrick;\n        });\n\n        const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n        let columnIndex;\n\n        // todo: move side to constant\n        // todo: search across project for all hard coded variables\n        if (side === 'left') {\n            columnIndex = beforeBrickPosition.columnIndex;\n        } else if (side === 'right') {\n            columnIndex = beforeBrickPosition.columnIndex + 1;\n        }\n\n        movedBricks.forEach((movedBrick, index) => {\n            if (index === 0) {\n                this.addBrickToNewColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    movedBrick\n                );\n            } else {\n                this.addBrickToExistingColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    index,\n                    movedBrick\n                );\n            }\n        });\n    }\n\n    removeBrick(brickId: string): void {\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n\n        const row = this.rows[brickPosition.rowIndex];\n        const column = row.columns[brickPosition.columnIndex];\n\n        // remove brick\n        column.bricks.splice(brickPosition.brickIndex, 1);\n\n        // remove column if there are no bricks inside\n        if (column.bricks.length === 0) {\n            row.columns.splice(brickPosition.columnIndex, 1);\n\n            // remove row if there are no columns inside\n            if (row.columns.length === 0) {\n                this.rows.splice(brickPosition.rowIndex, 1);\n\n                // if there are no rows, create default\n                if (this.rows.length === 0) {\n                    this.rows.push(this.initializeNewRow(this.generateId()));\n                }\n            }\n        }\n    }\n\n    // COMMANDS\n    private addBrick(rowIndex, columnIndex, brickIndex, brick) {\n        this.rows[rowIndex].columns[columnIndex].bricks.splice(brickIndex, 0, brick);\n    }\n\n    private getColumn(rowIndex: number, columnIndex: number): IWallColumn {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            return row.columns[columnIndex];\n        } else {\n            return null;\n        }\n    }\n\n    private createNewRow(rowIndex: number, rowId: string): void {\n        this.rows.splice(rowIndex, 0, this.initializeNewRow(rowId));\n    }\n\n    private createNewColumn(rowIndex: number, columnIndex: number): void {\n        this.rows[rowIndex].columns.splice(columnIndex, 0, this.initializeNewColumn());\n    }\n\n    private initializeNewRow(rowId: string): IWallRow {\n        return {\n            id: rowId,\n            columns: [\n                this.initializeNewColumn()\n            ]\n        };\n    }\n\n    private initializeNewColumn(): IWallColumn {\n        return {\n            bricks: []\n        };\n    }\n\n    private generateId(): string {\n        return (new Guid()).get();\n    }\n}\n","import {Subject, Subscription} from 'rxjs';\nimport {Guid} from '../../../modules/utils/utils';\nimport {IBrickDefinition} from '../../model/interfaces/brick-definition.interface';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallDefinition} from '../../model/interfaces/wall-definition.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {AddBrickEvent} from './events/add-brick.event';\nimport {BeforeChangeEvent} from './events/before-change.event';\nimport {MoveBrickEvent} from './events/move-brick.event';\nimport {RemoveBrickEvent} from './events/remove-brick.event';\nimport {RemoveBricksEvent} from './events/remove-bricks.event';\nimport {SetPlanEvent} from './events/set-plan.event';\nimport {TurnBrickIntoEvent} from './events/turn-brick-into.event';\nimport {UpdateBrickStateEvent} from './events/update-brick-state.event';\nimport {LayoutWalker} from './layout-walker.class';\nimport {WallLayout} from './wall-layout.model';\nimport {IWallPlugin} from '../../model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Contains Wall data structure and registers API for data manipulation.\n* Responsible to IWallDefinition->Layout and Layout->IWallDefinition transformation\n* */\nexport class WallCorePlugin implements IWallPlugin {\n    name = 'core';\n    version = '0.0.0';\n\n    // sub plugins\n    private layout: WallLayout;\n    private layoutWalker: LayoutWalker = new LayoutWalker(this.brickRegistry);\n\n    private wallModel: IWallModel;\n\n    private DEFAULT_BRICK = 'text';\n\n    private events: Subject<any> = new Subject();\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // START API\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        [\n            'getRowCount',\n            'getBrickTag',\n            'getPreviousBrickId',\n            'getNextBrickId',\n            'getColumnCount',\n            'getBrickIds',\n            'getBricksCount',\n            'getNextTextBrickId',\n            'getPreviousTextBrickId',\n            'filterBricks',\n            'isBrickAheadOf'\n        ].forEach((methodName) => {\n            this[methodName] = this.layoutWalker[methodName].bind(this.layoutWalker);\n        });\n\n        this.wallModel.registerApi(this.name, this);\n    }\n\n    // old\n\n    // COMMAND METHODS\n    setPlan(plan: IWallDefinition) {\n        this.dispatch(new BeforeChangeEvent(SetPlanEvent));\n\n        this.layout = new WallLayout(this.brickRegistry, this.layoutWalker);\n\n        this.layoutWalker.setLayout(this.layout.rows);\n\n        // build tree\n        plan.layout.bricks.forEach((row, rowIndex) => {\n            row.columns.forEach((column, columnIndex) => {\n                column.bricks.forEach((brick, brickIndex) => {\n                    const planBrick = plan.bricks.find((currentPlanBrick) => {\n                        return brick.id === currentPlanBrick.id;\n                    });\n\n                    const wallBrick = this.restoreBrick(planBrick);\n\n                    // first column in new row\n                    if (columnIndex === 0) {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewRow(rowIndex, wallBrick, row.id);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    } else {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewColumn(rowIndex, columnIndex, wallBrick);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    }\n                });\n            });\n        });\n\n        this.dispatch(new SetPlanEvent());\n    }\n\n    addBrickAfterBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex + 1, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex + 1,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    addBrickBeforeBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    // Add text brick to the bottom of wall in the new row\n    addDefaultBrick() {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickCount = this.layoutWalker.getBricksCount();\n        const newBrick = this.createBrick(this.DEFAULT_BRICK);\n        const rowIndex = brickCount ? this.layoutWalker.getRowCount() + 1 : 0;\n\n        this.layout.addBrickToNewRow(rowIndex, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n    }\n\n    addBrickAtStart(tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const newBrick = this.createBrick(tag, state);\n\n        this.layout.addBrickToNewRow(0, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    updateBrickState(brickId, brickState): void {\n        this.dispatch(new BeforeChangeEvent(UpdateBrickStateEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const oldState = JSON.parse(JSON.stringify(brick.getState()));\n\n        brick.updateState(JSON.parse(JSON.stringify(brickState)));\n\n        this.dispatch(new UpdateBrickStateEvent(\n            brickId,\n            JSON.parse(JSON.stringify(brick.getState())),\n            oldState\n        ));\n    }\n\n    // todo: should be async operation\n    removeBrick(brickId: string): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBrickEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextTextBrick(brickId);\n        const previousTextBrick = this.layoutWalker.getPreviousTextBrick(brickId);\n\n        this.clearBrickResources(brickId).then(() => {\n        });\n\n        const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n        this.layout.removeBrick(brickId);\n\n        this.dispatch(new RemoveBrickEvent(\n            removedBrick.getSnapshot(),\n            previousTextBrick && previousTextBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    // todo: should be async operation\n    removeBricks(brickIds): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBricksEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextBrick(brickIds[brickIds.length - 1]);\n        const previousBrick = this.layoutWalker.getPreviousBrick(brickIds[0]);\n\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        Promise.all(clearPromises).then(() => {\n        });\n\n        const removedBricks = brickIds.map((brickId) => {\n            const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n            this.layout.removeBrick(brickId);\n\n            return {\n                id: removedBrick.id,\n                tag: removedBrick.tag,\n                state: removedBrick.state\n            };\n        });\n\n        this.dispatch(new RemoveBricksEvent(\n            removedBricks,\n            previousBrick && previousBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    /**\n     * Remove all bricks from layout\n     * Clear all bricks external dependencies\n     */\n    clear(): Promise<any> {\n        const brickIds = this.layoutWalker.getBrickIds();\n\n        // todo: replace it after removeBricks will be async\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        return Promise.all(clearPromises).then(() => {\n            brickIds.forEach((brickId) => {\n                this.layout.removeBrick(brickId);\n            });\n        });\n    }\n\n    turnBrickInto(brickId: string, newTag: string, state: any = {}) {\n        this.dispatch(new BeforeChangeEvent(TurnBrickIntoEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n        const oldTag = brick.tag;\n\n        brick\n            .turnInto(newTag)\n            .updateState(state);\n\n        this.dispatch(new TurnBrickIntoEvent(brickId, newTag, oldTag));\n    }\n\n    moveBrickAfterBrickId(movedBrickIds: string[], afterBrickId: string): void {\n        if (movedBrickIds.indexOf(afterBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(afterBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickAfterInNewRow(afterBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickAfterInSameColumn(afterBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, afterBrickId));\n        }\n    }\n\n    moveBrickBeforeBrickId(movedBrickIds: string[], beforeBrickId: string): void {\n        if (movedBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(beforeBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickBeforeInNewRow(beforeBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickBeforeInSameColumn(beforeBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, beforeBrickId));\n        }\n    }\n\n    moveBrickToNewColumn(targetBrickIds: string[], beforeBrickId: string, side: string): void {\n        if (targetBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            this.layout.moveBrickToNewColumn(targetBrickIds, beforeBrickId, side);\n\n            this.dispatch(new MoveBrickEvent(targetBrickIds, beforeBrickId));\n        }\n    }\n\n    // QUERY METHODS\n    getPlan(): IWallDefinition {\n        const plan = {\n            bricks: [],\n            layout: {\n                bricks: []\n            }\n        };\n\n        this.layoutWalker.traverse((row: IWallRow) => {\n            const columns = [];\n\n            row.columns.forEach((column: IWallColumn) => {\n                const planColumn = {\n                    bricks: []\n                };\n\n                column.bricks.forEach((brick: WallBrick) => {\n                    plan.bricks.push({\n                        id: brick.id,\n                        tag: brick.tag,\n                        meta: brick.meta,\n                        data: brick.state\n                    });\n\n                    planColumn.bricks.push({\n                        id: brick.id\n                    });\n                });\n\n                columns.push(planColumn);\n            });\n\n            plan.layout.bricks.push({\n                columns,\n                id: row.id\n            });\n        });\n\n        return JSON.parse(JSON.stringify(plan));\n    }\n\n    sortBrickIdsByLayoutOrder(brickIds: string[]) {\n        const bricksSequence = this.layoutWalker.getBrickSequence(() => true);\n\n        return bricksSequence\n            .filter((brick) => brickIds.indexOf(brick.id) !== -1)\n            .map((brick) => brick.id);\n    }\n\n    traverse(fn): void {\n        return this.layoutWalker.traverse((row: IWallRow) => {\n            const preparedRow = {\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brick) => brick.getSnapshot())\n                    };\n                })\n            };\n\n            fn(preparedRow);\n        });\n    }\n\n    getBrickSnapshot(brickId: string): IBrickSnapshot {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        return brick ? brick.getSnapshot() : null;\n    }\n\n    getBrickResourcePaths(brickId: string): string[] {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (!brickSpecification.getBrickResourcePaths) {\n            return [];\n        }\n\n        return brickSpecification.getBrickResourcePaths(brick.getSnapshot());\n    }\n\n    getBrickTextRepresentation(brickId: string): string {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.textRepresentation) {\n            const brickTextRepresentation = new brickSpecification.textRepresentation(brick.getSnapshot());\n\n            return brickTextRepresentation.getText() || '';\n        } else {\n            return '';\n        }\n    }\n\n    subscribe(callback): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    isRegisteredBrick(tag: string): boolean {\n        return Boolean(this.brickRegistry.get(tag));\n    }\n\n    private dispatch(e: any): void {\n        this.events.next(e);\n    }\n\n    private createBrick(tag, state?: any) {\n        const id = this.generateGuid();\n        const meta = {};\n        const brick = new WallBrick(id, tag, meta);\n\n        if (state) {\n            brick.updateState(state);\n        }\n\n        return brick;\n    }\n\n    private restoreBrick(brickDefinition: IBrickDefinition): WallBrick {\n        const brick = new WallBrick(\n            brickDefinition.id,\n            brickDefinition.tag,\n            brickDefinition.meta\n        );\n\n        brick.updateState(brickDefinition.data);\n\n        return brick;\n    }\n\n    private clearBrickResources(brickId): Promise<any> {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.destructor) {\n            return brickSpecification.destructor(brick.getSnapshot());\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    private generateGuid(): string {\n        return (new Guid()).get();\n    }\n}\n","export class WallPluginInitializedEvent {\n    constructor(public pluginName: string) {\n    }\n}\n","import {Observable, Subject, Subscription} from 'rxjs';\nimport {IWallPlugin} from './interfaces/wall-plugin.interface';\nimport {WallPluginInitializedEvent} from './events/wall-plugin-initialized.event';\nimport {IWallModelConfig} from './interfaces/wall-model-config.interface';\nimport {IWallModel} from './interfaces/wall-model.interface';\nimport {IWallCorePluginApi} from './interfaces/wall-core-plugin-api.interface';\nimport {BrickRegistry} from '../registry/brick-registry.service';\n\nexport class WallModel implements IWallModel {\n    version: '0.0.0';\n\n    // plugin api\n    api: {\n        [apiName: string]: any;\n        core: IWallCorePluginApi\n    } = {\n        core: null\n    };\n\n    private events$: Observable<any> = new Subject();\n\n    private plugins: Map<string, IWallPlugin> = new Map();\n\n    constructor(private brickRegistry: BrickRegistry, config: IWallModelConfig) {\n        // initialize 3rd party plugins\n        config.plugins.forEach((plugin) => this.initializePlugin(plugin));\n    }\n\n    // register external API\n    registerApi(apiName: string, api: object) {\n        this.api[apiName] = api;\n    }\n\n    destroy() {\n        this.plugins.forEach((plugin) => this.destroyPlugin(plugin));\n    }\n\n    // proxy events from all plugins\n    subscribe(callback): Subscription {\n        return this.events$.subscribe(callback);\n    }\n\n    private dispatch(e: any): void {\n        (this.events$ as Subject<any>).next(e);\n    }\n\n    private initializePlugin(plugin: IWallPlugin) {\n        plugin.onWallInitialize(this);\n\n        this.plugins.set(plugin.name, plugin);\n\n        this.dispatch(new WallPluginInitializedEvent(plugin.name));\n    }\n\n    private destroyPlugin(plugin: IWallPlugin) {\n        if (plugin.onWallPluginDestroy) {\n            plugin.onWallPluginDestroy();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {IBrickSpecification} from './interfaces/brick-specification.interface';\n\n@Injectable()\nexport class BrickRegistry {\n    private bricks: IBrickSpecification[] = [];\n\n    // todo: add unregister functionality\n\n    register(brickConfiguration: IBrickSpecification) {\n        this.bricks.push(brickConfiguration);\n    }\n\n    get(tag: string): IBrickSpecification {\n        return this.bricks.find((brickConfiguration: IBrickSpecification) => brickConfiguration.tag === tag);\n    }\n\n    getAll(): IBrickSpecification[] {\n        return this.bricks;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {WallCorePlugin} from '../plugins/core/wall-core.plugin';\nimport {WallModel} from '../model/wall.model';\nimport {BrickRegistry} from '../registry/brick-registry.service';\nimport {IWallModel} from '../model/interfaces/wall-model.interface';\nimport {IWallModelConfig} from '../model/interfaces/wall-model-config.interface';\n\n@Injectable()\nexport class WallModelFactory {\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    create(config?: IWallModelConfig): IWallModel {\n        const defaultConfig = {\n            plan: {\n                bricks: [],\n                layout: {\n                    bricks: []\n                }\n            },\n            plugins: []\n        };\n\n        config = {\n            ...defaultConfig,\n            ...config\n        };\n\n        // inject core plugin as initial first plugin\n        // in this way factory will decouple WallModel from WallCorePlugin\n        config.plugins.unshift(new WallCorePlugin(this.brickRegistry));\n\n        const wallModel = new WallModel(\n            this.brickRegistry,\n            config\n        );\n\n        wallModel.api.core.setPlan(config.plan);\n\n        return wallModel;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './placeholder.component.html',\n    styleUrls: ['./placeholder.component.scss']\n})\nexport class PlaceholderComponent {\n    x: number;\n    y: number;\n    size: number;\n    isHorizontal: boolean;\n\n    setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.isHorizontal = isHorizontal;\n    }\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector\n} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\n\n@Injectable()\nexport class PlaceholderRenderer {\n    private placeholderComponentRef: ComponentRef<PlaceholderComponent> = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private injector: Injector) {\n    }\n\n    render(x: number, y: number, size: number, isHorizontal: boolean = true) {\n        if (!this.placeholderComponentRef) {\n            this.renderPlaceholderComponent();\n        }\n\n        this.setCoordinate(x, y, size, isHorizontal);\n    }\n\n    clear() {\n        if (this.placeholderComponentRef) {\n            this.removePlaceholderComponent();\n        }\n    }\n\n    private renderPlaceholderComponent() {\n        this.placeholderComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PlaceholderComponent)\n            .create(this.injector);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.placeholderComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.placeholderComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n        document.body.appendChild(domElem);\n    }\n\n    private removePlaceholderComponent() {\n        this.appRef.detachView(this.placeholderComponentRef.hostView);\n        this.placeholderComponentRef.destroy();\n\n        this.placeholderComponentRef = null;\n    }\n\n    private setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.placeholderComponentRef.instance.setCoordinate(x, y, size, isHorizontal);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\nimport {PlaceholderRenderer} from './placeholder-renderer.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        PlaceholderComponent\n    ],\n    providers: [\n        PlaceholderRenderer\n    ],\n    entryComponents: [\n        PlaceholderComponent\n    ]\n})\nexport class PlaceholderRendererModule {\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Component, ElementRef, EventEmitter, Inject, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IFocusedBrick} from '../wall/interfaces/focused-brick.interface';\n\n@Component({\n    selector: 'wall-canvas',\n    templateUrl: './wall-canvas-component.component.html',\n    styleUrls: ['./wall-canvas.component.scss']\n})\nexport class WallCanvasComponent implements OnChanges {\n    @Input() wallModel: IWallModel;\n    @Input() rows: IWallRow[] = [];\n\n    @Input() selectedBricks: string[] = null;\n    @Input() focusedBrick: IFocusedBrick = null;\n    @Input() isMediaInteractionEnabled$: Observable<boolean>;\n\n    @Output() canvasClick: EventEmitter<any> = new EventEmitter();\n    @Output() onBrickStateChanged: EventEmitter<any> = new EventEmitter();\n\n    // public API for sub components\n    focusedBrick$: Subject<IFocusedBrick> = new Subject();\n    selectedBricks$: Subject<string[]> = new Subject();\n\n    doc: any = null;\n\n    @ViewChild('expander') expander: ElementRef;\n\n    constructor(@Inject(DOCUMENT) doc) {\n        this.doc = doc;\n    }\n\n    onEditorClick(e: any) {\n        if (e.target === this.expander.nativeElement) {\n            this.canvasClick.emit();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.focusedBrick && changes.focusedBrick.currentValue) {\n            this.focusedBrick$.next(changes.focusedBrick.currentValue);\n        }\n\n        if (changes.selectedBricks) {\n            this.selectedBricks$.next(changes.selectedBricks.currentValue || []);\n        }\n    }\n\n    brickStateChanged(brickId: string, brickState: any) {\n        this.onBrickStateChanged.emit({\n            brickId,\n            brickState\n        });\n    }\n\n    trackRowsBy(index, item): string {\n        return item.id;\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationUpdatedEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {SpotDirective} from './directive/spot.directive';\nimport {ISpotPosition, ISpotSize} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\n\nexport class SpotModel {\n    id: SpotId;\n    data: any;\n    position: ISpotPosition;\n    size: ISpotSize;\n\n    private instance: SpotDirective;\n\n    constructor(instance: SpotDirective) {\n        this.id = instance.id;\n        this.instance = instance;\n\n        this.updateInfo();\n    }\n\n    updateInfo() {\n        const {position, size, data} = this.instance.getInfo();\n\n        this.data = data;\n        this.size = size;\n        this.position = position;\n    }\n\n    isCross13Line(y) {\n        return (y > this.position.y) && (y < this.position.y + this.size.height);\n    }\n\n    getMinimalDistanceToPoint(x: number, y: number) {\n        let minimalDistance = null;\n\n        // distances to horizontal lines\n        const distanceToLine12 = Math.abs(this.position.y - y);\n        const distanceToLine43 = Math.abs((this.position.y + this.size.height) - y);\n\n        // distances to vertical lines\n        const distanceToLine14 = Math.abs(this.position.x - x);\n        const distanceToLine23 = Math.abs((this.position.x + this.size.width) - x);\n\n        const minDistanceToHorizontalLine = Math.min.apply(null, [distanceToLine12, distanceToLine43]);\n        const minDistanceToVerticalLine = Math.min.apply(null, [distanceToLine14, distanceToLine23]);\n\n        if ((x > this.position.x) && (x < this.position.x + this.size.width)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToHorizontalLine;\n        } else if ((y > this.position.y) && (y < this.position.y + this.size.height)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToVerticalLine;\n        } else {\n            // point doesn't cross beacon, calculate shortest distance to beacon\n            minimalDistance = Math.sqrt(\n                minDistanceToHorizontalLine *\n                minDistanceToHorizontalLine +\n                minDistanceToVerticalLine *\n                minDistanceToVerticalLine\n            );\n        }\n\n        return minimalDistance;\n    }\n\n    getDistanceToTopLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToBottomLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + this.size.height - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToLeftCenterPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + (this.size.height / 2) - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    isPointInsideSpot(x: number, y: number): boolean {\n        if ((x > this.position.x) && (x < this.position.x + this.size.width) &&\n            (y > this.position.y) && (y < this.position.y + this.size.height)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {throttleTime} from 'rxjs/operators';\nimport {SpotDirective} from './directive/spot.directive';\nimport {LocationUpdatedEvent} from './events/location-updated.event';\nimport {IDistanceToSpot} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class RadarCoordinator {\n    private spots: Map<SpotId, SpotModel> = new Map();\n\n    private events: Subject<any> = new Subject();\n\n    private mouseMove$: Observable<MouseEvent>;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private zone: NgZone) {\n        this.mouseMove$ = fromEvent(doc, 'mousemove');\n\n        const throttleMouseTime = 30;\n\n        // run outside Angular Zone in order to decrease performance hit\n        this.zone.runOutsideAngular(() => {\n            this.mouseMove$\n                .pipe(\n                    throttleTime(throttleMouseTime)\n                )\n                .subscribe((event) => {\n                    this.updateSpotsInfo();\n                    this.updateLocationPosition(event.clientX, event.clientY);\n                });\n        });\n    }\n\n    register(spotId: SpotId, spotInstance: SpotDirective) {\n        this.spots.set(spotId, new SpotModel(spotInstance));\n    }\n\n    unRegister(spotId: SpotId) {\n        this.spots.delete(spotId);\n    }\n\n    updateSpotsInfo() {\n        this.spots.forEach((spot) => spot.updateInfo());\n    }\n\n    filterSpots(predicate: (spot: SpotModel) => void): SpotModel[] {\n        return Array.from(this.spots)\n            .map(([id, spot]) => spot)\n            .filter((spot) => predicate(spot));\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n\n    private updateLocationPosition(x: number, y: number) {\n        const sortedSpots: IDistanceToSpot[] = [];\n\n        this.spots.forEach((spot) => {\n            const minimalDistance = spot.getMinimalDistanceToPoint(x, y);\n            const topLeftPointDistance = spot.getDistanceToTopLeftPoint(x, y);\n            const bottomLeftPointDistance = spot.getDistanceToBottomLeftPoint(x, y);\n            const centerLeftPointDistance = spot.getDistanceToLeftCenterPoint(x, y);\n            const isCross13Line = spot.isCross13Line(y);\n\n            sortedSpots.push({\n                minimalDistance,\n                topLeftPointDistance,\n                bottomLeftPointDistance,\n                centerLeftPointDistance,\n                isCross13Line,\n                data: spot.data\n            });\n        });\n\n        this.events.next(new LocationUpdatedEvent(sortedSpots));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class Radar {\n    private events: Subject<any> = new Subject();\n\n    constructor(private radarCoordinator: RadarCoordinator) {\n        this.radarCoordinator.subscribe((event) => {\n            this.events.next(event);\n        });\n    }\n\n    filterSpots(fn: (spot: SpotModel) => void): SpotModel[] {\n        return this.radarCoordinator.filterSpots(fn);\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {WallCanvasComponent} from '../../wall-canvas.component';\nimport {Radar} from '../../../../../modules/radar/radar.service';\nimport {LocationUpdatedEvent} from '../../../../../modules/radar/events/location-updated.event';\nimport {IWallComponent} from '../../../wall/interfaces/wall-component/wall-component.interface';\n\n@Component({\n    selector: 'wall-canvas-brick',\n    templateUrl: './wall-canvas-brick.component.html',\n    styleUrls: ['./wall-canvas-brick.component.scss']\n})\nexport class WallCanvasBrickComponent implements OnInit, OnDestroy, OnChanges {\n    // todo add type\n    @Input() brick: any;\n\n    @ViewChild('brickContainer', {read: ViewContainerRef}) container: ViewContainerRef;\n\n    selected = false;\n\n    isMouseNear = false;\n\n    spot: any;\n\n    isMediaInteractionEnabled = true;\n\n    private componentReference: ComponentRef<any>;\n\n    private minimalDistanceToMouse = 100;\n\n    // subscriptions\n    private stateChangesSubscription: Subscription;\n    private radarSubscription: Subscription;\n    private focusedBrickSubscription: Subscription;\n    private selectedBricksSubscription: Subscription;\n    private isMediaInteractionEnabledSubscription: Subscription;\n\n    constructor(private injector: Injector,\n                private resolver: ComponentFactoryResolver,\n                private radar: Radar,\n                private cdRef: ChangeDetectorRef,\n                private wallCanvasComponent: WallCanvasComponent) {\n    }\n\n    ngOnInit() {\n        this.spot = {\n            brickId: this.brick.id,\n            isPickOutItem: true,\n            isBeacon: true\n        };\n\n        this.componentReference = this.renderBrick();\n\n        this.radarSubscription = this.radar.subscribe((e) => {\n            if (e instanceof LocationUpdatedEvent) {\n                const currentSpot = e.spots.find((spot) => spot.data.brickId === this.brick.id);\n\n                if (currentSpot.isCross13Line) {\n                    this.isMouseNear = currentSpot.topLeftPointDistance < this.minimalDistanceToMouse;\n                } else {\n                    this.isMouseNear = false;\n                }\n\n                this.cdRef.detectChanges();\n            }\n        });\n\n        this.focusedBrickSubscription = this.wallCanvasComponent.focusedBrick$.subscribe((focusedBrick) => {\n            if (focusedBrick.id === this.brick.id) {\n                this.callInstanceApi('onWallFocus', focusedBrick.context);\n            }\n        });\n\n        this.selectedBricksSubscription = this.wallCanvasComponent.selectedBricks$.subscribe((selectedBricks) => {\n            this.selected = !Boolean(selectedBricks.indexOf(this.brick.id) === -1);\n        });\n\n        this.isMediaInteractionEnabledSubscription = this.wallCanvasComponent.isMediaInteractionEnabled$\n            .subscribe((isMediaInteractionEnabled) => this.isMediaInteractionEnabled = isMediaInteractionEnabled);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.brick && !changes.brick.firstChange && changes.brick.currentValue) {\n            this.componentReference.instance.state = this.brick.state;\n\n            this.callInstanceApi('onWallStateChange', this.componentReference.instance.state);\n        }\n    }\n\n    ngOnDestroy() {\n        this.radarSubscription.unsubscribe();\n        this.focusedBrickSubscription.unsubscribe();\n        this.selectedBricksSubscription.unsubscribe();\n        this.isMediaInteractionEnabledSubscription.unsubscribe();\n\n        if (this.stateChangesSubscription) {\n            this.stateChangesSubscription.unsubscribe();\n        }\n    }\n\n    private callInstanceApi(methodName: string, data?: any) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName](data);\n        }\n    }\n\n    private renderBrick() {\n        const factory = this.resolver.resolveComponentFactory(this.brick.component);\n\n        const componentReference = this.container.createComponent(factory, null, this.injector);\n\n        const componentInstance = componentReference.instance as IWallComponent;\n\n        componentInstance.id = this.brick.id;\n        componentInstance.state = this.brick.state;\n        componentInstance.wallModel = this.wallCanvasComponent.wallModel;\n\n        if (componentInstance.stateChanges) {\n            this.stateChangesSubscription = componentInstance.stateChanges.subscribe((newState) => {\n                this.wallCanvasComponent.brickStateChanged(this.brick.id, newState);\n            });\n        }\n\n        return componentReference;\n    }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'wall-canvas-row',\n    templateUrl: './wall-canvas-row.component.html',\n    styleUrls: ['./wall-canvas-row.component.scss']\n})\nexport class WallCanvasRowComponent {\n    @Input() row: any; // todo add type\n\n    trackColumnsBy(index): number {\n        return index;\n    }\n\n    trackBricksBy(index, item) {\n        return item.hash;\n    }\n}\n","export class SelectedBrickEvent {\n    constructor(public selectedBrickIds: string[]) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {SelectedBrickEvent} from './events/selected-brick.event';\nimport {IFocusedBrick} from './interfaces/focused-brick.interface';\nimport {IWallUiApi} from './interfaces/ui-api.interface';\nimport {IFocusContext} from './interfaces/wall-component/wall-component-focus-context.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {RemoveBricksEvent} from '../../plugins/core/events/remove-bricks.event';\nimport {MoveBrickEvent} from '../../plugins/core/events/move-brick.event';\nimport {TurnBrickIntoEvent} from '../../plugins/core/events/turn-brick-into.event';\nimport {BeforeChangeEvent} from '../../plugins/core/events/before-change.event';\n\n@Injectable()\nexport class WallViewModel implements IWallUiApi {\n    wallModel: IWallModel = null;\n\n    events: Subject<any> = new Subject();\n\n    // UI\n    focusedBrick: IFocusedBrick = null;\n    selectedBricks: string[] = [];\n    isMediaInteractionEnabled$: Observable<boolean> = new BehaviorSubject(true);\n    canvasLayout: IWallRow[] = [];\n\n    private wallModelSubscription: Subscription;\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    getCanvasLayout(): IWallRow[] {\n        const rows = [];\n\n        this.wallModel.api.core.traverse((row) => {\n            rows.push({\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brickConfig) => {\n                            const component = this.brickRegistry.get(brickConfig.tag).component;\n\n                            return {\n                                id: brickConfig.id,\n                                hash: brickConfig.tag + brickConfig.id,\n                                state: brickConfig.state,\n                                component\n                            };\n                        })\n                    };\n                })\n            });\n        });\n\n        return rows;\n    }\n\n    initialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        // initialize view core API\n        const coreApi = [\n            // SELECTION\n            'getSelectedBrickIds',\n            'selectBrick',\n            'selectBricks',\n            'addBrickToSelection',\n            'removeBrickFromSelection',\n            'unSelectBricks',\n\n            // FOCUS\n            'focusOnBrickId',\n            'getFocusedBrickId',\n            'focusOnPreviousTextBrick',\n            'focusOnNextTextBrick',\n\n            // REMOVE BRICK\n            'removeBrick',\n            'removeBricks',\n\n            // BEHAVIOUR\n            'enableMediaInteraction',\n            'disableMediaInteraction',\n\n            // CLIENT\n            'subscribe'\n        ].reduce((result, methodName) => {\n            if (this[methodName].bind) {\n                result[methodName] = this[methodName].bind(this);\n            } else {\n                result[methodName] = this[methodName];\n            }\n\n            return result;\n        }, {});\n\n        // protect API from extending\n        Object.seal(coreApi);\n\n        // register methods on model itself\n        this.wallModel.registerApi('ui', coreApi);\n\n        this.wallModelSubscription = this.wallModel.api.core.subscribe((event) => {\n            if (event instanceof TurnBrickIntoEvent) {\n                this.focusOnBrickId(event.brickId);\n            }\n\n            if (event instanceof MoveBrickEvent) {\n                this.unSelectBricks();\n            }\n\n            if (event instanceof RemoveBricksEvent) {\n                if (!this.wallModel.api.core.getBricksCount()) {\n                    this.wallModel.api.core.addDefaultBrick();\n                }\n            }\n\n            if (!(event instanceof BeforeChangeEvent)) {\n                this.canvasLayout = this.getCanvasLayout();\n            }\n        });\n\n        this.canvasLayout = this.getCanvasLayout();\n    }\n\n    /**\n     * @public-api\n     */\n    selectBrick(brickId: string): void {\n        this.selectedBricks = [brickId];\n\n        this.focusedBrick = null;\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    selectBricks(brickIds: string[]) {\n        if (JSON.stringify(brickIds) !== JSON.stringify(this.selectedBricks)) {\n            this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(brickIds);\n\n            const selectedBricksClone = this.selectedBricks.slice(0);\n\n            this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n        }\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    addBrickToSelection(brickId: string): void {\n        const selectedBrickIds = this.selectedBricks.slice(0);\n\n        selectedBrickIds.push(brickId);\n\n        this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(selectedBrickIds);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    removeBrickFromSelection(brickId: string): void {\n        const brickIdIndex = this.selectedBricks.indexOf(brickId);\n\n        this.selectedBricks.splice(brickIdIndex, 1);\n\n        this.selectedBricks = this.selectedBricks.slice(0);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    unSelectBricks(): void {\n        this.selectedBricks = [];\n\n        this.dispatch(new SelectedBrickEvent([]));\n    }\n\n    /**\n     * @public-api\n     */\n    getSelectedBrickIds(): string[] {\n        return this.selectedBricks.slice(0);\n    }\n\n    /**\n     * @public-api\n     */\n    getFocusedBrickId(): string {\n        return this.focusedBrick && this.focusedBrick.id;\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnBrickId(brickId: string, focusContext?: IFocusContext): void {\n        this.focusedBrick = {\n            id: brickId,\n            context: focusContext\n        };\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnPreviousTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(brickId);\n\n        if (previousTextBrickId) {\n            this.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnNextTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(brickId);\n\n        if (nextTextBrickId) {\n            this.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    enableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(true);\n    }\n\n    /**\n     * @public-api\n     */\n    disableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(false);\n    }\n\n    /**\n     * @public-api\n     */\n    subscribe(callback: any): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBrick(brickId: string) {\n        this.removeBricks([brickId]);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBricks(brickIds: string[]) {\n        const currentBrickIds = this.wallModel.api.core.getBrickIds();\n\n        if (currentBrickIds.length > 1) {\n            this.wallModel.api.core.removeBricks(brickIds);\n        } else if (currentBrickIds.length === 1) {\n            const brickSnapshot = this.wallModel.api.core.getBrickSnapshot(currentBrickIds[0]);\n\n            if (brickSnapshot.tag !== 'text' || brickSnapshot.state.text) {\n                this.wallModel.api.core.removeBricks(brickIds);\n            } else {\n                this.focusOnBrickId(currentBrickIds[0]);\n            }\n        }\n    }\n\n    // canvas interaction\n    onCanvasClick() {\n        // check whether the last element is empty text brick\n        // which is inside one column row\n\n        const rowCount = this.wallModel.api.core.getRowCount();\n        const brickIds = this.wallModel.api.core.getBrickIds();\n\n        if (rowCount > 0\n            && this.wallModel.api.core.getColumnCount(rowCount - 1) === 1\n            && brickIds.length) {\n            const lastBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(brickIds[brickIds.length - 1]);\n\n            if (lastBrickSnapshot.tag === 'text' && !lastBrickSnapshot.state.text) {\n                this.focusOnBrickId(lastBrickSnapshot.id);\n            } else {\n                this.wallModel.api.core.addDefaultBrick();\n            }\n        } else {\n            this.wallModel.api.core.addDefaultBrick();\n        }\n    }\n\n    // canvas interaction\n    onBrickStateChanged(brickId: string, brickState: any): void {\n        this.wallModel.api.core.updateBrickState(brickId, brickState);\n    }\n\n    reset() {\n        this.wallModelSubscription.unsubscribe();\n\n        this.wallModelSubscription = null;\n\n        this.focusedBrick = null;\n\n        this.unSelectBricks();\n    }\n\n    private dispatch(e) {\n        this.events.next(e);\n    }\n}\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {WallViewModel} from './wall-view.model';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallConfiguration} from './interfaces/wall-configuration.interface';\n\n@Component({\n    selector: 'wall',\n    templateUrl: './wall.component.html',\n    styleUrls: ['./wall.component.scss'],\n    providers: [\n        WallViewModel\n    ]\n})\nexport class WallComponent implements OnChanges, OnDestroy {\n    @Input() model: IWallModel = null;\n    @Input() configuration: IWallConfiguration = null;\n\n    constructor(public wallViewModel: WallViewModel) {\n    }\n\n    // click on empty space\n    onCanvasClick() {\n        this.wallViewModel.onCanvasClick();\n    }\n\n    onBrickStateChanged(event) {\n        this.wallViewModel.onBrickStateChanged(event.brickId, event.brickState);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.model) {\n            if (!changes.model.firstChange) {\n                this.cleanUp();\n            }\n\n            this.initialize();\n        }\n    }\n\n    ngOnDestroy() {\n        this.cleanUp();\n    }\n\n    private initialize() {\n        // initialize view model by business model\n        this.wallViewModel.initialize(this.model);\n    }\n\n    private cleanUp() {\n        this.wallViewModel.reset();\n    }\n}\n","export class StartWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class StopWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class WorkInProgressEvent {\n    constructor(public mousePosition: {\n        clientX: number;\n        clientY: number;\n    }) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {StartWorkingEvent} from './events/start-working.event';\nimport {StopWorkingEvent} from './events/stop-working.event';\nimport {WorkInProgressEvent} from './events/work-in-progress.event';\n\n@Injectable()\nexport class TowCoordinator {\n    events: Subject<any> = new Subject();\n\n    // start track when slave start working\n    private isSlaveWorking = false;\n\n    constructor() {\n        document.addEventListener('dragover', (event: DragEvent) => {\n            if (this.isSlaveWorking) {\n                event.preventDefault();\n\n                event.dataTransfer.dropEffect = 'move';\n\n                this.slaveWorkProgress(event.clientX, event.clientY);\n            }\n        });\n    }\n\n    slaveStartWorking(id: string) {\n        this.isSlaveWorking = true;\n\n        this.events.next(new StartWorkingEvent(id));\n    }\n\n    slaveWorkProgress(clientX: number, clientY: number) {\n        this.events.next(new WorkInProgressEvent({\n            clientX,\n            clientY\n        }));\n    }\n\n    slaveStopWorking(id) {\n        this.isSlaveWorking = false;\n\n        this.events.next(new StopWorkingEvent(id));\n    }\n}\n","import {Directive, ElementRef, HostListener, Input, OnInit, Renderer2} from '@angular/core';\nimport {TowCoordinator} from '../tow-coordinator.service';\n\n// Notify Tow Coordinator about drag operation\n@Directive({selector: '[tow-slave]'})\nexport class TowSlaveDirective implements OnInit {\n    @Input('tow-slave') id;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private towCoordinator: TowCoordinator) {\n    }\n\n    @HostListener('dragstart', ['$event'])\n    dragStart(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n\n        event.dataTransfer.setData('FAKE', JSON.stringify({}));\n\n        this.towCoordinator.slaveStartWorking(this.id);\n    }\n\n    @HostListener('drag', ['$event'])\n    drag(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n    }\n\n    @HostListener('dragend', ['$event'])\n    dragEnd(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.towCoordinator.slaveStopWorking(this.id);\n    }\n\n    ngOnInit() {\n        this.renderer2.setAttribute(this.el.nativeElement, 'draggable', 'true');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {TowCoordinator} from './tow-coordinator.service';\n\n@Injectable()\nexport class TowService {\n    events: Subject<any> = new Subject();\n\n    constructor(private towCoordinator: TowCoordinator) {\n        this.towCoordinator.events.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {Directive, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\nimport {ISpotInfo, ISpotPosition, ISpotSize} from '../interfaces/distance-to-spot.interface';\nimport {SpotId} from '../interfaces/spot-id.type';\nimport {RadarCoordinator} from '../radar-coordinator.service';\n\n@Directive({\n    selector: '[spot]'\n})\nexport class SpotDirective implements OnInit, OnDestroy {\n    @Input() spot: any;\n\n    id: SpotId = String(Math.random());\n\n    constructor(private radarCoordinator: RadarCoordinator,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.radarCoordinator.register(this.id, this);\n    }\n\n    getInfo(): ISpotInfo {\n        return {\n            id: this.id,\n            data: this.getData(),\n            size: this.getSize(),\n            position: this.getPosition()\n        };\n    }\n\n    getData(): any {\n        return this.spot;\n    }\n\n    getSize(): ISpotSize {\n        return {\n            width: this.el.nativeElement.offsetWidth,\n            height: this.el.nativeElement.offsetHeight\n        };\n    }\n\n    getPosition(): ISpotPosition {\n        const offsets = this.el.nativeElement.getBoundingClientRect();\n\n        return {\n            x: offsets.left,\n            y: offsets.top\n        };\n    }\n\n    ngOnDestroy() {\n        this.radarCoordinator.unRegister(this.id);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {SpotDirective} from './directive/spot.directive';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {Radar} from './radar.service';\n\n@NgModule({\n    exports: [SpotDirective],\n    declarations: [SpotDirective],\n    providers: [\n        Radar,\n        RadarCoordinator\n    ]\n})\nexport class RadarModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TowCoordinator} from './tow-coordinator.service';\nimport {TowSlaveDirective} from './tow-slave/tow-slave.directive';\nimport {TowService} from './tow.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        TowSlaveDirective\n    ],\n\n    exports: [\n        TowSlaveDirective\n    ],\n\n    providers: [\n        TowService,\n        TowCoordinator\n    ]\n})\nexport class TowModule {\n}\n","import {Component} from '@angular/core';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Component({\n    templateUrl: './pick-out-area.component.html',\n    styleUrls: ['./pick-out-area.component.scss']\n})\nexport class PickOutAreaComponent {\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    initialize(pickOutAreaModel: PickOutAreaModel) {\n        this.pickOutAreaModel = pickOutAreaModel;\n    }\n}\n","export class EndPickOut {\n}\n","export class PickOutItems {\n    constructor(public ids: string[]) {\n    }\n}\n","export class StartPickOut {\n}\n","export class StopPickOut {\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {EndPickOut} from './events/end-pick-out.event';\nimport {PickOutItems} from './events/pick-out-items.event';\nimport {StartPickOut} from './events/start-pick-out.event';\nimport {StopPickOut} from './events/stop-pick-out.event';\nimport {Radar} from '../radar/radar.service';\nimport {SpotModel} from '../radar/spot.model';\n\n@Injectable()\nexport class PickOutCoordinator {\n    changes: Subject<any> = new Subject();\n\n    private isPickOutAllowed = true;\n\n    constructor(private radar: Radar) {\n    }\n\n    disablePickOut() {\n        this.isPickOutAllowed = false;\n    }\n\n    enablePickOut() {\n        this.isPickOutAllowed = true;\n    }\n\n    stopPickOut() {\n        this.changes.next(new StopPickOut());\n    }\n\n    startPickOut() {\n        this.changes.next(new StartPickOut());\n    }\n\n    pickOutChanged(range) {\n        const pickOutSpotModels = this.radar.filterSpots((spot: SpotModel) => spot.data.isPickOutItem);\n\n        pickOutSpotModels.forEach((spotModel) => {\n            spotModel.updateInfo();\n        });\n\n        this.changes.next(new PickOutItems(this.getSelectedItemIds(range, pickOutSpotModels)));\n    }\n\n    endPickOut() {\n        this.changes.next(new EndPickOut());\n    }\n\n    private getSelectedItemIds(range, pickOutsItem: SpotModel[]): string[] {\n        return pickOutsItem\n            .filter((pickOutItem) => {\n                return (range.x < (pickOutItem.position.x + pickOutItem.size.width) &&\n                    (range.x + range.width) > pickOutItem.position.x &&\n                    (range.y + range.height) > pickOutItem.position.y &&\n                    range.y < (pickOutItem.position.y + pickOutItem.size.height));\n            })\n            .map((pickOutItem) => pickOutItem.data.brickId);\n    }\n}\n","export class PickOutAreaModel {\n    // brick ids allow to define should we render area component\n    initialBrickId: string;\n    currentBrickId: string;\n\n    // calculate pick out area width and height\n    initialX: number;\n    initialY: number;\n\n    // store last client X and Y position before scroll event\n    previousClientX: number;\n    previousClientY: number;\n\n    // coordinates inside scrollable container\n    x: number;\n    y: number;\n\n    // coordinates related to viewport\n    clientX: number;\n    clientY: number;\n\n    // size of pick out area\n    width: number;\n    height: number;\n\n    isPickOutProcessInitialized = false;\n\n    scrollableContainer: HTMLElement;\n\n    private minimumMoveDistance = 5;\n\n    constructor(scrollableContainer: HTMLElement,\n                x: number,\n                y: number,\n                overBrickId: string) {\n        this.scrollableContainer = scrollableContainer;\n\n        this.initialX = x;\n        this.initialY = y;\n\n        this.x = x;\n        this.y = y;\n\n        this.initialBrickId = overBrickId;\n        this.currentBrickId = overBrickId;\n    }\n\n    recalculatePositionAndSize() {\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        const pageX = this.previousClientX - scrollContextRect.left;\n        const pageY = this.previousClientY - scrollContextRect.top + this.scrollableContainer.scrollTop;\n\n        this.updatePickOutAreaPositionAndSize(pageX, pageY);\n    }\n\n    updateCurrentClientPosition(clientX: number, clientY: number) {\n        this.previousClientX = clientX;\n        this.previousClientY = clientY;\n\n        this.recalculatePositionAndSize();\n    }\n\n    updateCurrentBrickId(brickId: string): void {\n        this.currentBrickId = brickId;\n    }\n\n    canInitiatePickOutProcess(): boolean {\n        return this.isMouseMovedEnough() &&\n            (!this.currentBrickId || this.currentBrickId !== this.initialBrickId);\n    }\n\n    initiatePickOutProcess() {\n        this.isPickOutProcessInitialized = true;\n    }\n\n    private updatePickOutAreaPositionAndSize(x: number, y: number) {\n        // update x position and width\n        if (x < this.initialX) {\n            this.width = this.initialX - x;\n\n            this.x = x;\n        } else {\n            this.width = Math.abs(x - this.x);\n        }\n\n        // update y position and height\n        if (y < this.initialY) {\n            this.height = this.initialY - y;\n\n            this.y = y;\n        } else {\n            this.height = Math.abs(y - this.y);\n        }\n\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        this.clientX = scrollContextRect.left + this.x;\n        this.clientY = scrollContextRect.top + this.y - this.scrollableContainer.scrollTop;\n    }\n\n    private isMouseMovedEnough(): boolean {\n        return this.width > this.minimumMoveDistance ||\n            this.height > this.minimumMoveDistance;\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener,\n    Inject,\n    Injector,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {PickOutCoordinator} from '../pick-out-coordinator.service';\nimport {MOUSE_LEFT_KEY_CODE} from '../pick-out.constant';\nimport {IPickOutAreaConfig} from './pick-out-area-config.interface';\nimport {PickOutAreaComponent} from './pick-out-area.component';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Directive({\n    selector: '[pick-out-area]'\n})\nexport class PickOutAreaDirective implements OnInit, OnDestroy {\n    @Input('pick-out-area') config: IPickOutAreaConfig;\n\n    doc: any = null;\n\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    selectionRangeComponentRef: ComponentRef<PickOutAreaComponent> = null;\n\n    onMouseUpBound: () => any;\n    onMouseMoveBound: (event: MouseEvent) => void;\n    onSelectionStartBound: () => any;\n    onContainerScrollBound: () => any;\n\n    previousClientX: number;\n    previousClientY: number;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private pickOutCoordinator: PickOutCoordinator,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private zone: NgZone,\n                private el: ElementRef,\n                private injector: Injector) {\n        this.doc = doc;\n    }\n\n    ngOnInit() {\n        this.onMouseUpBound = this.onMouseUp.bind(this);\n        this.onMouseMoveBound = this.onMouseMove.bind(this);\n        this.onSelectionStartBound = this.onSelectionStart.bind(this);\n        this.onContainerScrollBound = this.onContainerScroll.bind(this);\n\n        this.doc.addEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.addEventListener('mouseup', this.onMouseUpBound);\n        this.doc.addEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.addEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    triggerPickOutChanged() {\n        this.pickOutCoordinator.pickOutChanged({\n            x: this.pickOutAreaModel.clientX,\n            y: this.pickOutAreaModel.clientY,\n            width: this.pickOutAreaModel.width,\n            height: this.pickOutAreaModel.height\n        });\n    }\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        if (event.button === MOUSE_LEFT_KEY_CODE && !this.isMouseOverDraggableElement(event.clientX, event.clientY)) {\n            const scrollContextRect = this.config.scrollableContainer.getBoundingClientRect();\n            const pageX = event.clientX - scrollContextRect.left;\n            const pageY = event.clientY - scrollContextRect.top + this.config.scrollableContainer.scrollTop;\n\n            const brickIdOverMouse = this.findBrickIdByCoordinate(event.clientX, event.clientY);\n\n            this.pickOutAreaModel = new PickOutAreaModel(\n                this.config.scrollableContainer,\n                pageX,\n                pageY,\n                brickIdOverMouse\n            );\n        }\n    }\n\n    onMouseMove(event: any) {\n        if (this.pickOutAreaModel) {\n            this.pickOutAreaModel.updateCurrentClientPosition(event.clientX, event.clientY);\n            this.pickOutAreaModel.updateCurrentBrickId(this.findBrickIdByCoordinate(event.clientX, event.clientY));\n\n            if (this.pickOutAreaModel.isPickOutProcessInitialized) {\n                event.preventDefault();\n\n                this.triggerPickOutChanged();\n            } else if (this.pickOutAreaModel.canInitiatePickOutProcess()) {\n                this.pickOutAreaModel.initiatePickOutProcess();\n\n                this.onStartPicKOut();\n            }\n        }\n    }\n\n    onMouseUp() {\n        this.onStopPickOut();\n    }\n\n    onContainerScroll() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.pickOutAreaModel.recalculatePositionAndSize();\n\n            this.triggerPickOutChanged();\n        }\n    }\n\n    onSelectionStart(e) {\n        // does not allow select text during pick out process\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            e.preventDefault();\n        }\n    }\n\n    renderRangeComponent() {\n        // https://medium.com/@caroso1222/angular-pro-tip-how-to-dynamically-create-components-in-body-ba200cc289e6\n\n        // 1. Create a component reference from the component\n        this.selectionRangeComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PickOutAreaComponent)\n            .create(this.injector);\n\n        this.selectionRangeComponentRef.instance.initialize(this.pickOutAreaModel);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.selectionRangeComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.selectionRangeComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n\n        this.config.scrollableContainer.appendChild(domElem);\n    }\n\n    removeRangeComponent() {\n        this.appRef.detachView(this.selectionRangeComponentRef.hostView);\n        this.selectionRangeComponentRef.destroy();\n        this.selectionRangeComponentRef = null;\n    }\n\n    onStartPicKOut() {\n        this.pickOutCoordinator.startPickOut();\n\n        this.doc.activeElement.blur();\n\n        this.renderRangeComponent();\n\n        this.clearSelection();\n    }\n\n    onStopPickOut() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.removeRangeComponent();\n\n            this.pickOutCoordinator.endPickOut();\n        }\n\n        this.pickOutAreaModel = null;\n    }\n\n    ngOnDestroy() {\n        this.doc.removeEventListener('mouseup', this.onMouseUpBound);\n        this.doc.removeEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.removeEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.removeEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    private clearSelection() {\n        window.getSelection().empty();\n    }\n\n    private findBrickIdByCoordinate(pageX: number, clientY: number): string {\n        let currentElement = document.elementFromPoint(pageX, clientY);\n\n        while (currentElement && currentElement.tagName !== 'WALL-CANVAS-BRICK') {\n            currentElement = currentElement.parentElement;\n        }\n\n        if (currentElement) {\n            // there is canvas bricks\n            return currentElement\n                .getElementsByClassName('wall-canvas-brick__wrapper')[0]\n                .getAttribute('id');\n        } else {\n            return null;\n        }\n    }\n\n    private isMouseOverDraggableElement(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement &&\n        !(currentElement as HTMLElement).draggable &&\n        !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n}\n","export const MOUSE_LEFT_KEY_CODE = 0;\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\n\n@Injectable()\nexport class PickOutService {\n    events: Subject<any> = new Subject();\n\n    constructor(private pickOutHandlerService: PickOutCoordinator) {\n        this.pickOutHandlerService.changes.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    enablePickOut() {\n        this.pickOutHandlerService.enablePickOut();\n    }\n\n    disablePickOut() {\n        this.pickOutHandlerService.disablePickOut();\n    }\n\n    stopPickOut() {\n        this.pickOutHandlerService.stopPickOut();\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PickOutAreaComponent} from './pick-out-area/pick-out-area.component';\nimport {PickOutAreaDirective} from './pick-out-area/pick-out-area.directive';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\nimport {PickOutService} from './pick-out.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        PickOutAreaComponent,\n        PickOutAreaDirective\n    ],\n\n    providers: [\n        PickOutService,\n        PickOutCoordinator\n    ],\n\n    exports: [\n        PickOutAreaDirective\n    ],\n\n    entryComponents: [\n        PickOutAreaComponent\n    ]\n})\n\nexport class PickOutModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {WallModelFactory} from './factory/wall-model.factory';\nimport {BrickRegistry} from './registry/brick-registry.service';\nimport {MatIconModule} from '@angular/material';\nimport {PlaceholderRendererModule} from '../modules/components/placeholder-renderer/placeholder-renderer.module';\nimport {WallCanvasBrickComponent} from './components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component';\nimport {WallCanvasRowComponent} from './components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component';\nimport {WallCanvasComponent} from './components/wall-canvas/wall-canvas.component';\nimport {WallComponent} from './components/wall/wall.component';\nimport {TowModule} from '../modules/tow/tow.module';\nimport {RadarModule} from '../modules/radar/radar.module';\nimport {PickOutModule} from '../modules/pick-out/pick-out.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PickOutModule,\n        TowModule,\n        RadarModule,\n        PlaceholderRendererModule,\n        MatIconModule\n    ],\n\n    declarations: [\n        WallComponent,\n        WallCanvasComponent,\n        WallCanvasRowComponent,\n        WallCanvasBrickComponent\n    ],\n\n    exports: [\n        WallComponent\n    ]\n})\nexport class WallModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: WallModule,\n            providers: [\n                BrickRegistry,\n                WallModelFactory\n            ]\n        };\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'w-brick-input-placeholder',\n    templateUrl: './brick-input-placeholder.component.html',\n    styleUrls: ['./brick-input-placeholder.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BrickInputPlaceholderComponent implements OnInit {\n    @Input() text: string;\n    @Input() icon: string;\n    @Input() loading: boolean;\n    @Output() selected: EventEmitter<MouseEvent> = new EventEmitter();\n\n    constructor() {\n    }\n\n    onClick(event: MouseEvent) {\n        this.selected.emit(event);\n    }\n\n    ngOnInit() {\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'w-loading-wrapper',\n    templateUrl: './loading-wrapper.component.html',\n    styleUrls: ['./loading-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingWrapperComponent implements OnInit {\n    @Input() message: string;\n\n    ngOnInit() {\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {BrickInputPlaceholderComponent} from './brick-input-placeholder/brick-input-placeholder.component';\nimport {LoadingWrapperComponent} from './loading-wrapper/loading-wrapper.component';\nimport {MatIconModule} from '@angular/material';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    exports: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    declarations: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    providers: []\n})\nexport class HelperComponentsModule {\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {IWallModel, IWallPlugin} from '../../wall/wall';\n\nexport class CopyPlugin implements IWallPlugin {\n    name: 'copy';\n    version: '0.0.0';\n\n    doc: Document = null;\n\n    onCopyBound: any;\n\n    wallModel: IWallModel;\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n\n        this.onCopyBound = this.onCopy.bind(this);\n\n        this.doc.addEventListener('copy', this.onCopyBound);\n    }\n\n    onWallInitialize(model: IWallModel) {\n        this.wallModel = model;\n    }\n\n    onCopy(e: ClipboardEvent) {\n        const selectedTextRepresentation = this.getSelectedTextRepresentation();\n\n        if (selectedTextRepresentation.length) {\n            e.preventDefault();\n\n            this.addToClipboard(e, selectedTextRepresentation);\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('click', this.onCopy);\n    }\n\n    private addToClipboard(e: ClipboardEvent, str: string) {\n        e.clipboardData.setData('text/plain', str);\n    }\n\n    private getSelectedTextRepresentation(): string {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        return selectedBrickIds\n            .map((selectedBrickId) => this.wallModel.api.core.getBrickTextRepresentation(selectedBrickId))\n            .map((textRepresentation) => textRepresentation.trim())\n            .join('\\n');\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BeforeChangeEvent, IWallDefinition, IWallModel, IWallPlugin, SetPlanEvent} from '../../wall/wall';\nimport {IUndoRedoApi} from './undo-redo-api.interface';\nimport {UNDO_REDO_API_NAME} from './undo-redo.constant';\n\nexport class UndoRedoPlugin implements IWallPlugin {\n    name: 'undoredo';\n    version: '0.0.0';\n\n    private wallModel: IWallModel;\n\n    private doc: Document;\n\n    private onUndoKeyHandlerBound: any;\n\n    private apiSubscription: Subscription;\n\n    private processingUndo = false;\n\n    private undoPlanStack: IWallDefinition[] = [];\n    private redoPlanStack: IWallDefinition[] = [];\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.wallModel.registerApi(UNDO_REDO_API_NAME, {\n            undo: this.undo.bind(this),\n            undoSize: this.undoSize.bind(this),\n            redo: this.redo.bind(this),\n            redoSize: this.redoSize.bind(this),\n            clear: this.clear.bind(this)\n        } as IUndoRedoApi);\n\n        this.apiSubscription = this.wallModel.api.core.subscribe((e) => {\n            this.wallModelEventHandler(e);\n        });\n\n        this.onUndoKeyHandlerBound = this.onUndoKeyHandler.bind(this);\n\n        this.doc.addEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    onWallPluginDestroy() {\n        this.apiSubscription.unsubscribe();\n\n        this.doc.removeEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    private onUndoKeyHandler(e: KeyboardEvent) {\n        const CTRL_KEY = 90;\n\n        if (e.keyCode === CTRL_KEY && e.ctrlKey) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (e.shiftKey) {\n                this.redo();\n            } else {\n                this.undo();\n            }\n        }\n    }\n\n    private undoSize(): number {\n        return this.undoPlanStack.length;\n    }\n\n    private redoSize(): number {\n        return this.redoPlanStack.length;\n    }\n\n    private wallModelEventHandler(e: any): void {\n        if (!this.processingUndo) {\n            if (e instanceof BeforeChangeEvent && (e as BeforeChangeEvent).beforeEventType !== SetPlanEvent) {\n                this.undoPlanStack.push(this.wallModel.api.core.getPlan());\n\n                this.redoPlanStack = [];\n            }\n        }\n    }\n\n    private redo() {\n        const redoPlan = this.redoPlanStack.pop();\n\n        if (redoPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(redoPlan);\n\n            this.undoPlanStack.push(redoPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private undo() {\n        const previousPlan = this.undoPlanStack.pop();\n\n        if (previousPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(previousPlan);\n\n            this.redoPlanStack.push(previousPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private clear() {\n        this.undoPlanStack = [];\n        this.redoPlanStack = [];\n    }\n}\n","export const UNDO_REDO_API_NAME = 'undo';\n","export const TOW = {\n    dropTypes: {\n        horizontal: 'horizontal',\n        vertical: 'vertical'\n    },\n\n    dropSides: {\n        left: 'left',\n        right: 'right',\n        top: 'top',\n        bottom: 'bottom'\n    }\n};\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {Radar} from '../../modules/radar/radar.service';\nimport {SpotModel} from '../../modules/radar/spot.model';\nimport {PickOutService} from '../../modules/pick-out/pick-out.service';\nimport {StartPickOut} from '../../modules/pick-out/events/start-pick-out.event';\nimport {PickOutItems} from '../../modules/pick-out/events/pick-out-items.event';\nimport {EndPickOut} from '../../modules/pick-out/events/end-pick-out.event';\nimport {IWallPlugin} from '../../wall/model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../wall/model/interfaces/wall-model.interface';\nimport {TowService} from '../../modules/tow/tow.service';\nimport {TOW} from '../../modules/tow/tow.constant';\nimport {StopWorkingEvent} from '../../modules/tow/events/stop-working.event';\nimport {WorkInProgressEvent} from '../../modules/tow/events/work-in-progress.event';\nimport {StartWorkingEvent} from '../../modules/tow/events/start-working.event';\nimport {PlaceholderRenderer} from '../../modules/components/placeholder-renderer/placeholder-renderer.service';\n\nexport interface ISelectionOptions {\n    shouldUnselectBrick: (e: MouseEvent) => boolean;\n}\n\nexport class SelectionPlugin implements IWallPlugin {\n    name: 'selection';\n    version: '0.0.0';\n\n    doc: Document;\n\n    isMouseSelection = false;\n    onMouseDownBound: any;\n    onKeyDownHandlerBound: any;\n\n    wallModel: IWallModel;\n\n    private pickOutService: PickOutService;\n    private radar: Radar;\n    private towService: TowService;\n    private placeholderRenderer: PlaceholderRenderer;\n\n    private nearestBrickToDrop: {\n        spot: SpotModel;\n        type: string;\n        side: string;\n    };\n    private placeholderHeight = 2;\n    private isEnableDropZoneHighlight = false;\n\n    private towServiceSubscription: Subscription;\n    private pickOutServiceSubscription: Subscription;\n\n    private options: ISelectionOptions;\n\n    constructor(private injector: Injector, options?: ISelectionOptions) {\n        // extension point for client to prevent brick un-selections\n        this.options = {\n            shouldUnselectBrick: () => true,\n            ...options\n        };\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.doc = this.injector.get(DOCUMENT);\n        this.pickOutService = this.injector.get(PickOutService);\n        this.radar = this.injector.get(Radar);\n        this.placeholderRenderer = this.injector.get(PlaceholderRenderer);\n        this.towService = this.injector.get(TowService);\n\n        this.onMouseDownBound = this.onMouseDown.bind(this);\n        this.onKeyDownHandlerBound = this.onKeyDownHandler.bind(this);\n\n        this.doc.addEventListener('mousedown', this.onMouseDownBound);\n        this.doc.addEventListener('keydown', this.onKeyDownHandlerBound);\n\n        // listen to picked out items and select appropriate bricks\n        this.pickOutServiceSubscription = this.pickOutService.subscribe((e) => {\n            if (e instanceof StartPickOut) {\n                this.isMouseSelection = true;\n\n                this.wallModel.api.ui.disableMediaInteraction();\n            }\n\n            if (e instanceof PickOutItems) {\n                this.wallModel.api.ui.selectBricks(e.ids);\n            }\n\n            if (e instanceof EndPickOut) {\n                this.wallModel.api.ui.enableMediaInteraction();\n            }\n        });\n\n        // listen for draggable operation and move bricks accordingly\n        this.towServiceSubscription = this.towService.subscribe((e) => {\n            if (e instanceof StartWorkingEvent) {\n                if (this.wallModel.api.core.getBrickSnapshot(e.slaveId)) {\n                    this.isEnableDropZoneHighlight = true;\n                } else {\n                    this.isEnableDropZoneHighlight = false;\n                }\n\n                this.nearestBrickToDrop = null;\n                this.placeholderRenderer.clear();\n            }\n\n            if (e instanceof StopWorkingEvent && this.nearestBrickToDrop) {\n                if (this.isEnableDropZoneHighlight) {\n                    let movedBrickIds = [];\n\n                    const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n                    if (selectedBrickIds.length > 1) {\n                        movedBrickIds = movedBrickIds.concat(selectedBrickIds);\n                    } else {\n                        movedBrickIds.push(e.slaveId);\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.horizontal) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.top) {\n                            this.wallModel.api.core.moveBrickBeforeBrickId(\n                                movedBrickIds,\n                                this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.bottom) {\n                            this.wallModel.api.core.moveBrickAfterBrickId(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.vertical) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.left) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.left\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.right) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.right\n                            );\n                        }\n                    }\n\n                    this.nearestBrickToDrop = null;\n\n                    this.placeholderRenderer.clear();\n                }\n            }\n\n            if (e instanceof WorkInProgressEvent) {\n                if (this.isEnableDropZoneHighlight) {\n                    const spots = this.radar.filterSpots((spot: SpotModel) => spot.data.isBeacon);\n\n                    let nearestSpot: SpotModel;\n\n                    spots.forEach((spot) => {\n                        spot.updateInfo();\n\n                        if (!nearestSpot) {\n                            nearestSpot = spot;\n                        } else {\n                            const currentSpotMinimalDistance = spot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            if (currentSpotMinimalDistance < nearestSpotMinimalDistance) {\n                                nearestSpot = spot;\n                            }\n                        }\n                    });\n\n                    if (nearestSpot) {\n                        const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                            e.mousePosition.clientX,\n                            e.mousePosition.clientY\n                        );\n\n                        if (nearestSpotMinimalDistance < 50) {\n                            this.nearestBrickToDrop = {\n                                spot: nearestSpot,\n                                side: null,\n                                type: null\n                            };\n\n                            if (e.mousePosition.clientX < nearestSpot.position.x) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.left;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.right;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x &&\n                                e.mousePosition.clientX < nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.horizontal;\n\n                                const centerYPosition = nearestSpot.position.y + (nearestSpot.size.height / 2);\n\n                                this.nearestBrickToDrop.side = e.mousePosition.clientY < centerYPosition ?\n                                    TOW.dropSides.top : TOW.dropSides.bottom;\n                            }\n\n                            this.renderPlaceholder();\n                        } else {\n                            this.nearestBrickToDrop = null;\n\n                            this.placeholderRenderer.clear();\n                        }\n                    } else {\n                        this.nearestBrickToDrop = null;\n\n                        this.placeholderRenderer.clear();\n                    }\n                }\n            }\n        });\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (!this.isMouseOverDraggableBox(e.clientX, e.clientY) && this.options.shouldUnselectBrick(e)) {\n            this.wallModel.api.ui.unSelectBricks();\n        }\n    }\n\n    onKeyDownHandler(e: KeyboardEvent) {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n        const firstSelectedBrickId = selectedBrickIds[0];\n        const lastSelectedBrickId = selectedBrickIds[selectedBrickIds.length - 1];\n\n        if (e.key === 'Delete' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.unSelectBricks();\n\n            this.wallModel.api.ui.removeBricks(selectedBrickIds);\n        }\n\n        if (e.key === 'Enter' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.focusOnBrickId(firstSelectedBrickId);\n\n            this.wallModel.api.ui.unSelectBricks();\n        }\n\n        if (e.key === 'ArrowUp' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const previousBrickId = this.wallModel.api.core.getPreviousBrickId(lastSelectedBrickId);\n\n            if (previousBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(previousBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(previousBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'ArrowDown' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const nextBrickId = this.wallModel.api.core.getNextBrickId(lastSelectedBrickId);\n\n            if (nextBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && !this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(nextBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(nextBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'Escape') {\n            e.preventDefault();\n\n            if (selectedBrickIds.length) {\n                this.wallModel.api.ui.unSelectBricks();\n            }\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('mousedown', this.onMouseDownBound);\n        this.doc.removeEventListener('keydown', this.onKeyDownHandlerBound);\n\n        this.wallModel = null;\n        this.pickOutServiceSubscription.unsubscribe();\n        this.towServiceSubscription.unsubscribe();\n    }\n\n    private isMouseOverDraggableBox(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement && !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n\n    private isDownSelectionDirection(): boolean {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        const bricksCount = selectedBrickIds.length;\n\n        const lastBrickId = selectedBrickIds[bricksCount - 1];\n        const penultimateBrickId = selectedBrickIds[bricksCount - 2];\n\n        return this.wallModel.api.core.isBrickAheadOf(penultimateBrickId, lastBrickId);\n    }\n\n    private renderPlaceholder() {\n        let placeholderX;\n        let placeholderY;\n        let placeholderSize;\n        let placeholderIsHorizontal;\n\n        const spot = this.nearestBrickToDrop.spot;\n        const side = this.nearestBrickToDrop.side;\n        const type = this.nearestBrickToDrop.type;\n\n        if (type === TOW.dropTypes.horizontal) {\n            placeholderX = spot.position.x;\n            placeholderSize = spot.size.width;\n\n            if (side === TOW.dropSides.top) {\n                placeholderY = spot.position.y - this.placeholderHeight;\n            }\n\n            if (side === TOW.dropSides.bottom) {\n                placeholderY = spot.position.y + spot.size.height;\n            }\n\n            placeholderIsHorizontal = true;\n        }\n\n        if (type === TOW.dropTypes.vertical) {\n            placeholderY = spot.position.y;\n            placeholderSize = spot.size.height;\n            placeholderIsHorizontal = false;\n\n            if (side === TOW.dropSides.left) {\n                placeholderX = spot.position.x;\n            }\n\n            if (side === TOW.dropSides.right) {\n                placeholderX = spot.position.x + spot.size.width;\n            }\n        }\n\n        this.placeholderRenderer.render(placeholderX, placeholderY, placeholderSize, placeholderIsHorizontal);\n    }\n}\n","export const DIVIDER_BRICK_TAG = 'divider';\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'divider-brick',\n    templateUrl: './divider-brick.component.html',\n    styleUrls: ['./divider-brick.component.scss']\n})\n\nexport class DividerBrickComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {BrickRegistry} from '../../wall/wall';\nimport {DividerBrickComponent} from './component/divider-brick.component';\nimport {DIVIDER_BRICK_TAG} from './divider-brick.constant';\n\n@NgModule({\n    exports: [DividerBrickComponent],\n    declarations: [DividerBrickComponent],\n    entryComponents: [DividerBrickComponent]\n})\nexport class DividerBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: DIVIDER_BRICK_TAG,\n            component: DividerBrickComponent,\n            name: 'Divider',\n            description: 'Visually divide blocks'\n        });\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IBaseTextState} from './base-text-state.interface';\n\nexport class TextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return (this.brickSnapshot.state as IBaseTextState).text;\n    }\n}\n","export class DeepLeftNodeChild {\n    child: Node;\n\n    constructor(root: Node) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[0];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class DeepRightNodeChild {\n    child: Node;\n\n    constructor(root: HTMLElement) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[currentNode.childNodes.length - 1];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class FirstSubStringNode {\n    firstLevelSubStringNodes: Node[] = [];\n\n    private readonly subString: string;\n\n    constructor(private root: HTMLElement, private subStringHTML: string) {\n        // get text representation\n        this.subString = this.getSubStringTextContent();\n\n        if (subStringHTML.length !== 0) {\n            if (this.root.childNodes.length === 1) {\n                this.firstLevelSubStringNodes = Array.from(this.root.childNodes);\n\n            } else if (this.root.childNodes.length > 1) {\n                this.firstLevelSubStringNodes = this.findFirstLevelSubStringNodes();\n            }\n        }\n    }\n\n    private findFirstLevelSubStringNodes() {\n        let i = this.root.childNodes.length - 1;\n        let currentNode = this.root.childNodes[i];\n        let text = '';\n        const firstLevelSubStringNodes = [];\n\n        while (currentNode && !text.includes(this.subString)) {\n            text = currentNode.textContent + text;\n\n            firstLevelSubStringNodes.push(currentNode);\n\n            i--;\n            currentNode = this.root.childNodes[i];\n        }\n\n        return firstLevelSubStringNodes.reverse();\n    }\n\n    private getSubStringTextContent(): string {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.subStringHTML;\n\n        return pNode.textContent;\n    }\n}\n","export class CaretStartEndPosition {\n    constructor(private el: Node) {\n    }\n\n    isCaretAtEnd(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setStart(selRange.endContainer, selRange.endOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n\n    isCaretAtStart(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setEnd(selRange.startContainer, selRange.startOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n}\n","export class CursorLeftCoordinate {\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n    }\n\n    get(): number {\n        const div = this.createElementClone(this.targetNode);\n        const span = document.createElement('SPAN');\n\n        div.innerHTML = this.leftText;\n        span.innerHTML = this.rightText;\n\n        div.appendChild(span);\n\n        // make sure element stay at top left corner\n        div.style.position = 'absolute';\n        div.style.top = '0';\n        div.style.left = '0';\n        div.style.padding = '0';\n        div.style.margin = '0';\n\n        document.body.appendChild(div);\n\n        const leftCoordinate = span.offsetLeft;\n\n        div.remove();\n\n        return leftCoordinate;\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class CursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n        if (leftText === '' && rightText === '') {\n            this.isOnFirstLine = true;\n            this.isOnLastLine = true;\n        } else {\n            // http://jsbin.com/qifezupu/31/edit?js,output\n\n            const div = this.createElementClone(this.targetNode);\n\n            document.body.appendChild(div);\n\n            const span1 = document.createElement('SPAN');\n            const span2 = document.createElement('SPAN');\n\n            div.appendChild(span1);\n            div.appendChild(span2);\n\n            span1.innerText = 'a';\n\n            const lh = span1.offsetHeight;\n\n            span1.innerHTML = leftText;\n            span2.innerHTML = rightText;\n\n            this.isOnFirstLine = span1.textContent.length === 0 ||\n                (span1.offsetHeight === lh && span1.getBoundingClientRect().top === span2.getBoundingClientRect().top);\n\n            this.isOnLastLine = span2.offsetHeight === lh;\n\n            div.remove();\n        }\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class PlaceCaretToPosition {\n    constructor(private el: Node, private position: number) {\n    }\n\n    place() {\n        const range = document.createRange();\n        const sel = window.getSelection();\n\n        range.setStart(this.el, this.position);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n","/**\n * Returns string which does not contains empty nodes inside\n */\nexport class StringWithoutEmptyNodes {\n    constructor(private str: string) {\n    }\n\n    get() {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.str;\n\n        if (!pNode.textContent.trim().length) {\n            // there are no text itself, so replace any tags to empty string\n            return '';\n        } else {\n            return this.str;\n        }\n    }\n}\n","export const FOCUS_INITIATOR = 'text-supporting-brick';\n\nexport const ENTER_KEY = 'Enter';\nexport const NUMPUB_ENTER_KEY = 'NumpadEnter';\nexport const ENTER_KEY_CODE_ANDROID = 13;\nexport const DELETE_KEY = 'Delete';\nexport const BACK_SPACE_KEY = 'Backspace';\nexport const BACK_SPACE_KEY_CODE_ANDROID = 8;\nexport const LEFT_KEY = 'ArrowLeft';\nexport const TOP_KEY = 'ArrowUp';\nexport const RIGHT_KEY = 'ArrowRight';\nexport const BOTTOM_KEY = 'ArrowDown';\nexport const ESCAPE_KEY = 27;\nexport const TAB_KEY = 'Tab';\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class BottomKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        if (this.baseTextBrickComponent.isCaretAtLastLine()) {\n            e.preventDefault();\n\n            const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    bottomKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {BaseTextBrickComponent} from '../base-text-brick.component';\n\nexport class EnterKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const sel = window.getSelection();\n\n        const splittedText = this.baseTextBrickComponent.getSplittedText(\n            sel.focusOffset,\n            sel.focusNode\n        );\n\n        splittedText.left = this.baseTextBrickComponent.cleanUpText(splittedText.left);\n        splittedText.right = this.baseTextBrickComponent.cleanUpText(splittedText.right);\n\n        if (splittedText.left.length) {\n            if (splittedText.right.length) {\n                // text is splitted to two part\n                this.splitBrickForTwoPart(splittedText.left, splittedText.right);\n            } else {\n                // cursor at end - text's exist - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        } else {\n            if (splittedText.right.length) {\n                // cursor at start, text exists - just create new line at top, do not move focus\n                this.addEmptyTextBrickBefore();\n            } else {\n                // there are no text at all - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        }\n    }\n\n    private splitBrickForTwoPart(left: string, right: string) {\n        this.addBrickAfter(right);\n\n        this.baseTextBrickComponent.setTextState(left);\n        this.baseTextBrickComponent.saveCurrentState();\n    }\n\n    private addEmptyTextBrickBefore() {\n        const newTextState = {\n            text: '',\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        this.baseTextBrickComponent.wallModel.api.core\n            .addBrickBeforeBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // scroll browser view to element\n        this.baseTextBrickComponent.editor.nativeElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'start'\n        });\n    }\n\n    private addEmptyBrickAfter() {\n        // cursor at end - text's exist - create new and focus on it\n        this.addBrickAfter('');\n    }\n\n    private addBrickAfter(text: string) {\n        const newTextState = {\n            text: text,\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        const addedBrick = this.baseTextBrickComponent.wallModel.api.core\n            .addBrickAfterBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // wait one tick for component rendering\n        setTimeout(() => {\n            this.baseTextBrickComponent.wallUiApi.focusOnBrickId(addedBrick.id);\n        });\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class LeftKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                leftKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi\n            .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class RightKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                rightKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class TopKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n        if (this.baseTextBrickComponent.isCaretAtFirstLine()) {\n            e.preventDefault();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    topKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallModel.api.ui\n                .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {DeepLeftNodeChild} from '../../modules/utils/deep-left-node-child';\nimport {DeepRightNodeChild} from '../../modules/utils/deep-right-node-child';\nimport {FirstSubStringNode} from '../../modules/utils/first-sub-string-node';\nimport {CaretStartEndPosition} from '../../modules/utils/node/caret-start-end-position';\nimport {CursorLeftCoordinate} from '../../modules/utils/node/cursor-left-coordinate';\nimport {CursorPositionInLine} from '../../modules/utils/node/cursor-position-in-line';\nimport {PlaceCaretToPosition} from '../../modules/utils/node/place-caret-to-position';\nimport {StringWithoutEmptyNodes} from '../../modules/utils/node/string-without-empty-nodes';\nimport {IFocusContext, IOnWallFocus, IOnWallStateChange, IWallComponent, IWallModel, IWallUiApi} from '../../wall/wall';\nimport {\n    BACK_SPACE_KEY,\n    BACK_SPACE_KEY_CODE_ANDROID,\n    BOTTOM_KEY,\n    DELETE_KEY,\n    ENTER_KEY,\n    ENTER_KEY_CODE_ANDROID,\n    ESCAPE_KEY,\n    FOCUS_INITIATOR,\n    LEFT_KEY,\n    NUMPUB_ENTER_KEY,\n    RIGHT_KEY,\n    TAB_KEY,\n    TOP_KEY\n} from './base-text-brick.constant';\nimport {IBaseTextState} from './base-text-state.interface';\nimport {BottomKeyHandler} from './keypress-handlers/bottom-key.handler';\nimport {EnterKeyHandler} from './keypress-handlers/enter-key.handler';\nimport {LeftKeyHandler} from './keypress-handlers/left-key.handler';\nimport {RightKeyHandler} from './keypress-handlers/right-key.handler';\nimport {TopKeyHandler} from './keypress-handlers/top-key.handler';\n\nenum LineType {\n    first = 'FIRST',\n    last = 'LAST'\n}\n\nexport interface ICursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n}\n\nexport abstract class BaseTextBrickComponent implements OnInit, OnDestroy, IOnWallStateChange, IOnWallFocus, IWallComponent {\n    @Input() id: string;\n    @Input() state: IBaseTextState;\n    @Input() wallModel: IWallModel;\n\n    @Output() stateChanges: EventEmitter<IBaseTextState> = new EventEmitter();\n\n    @ViewChild('editor') editor: ElementRef;\n\n    keypressHandlers = {\n        top: new TopKeyHandler(this),\n        enter: new EnterKeyHandler(this),\n        left: new LeftKeyHandler(this),\n        right: new RightKeyHandler(this),\n        bottom: new BottomKeyHandler(this)\n    };\n\n    wallUiApi: IWallUiApi;\n\n    scope: IBaseTextState = {\n        text: '',\n        tabs: 0\n    };\n\n    maxTabNumber = 3;\n\n    textChange: Subject<string> = new Subject();\n\n    textChangeSubscription: Subscription;\n\n    onPasteBound: (e: ClipboardEvent) => any;\n\n    ngOnInit() {\n        if (this.state && this.state.text !== this.scope.text) {\n            this.setTextState(this.state.text);\n        }\n\n        this.scope.tabs = this.state.tabs || 0;\n\n        this.onPasteBound = this.onPaste.bind(this);\n\n        this.editor.nativeElement.addEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription = this.textChange.subscribe(() => {\n            this.setTextState(this.scope.text);\n            this.saveCurrentState();\n        });\n\n        this.wallUiApi = this.wallModel.api.ui;\n    }\n\n    onWallStateChange(newState: IBaseTextState) {\n        this.scope.tabs = this.state.tabs || this.scope.tabs;\n\n        if (newState && newState.text !== this.scope.text) {\n            this.setTextState(newState.text);\n        }\n    }\n\n    ngOnDestroy() {\n        this.editor.nativeElement.removeEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription.unsubscribe();\n    }\n\n    onPaste(e: ClipboardEvent) {\n        e.preventDefault();\n\n        const textArr = e.clipboardData.getData('text/plain')\n            .split('\\n')\n            .map((str) => str.trim())\n            .filter((str) => str.length);\n\n        if (textArr.length === 1) {\n            document.execCommand('insertHTML', false, textArr[0]);\n        } else if (textArr.length > 1) {\n            // todo: add interface for UI api\n            textArr.reverse().forEach((text) => this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text', {text}));\n        }\n    }\n\n    onTextChange() {\n        this.textChange.next(this.scope.text);\n    }\n\n    // general handler of all key events\n    onKeyPress(e: KeyboardEvent) {\n        if (this.noMetaKeyIsPressed(e)) {\n            if (e.code === TOP_KEY) {\n                this.topKeyPressed(e);\n            }\n\n            if (e.code === BOTTOM_KEY) {\n                this.bottomKeyPressed(e);\n            }\n\n            if (e.code === LEFT_KEY && this.isCaretAtStart()) {\n                this.leftKeyPressed(e);\n            }\n\n            if (e.code === RIGHT_KEY && this.isCaretAtEnd()) {\n                this.rightKeyPressed(e);\n            }\n\n            if (e.code === ENTER_KEY || e.keyCode === ENTER_KEY_CODE_ANDROID || e.code === NUMPUB_ENTER_KEY) {\n                this.enterKeyPressed(e);\n            }\n\n            if (e.keyCode === ESCAPE_KEY) {\n                this.escapeKeyPressed(e);\n            }\n\n            if ((e.code === BACK_SPACE_KEY || e.keyCode === BACK_SPACE_KEY_CODE_ANDROID) && !this.isTextSelected()) {\n                this.backSpaceKeyPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text.length && this.isCaretAtEnd() && !this.isTextSelected()) {\n                this.concatWithNextTextSupportingBrick(e);\n            }\n\n            if (e.code === TAB_KEY && this.isCaretAtStart()) {\n                this.onTabPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text === '') {\n                this.onDeleteAndFocusToNext(e);\n            }\n        }\n    }\n\n    proxyToKeyHandler(keyHandlerName: string, e: KeyboardEvent) {\n        this.keypressHandlers[keyHandlerName].execute(e);\n    }\n\n    // key handler\n    topKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('top', e);\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('bottom', e);\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('enter', e);\n    }\n\n    leftKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('left', e);\n    }\n\n    rightKeyPressed(e) {\n        this.proxyToKeyHandler('right', e);\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        // do nothing\n    }\n\n    onTabPressed(e: KeyboardEvent) {\n        e.preventDefault();\n\n        this.increaseTab();\n        this.saveCurrentState();\n    }\n\n    backSpaceKeyPressed(e: KeyboardEvent) {\n        if (this.isCaretAtStart()) {\n            if (this.scope.tabs) {\n                this.decreaseTab();\n                this.saveCurrentState();\n            } else {\n                if (this.scope.text.length) {\n                    this.concatWithPreviousTextSupportingBrick(e);\n                } else {\n                    this.onDeleteAndFocusToPrevious(e);\n                }\n            }\n        }\n    }\n\n    // end key handlers\n\n    isCaretAtFirstLine(): boolean {\n        return this.getCursorPositionInLine().isOnFirstLine;\n    }\n\n    isCaretAtLastLine(): boolean {\n        return this.getCursorPositionInLine().isOnLastLine;\n    }\n\n    getCaretLeftCoordinate(): number {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return (new CursorLeftCoordinate(leftRightText.left, leftRightText.right, this.editor.nativeElement)).get();\n    }\n\n    getCursorPositionInLine(): ICursorPositionInLine {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return new CursorPositionInLine(leftRightText.left, leftRightText.right, this.editor.nativeElement);\n    }\n\n    concatWithPreviousTextSupportingBrick(e) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        if (previousTextBrickId) {\n            e.preventDefault();\n\n            const previousBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(previousTextBrickId);\n\n            this.wallModel.api.core.updateBrickState(previousTextBrickId, {\n                text: this.cleanUpText(previousBrickSnapshot.state.text) + this.scope.text\n            });\n\n            // wait for component re-rendering\n            setTimeout(() => {\n                const focusContext: IFocusContext = {\n                    initiator: FOCUS_INITIATOR,\n                    details: {\n                        concatText: true,\n                        concatenationText: this.scope.text\n                    }\n                };\n\n                this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n\n                // remove only after focus will be established\n                // that prevents flickering on mobile\n                this.wallUiApi.removeBrick(this.id);\n            });\n        }\n    }\n\n    concatWithNextTextSupportingBrick(e: Event) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            e.preventDefault();\n\n            const nextTextBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(nextTextBrickId);\n\n            const concatenationText = nextTextBrickSnapshot.state.text || '';\n\n            this.setTextState(this.scope.text + concatenationText);\n\n            this.saveCurrentState();\n\n            this.wallModel.api.core.removeBrick(nextTextBrickId);\n\n            setTimeout(() => {\n                this.placeCaretBaseOnConcatenatedText(concatenationText);\n            }, 10);\n        }\n    }\n\n    onDeleteAndFocusToPrevious(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        this.wallUiApi.removeBrick(this.id);\n\n        if (previousTextBrickId) {\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    onDeleteAndFocusToNext(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            this.wallUiApi.removeBrick(this.id);\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        return {\n            left: this.scope.text.slice(0, offset),\n            right: this.scope.text.slice(offset) || ''\n        };\n    }\n\n    // key handler end\n    onWallFocus(context?: IFocusContext): void {\n        if (this.editor.nativeElement !== document.activeElement) {\n            // focus by API call\n            this.editor.nativeElement.focus();\n\n            if (context && context.initiator === FOCUS_INITIATOR) {\n                if (context.details.deletePreviousText) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.concatText) {\n                    this.placeCaretBaseOnConcatenatedText(context.details.concatenationText);\n                }\n\n                if (context.details.leftKey) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.rightKey) {\n                    this.placeCaretAtStart();\n                }\n\n                if (context.details.bottomKey || context.details.topKey) {\n                    const line = context.details.bottomKey ? LineType.first : LineType.last;\n\n                    this.placeCaretAtLeftCoordinate(context.details.caretLeftCoordinate, line);\n                }\n            }\n        }\n    }\n\n    setTextState(text: string = '') {\n        this.scope.text = this.cleanUpText(text);\n    }\n\n    increaseTab() {\n        if (this.scope.tabs < this.maxTabNumber) {\n            this.scope.tabs++;\n        }\n    }\n\n    decreaseTab() {\n        if (this.scope.tabs > 0) {\n            this.scope.tabs--;\n        }\n    }\n\n    saveCurrentState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    // caret helpers\n    isTextSelected(): boolean {\n        return !window.getSelection().isCollapsed;\n    }\n\n    placeCaretAtStart(): void {\n        const deepLeftNode = new DeepLeftNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeStart(deepLeftNode.child);\n    }\n\n    placeCaretAtEnd(): void {\n        const rightNode = new DeepRightNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeEnd(rightNode.child);\n    }\n\n    placeCaretAtNodeStart(el: Node) {\n        this.placeCaretAtNodeToPosition(el, 0);\n    }\n\n    placeCaretAtNodeEnd(el: Node) {\n        this.placeCaretAtNodeToPosition(el, el.textContent.length);\n    }\n\n    placeCaretAtNodeToPosition(el: Node, position: number) {\n        (new PlaceCaretToPosition(el, position)).place();\n    }\n\n    // find the node which contains concatenated text and position in this node where cursor should be placed\n    placeCaretBaseOnConcatenatedText(concatenationText: string) {\n        if (concatenationText !== '') {\n            // find first level nodes for the text that was concatenated\n            const subStringNodes = new FirstSubStringNode(\n                this.editor.nativeElement,\n                concatenationText\n            );\n\n            // first level node which contains concatenated text\n            const firstLevelSubStringNode = subStringNodes.firstLevelSubStringNodes[0];\n\n            if (firstLevelSubStringNode) {\n                let focusNode;\n                let position;\n\n                if (firstLevelSubStringNode.nodeType === Node.TEXT_NODE) {\n                    // if first concatenated node is TEXT_NODE it might\n                    // be automatically concatenated with previous existing TEXT_NODE\n                    focusNode = firstLevelSubStringNode;\n\n                    // find text content for first concatenated TEXT_NODE\n                    const p = document.createElement('P');\n                    p.innerHTML = concatenationText;\n                    const firstLevelSubStringTextContent = p.childNodes[0].textContent;\n\n                    // finally find cursor position\n                    position = focusNode.textContent.length - firstLevelSubStringTextContent.length;\n                } else {\n                    focusNode = new DeepLeftNodeChild(firstLevelSubStringNode).child;\n\n                    position = 0;\n                }\n\n                this.placeCaretAtNodeToPosition(focusNode, position);\n            }\n        }\n    }\n\n    placeCaretAtLeftCoordinate(leftCoordinate: number, line: string) {\n        // todo: find the way to set caret based on coordinate number\n        if (line === LineType.last) {\n            this.placeCaretAtEnd();\n        } else {\n            this.placeCaretAtStart();\n        }\n    }\n\n    isCaretAtStart(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtStart();\n    }\n\n    isCaretAtEnd(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtEnd();\n    }\n\n    // remove all unnecessary tags\n    cleanUpText(text: string): string {\n        return (new StringWithoutEmptyNodes(text)).get();\n    }\n\n    private noMetaKeyIsPressed(e): boolean {\n        return !((e.shiftKey || e.altKey || e.ctrlKey || e.metaKey));\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'header-brick',\n    templateUrl: './header-brick.component.html',\n    styleUrls: ['./header-brick.component.scss']\n})\nexport class HeaderBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Header';\n}\n","import {Directive, ElementRef, HostListener, Input, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Directive({\n    selector: '[contenteditable]',\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: ContenteditableDirective, multi: true}\n    ]\n})\nexport class ContenteditableDirective implements ControlValueAccessor {\n    @Input() propValueAccessor: string = 'textContent';\n\n    private onChange: (value: string) => void;\n    private onTouched: () => void;\n    private removeDisabledState: () => void;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    }\n\n    @HostListener('input')\n    callOnChange() {\n        if (typeof this.onChange === 'function') {\n            this.onChange(this.elementRef.nativeElement[this.propValueAccessor]);\n        }\n    }\n\n    @HostListener('blur')\n    callOnTouched() {\n        if (typeof this.onTouched === 'function') {\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Writes a new value to the element.\n     * This method will be called by the forms API to write\n     * to the view when programmatic (model -> view) changes are requested.\n     *\n     * See: [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor#members)\n     */\n    writeValue(value: any): void { // todo add type\n        const normalizedValue = value === null ? '' : value;\n\n        this.renderer.setProperty(this.elementRef.nativeElement, this.propValueAccessor, normalizedValue);\n    }\n\n    /**\n     * Registers a callback function that should be called when\n     * the control's value changes in the UI.\n     *\n     * This is called by the forms API on initialization so it can update\n     * the form model when values propagate from the view (view -> model).\n     */\n    registerOnChange(fn: () => void): void {\n        this.onChange = fn;\n    }\n\n    /**\n     * Registers a callback function that should be called when the control receives a blur event.\n     * This is called by the forms API on initialization so it can update the form model on blur.\n     */\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * This function is called by the forms API when the control status changes to or from \"DISABLED\".\n     * Depending on the value, it should enable or disable the appropriate DOM element.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n            this.removeDisabledState = this.renderer\n                .listen(this.elementRef.nativeElement, 'keydown', this.listenerDisabledState);\n        } else {\n            if (this.removeDisabledState) {\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n                this.removeDisabledState();\n            }\n        }\n    }\n\n    private listenerDisabledState(e: KeyboardEvent) {\n        e.preventDefault();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {ContenteditableDirective} from './contenteditable.directive';\n\n@NgModule({\n    imports: [FormsModule],\n    exports: [ContenteditableDirective],\n    declarations: [ContenteditableDirective]\n})\nexport class ContenteditableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {HeaderBrickComponent} from './component/header-brick.component';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule\n    ],\n    exports: [HeaderBrickComponent],\n    declarations: [HeaderBrickComponent],\n    entryComponents: [HeaderBrickComponent]\n})\nexport class HeaderBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'header',\n            component: HeaderBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Header',\n            description: 'A large header with margins'\n        });\n    }\n}\n","import {InjectionToken} from '@angular/core';\nimport {IWallFileUploader} from './file-uploader.types';\n\nexport const WALL_FILE_UPLOADER = new InjectionToken<IWallFileUploader>('IWallFileUploader');\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applyImageSrc() {\n        this.notify({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onFileChange(event: any) {\n        this.notify({\n            file: event.target.files[0]\n        });\n    }\n\n    notify(data) {\n        this.ngxStickyModalRef.close(data);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applyImageSrc();\n    }\n\n    close() {\n        this.ngxStickyModalRef.dismiss();\n    }\n}\n","import {StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {ComponentFactoryResolver, ElementRef} from '@angular/core';\nimport {IStickyModalConfig} from 'ngx-sticky-modal/lib/sticky-modal-config.interface';\n\nexport function getModalConfig(el: ElementRef, resolver: ComponentFactoryResolver, component: any): IStickyModalConfig {\n    const elementBoundingRect = el.nativeElement.getBoundingClientRect();\n    const elementHeight = el.nativeElement.offsetHeight;\n\n    console.log('Getting modal config for:', el);\n    console.log(el.nativeElement);\n    console.log('BoundingRect:', elementBoundingRect);\n    console.log('Height:', elementHeight);\n\n    return {\n        component: component,\n        positionStrategy: {\n            name: StickyPositionStrategy.coordinate,\n            options: {\n                clientX: elementBoundingRect.x,\n                clientY: elementBoundingRect.y + elementHeight + window.scrollY\n            }\n        },\n        componentFactoryResolver: resolver,\n        closeOnEscape: true\n    };\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {WALL_FILE_UPLOADER} from '../../../modules/file-uploader/file-uploader.token';\nimport {IWallFileUploader, IWallFileUploaderResult} from '../../../modules/file-uploader/file-uploader.types';\nimport {IResizeData} from '../../../modules/resizable/resizable.directive';\nimport {Base64ToFile} from '../../../modules/utils/base64-to-file';\nimport {Guid} from '../../../modules/utils/guid';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {ImgBrickState, ImgBrickStateMetadata} from '../img-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\nimport {IOnWallFocus} from '../../../wall/components/wall/interfaces/wall-component/on-wall-focus.interface';\nimport {getModalConfig} from '../../base-brick/base-brick.component';\n\n@Component({\n    selector: 'img-brick',\n    templateUrl: './img-brick.component.html',\n    styleUrls: ['./img-brick.component.scss']\n})\nexport class ImgBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: ImgBrickState;\n\n    @Output() stateChanges: EventEmitter<ImgBrickState> = new EventEmitter();\n\n    @ViewChild('image') image: ElementRef;\n\n    scope: ImgBrickState = {\n        src: '',\n        metadata: null,\n        width: null\n    };\n\n    isSrcBase64 = false;\n\n    lastWidth: number;\n\n    imageSrcPlaceholderRef: StickyModalRef;\n\n    resizable = {\n        resize: this.onResize.bind(this),\n        resizeStart: this.onResizeStart.bind(this),\n        resizeEnd: this.onResizeEnd.bind(this)\n    };\n\n    constructor(private renderer: Renderer2,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService,\n                @Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader,\n                private el: ElementRef) {\n\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ImgBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        if (this.scope.src) {\n            this.isSrcBase64 = this.isBase64(this.scope.src);\n\n            if (!this.scope.width) {\n                this.setUpImageWidth();\n            }\n\n            if (this.isSrcBase64) {\n                this.processBase64ImgSrc();\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    // resize callbacks\n    onResize(resizeData: IResizeData) {\n        this.scope.width = this.lastWidth + resizeData.offset;\n    }\n\n    onResizeStart() {\n        this.lastWidth = this.scope.width;\n    }\n\n    onResizeEnd() {\n        this.save();\n    }\n\n    applyImageSrc(imageSrc: string, metadata?: ImgBrickStateMetadata): Promise<any> {\n        return this.isImage(imageSrc)\n            .then(() => {\n                this.scope.src = imageSrc;\n                this.isSrcBase64 = false;\n\n                if (metadata) {\n                    this.scope.metadata = metadata;\n                }\n\n                this.save();\n\n                return this.setUpImageWidth();\n            })\n            .catch(() => {\n                alert('Please enter valid url');\n            });\n    }\n\n    applyImageFile(imgFile: File): Promise<void> {\n        return (new ImgEncoder(imgFile)).getBase64Representation().then((imgBase64) => {\n            return this.applyImageSrc(imgBase64).then(() => {\n                return this.processBase64ImgSrc();\n            });\n        });\n    }\n\n    processBase64ImgSrc(): Promise<void> {\n        return this.uploadImage().then((uploadInfo) => {\n            return this.applyImageSrc(uploadInfo.downloadURL, {\n                path: uploadInfo.path\n            });\n        }, () => {\n        });\n    }\n\n    async showPanel() {\n        if (!this.imageSrcPlaceholderRef) {\n            const modalConfig = getModalConfig(this.el, this.componentFactoryResolver, InputContextComponent);\n            this.imageSrcPlaceholderRef = this.ngxStickyModalService.open(modalConfig);\n            this.imageSrcPlaceholderRef.result.then((result) => {\n                this.imageSrcPlaceholderRef = null;\n\n                if (result.src) {\n                    this.applyImageSrc(result.src);\n                } else {\n                    this.applyImageFile(result.file);\n                }\n            }, () => {\n                this.imageSrcPlaceholderRef = null;\n            });\n        }\n    }\n\n    isBase64(str: string) {\n        str = str.replace(/^data:image\\/(png|jpg|jpeg);base64,/, '');\n\n        try {\n            return btoa(atob(str)) === str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    private uploadImage(): Promise<IWallFileUploaderResult> {\n        if (!this.wallFileUploader.canUploadFile()) {\n            return Promise.reject();\n        }\n\n        const fileName = (new Guid()).get();\n        const imgFile = (new Base64ToFile(this.scope.src, fileName)).getFile();\n\n        return this.wallFileUploader.upload(this.id, imgFile);\n    }\n\n    private setUpImageWidth(): Promise<void> {\n        return this.loadImage(this.scope.src).then(() => {\n            this.scope.width = this.image.nativeElement.width;\n\n            this.save();\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private loadImage(src: string) {\n        return this.isImage(src);\n    }\n\n    private isImage(src): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n\n            img.onload = () => {\n                resolve();\n            };\n\n            img.onerror = () => {\n                reject();\n            };\n\n            img.src = src;\n        });\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {IWallFileUploader, WALL_FILE_UPLOADER} from '../../modules/file-uploader/file-uploader';\nimport {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\n@Injectable()\nexport class ImgModel {\n    constructor(@Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader) {\n    }\n\n    remove(brickSnapshot: IBrickSnapshot): Promise<any> {\n        const state: ImgBrickState = brickSnapshot.state;\n\n        if (state.src && state.metadata && state.metadata.path) {\n            return this.wallFileUploader.remove(state.metadata.path);\n        }\n\n        return Promise.resolve();\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\nexport class ImgBrickTextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `img!${(this.brickSnapshot.state as ImgBrickState).src}`;\n    }\n}\n","import {Component, EventEmitter, HostListener, Input, Output} from '@angular/core';\n\n@Component({\n    template: `<span [ngClass]=\"customClassName\"></span>`\n})\nexport class ResizableHandlerComponent {\n    @Input() customClassName: string;\n    @Output() mouseDownEvent: EventEmitter<MouseEvent> = new EventEmitter();\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        this.mouseDownEvent.emit(event);\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {ComponentFactoryResolver, Directive, Inject, Input, NgZone, OnInit, ViewContainerRef} from '@angular/core';\nimport {ComponentRef} from '@angular/core/src/linker/component_factory';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {LEFT_HANDLER_CLASS, RIGHT_HANDLER_CLASS} from './resizable.const';\n\nexport interface IResizeData {\n    xInitial: number;\n    xCurrent: number;\n\n    offset: number;\n\n    isLeftDirection: boolean;\n    isRightDirection: boolean;\n}\n\n/**\n * @description\n * 1. dynamically add left and right handlers\n * 2. allow to show/hide handlers\n * 3. call callback, where to pass\n *  - distance on which handlers is moved\n *  - handler type (left of right)\n */\n@Directive({\n    selector: '[wResizable]'\n})\nexport class ResizableDirective implements OnInit {\n    @Input() wResizable: {\n        resize: (resizeData: IResizeData) => void;\n        resizeStart: (resizeData: IResizeData) => void;\n        resizeEnd: (resizeData: IResizeData) => void;\n    };\n\n    private resizeData: IResizeData = null;\n\n    constructor(private el: ViewContainerRef,\n                private zone: NgZone,\n                private cfr: ComponentFactoryResolver,\n                @Inject(DOCUMENT) private doc) {\n    }\n\n    ngOnInit() {\n        const leftHandler = this.createHandler(LEFT_HANDLER_CLASS);\n        const rightHandler = this.createHandler(RIGHT_HANDLER_CLASS);\n\n        leftHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, true);\n        });\n\n        rightHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, false);\n        });\n\n        this.doc.addEventListener('mousemove', (event: MouseEvent) => {\n            if (this.resizeData) {\n                this.resizeData.xCurrent = event.clientX;\n\n                if (this.resizeData.isLeftDirection) {\n                    this.resizeData.offset = this.resizeData.xInitial - this.resizeData.xCurrent;\n                } else if (this.resizeData.isRightDirection) {\n                    this.resizeData.offset = this.resizeData.xCurrent - this.resizeData.xInitial;\n                }\n\n                if (this.wResizable.resize) {\n                    this.wResizable.resize(this.resizeData);\n                }\n            }\n        });\n\n        this.doc.addEventListener('mouseup', () => {\n            if (this.wResizable.resizeEnd) {\n                this.wResizable.resizeEnd(this.resizeData);\n            }\n\n            this.resizeData = null;\n        });\n    }\n\n    private createHandler(customClassName: string): ComponentRef<ResizableHandlerComponent> {\n        const handler = this.el.createComponent(\n            this.cfr.resolveComponentFactory(ResizableHandlerComponent)\n        );\n\n        handler.instance.customClassName = customClassName;\n\n        return handler;\n    }\n\n    private mouseDownHandler(e: MouseEvent, isLeftDirection: boolean) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.resizeData = {\n            xInitial: e.clientX,\n            xCurrent: e.clientX,\n            offset: 0,\n            isLeftDirection,\n            isRightDirection: !isLeftDirection\n        };\n\n        if (this.wResizable.resizeStart) {\n            this.wResizable.resizeStart(this.resizeData);\n        }\n    }\n}\n","export const LEFT_HANDLER_CLASS = 'left-handler';\nexport const RIGHT_HANDLER_CLASS = 'right-handler';\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {ResizableDirective} from './resizable.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ResizableDirective],\n    declarations: [ResizableDirective, ResizableHandlerComponent],\n    entryComponents: [ResizableHandlerComponent]\n})\nexport class ResizableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {ImgBrickComponent} from './component/img-brick.component';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {ImgModel} from './img-brick-destructor.class';\nimport {ImgBrickState} from './img-brick-state.interface';\nimport {ImgBrickTextRepresentation} from './img-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {ResizableModule} from '../../modules/resizable/resizable.module';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {IBrickSnapshot} from '../../wall/model/interfaces/brick-snapshot.interface';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HelperComponentsModule,\n        ResizableModule,\n        TowModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [ImgBrickComponent],\n    declarations: [ImgBrickComponent, InputContextComponent],\n    entryComponents: [ImgBrickComponent, InputContextComponent],\n    providers: [\n        ImgModel\n    ]\n})\nexport class ImgBrickModule {\n    constructor(private brickRegistry: BrickRegistry,\n                private imgModel: ImgModel) {\n        this.brickRegistry.register({\n            tag: 'image',\n            component: ImgBrickComponent,\n            textRepresentation: ImgBrickTextRepresentation,\n\n            destructor: (brickSnapshot: IBrickSnapshot): Promise<void> => {\n                return this.imgModel.remove(brickSnapshot);\n            },\n\n            getBrickResourcePaths: (brickSnapshot: IBrickSnapshot) => {\n                const imageState: ImgBrickState = brickSnapshot.state;\n\n                if (imageState.metadata && imageState.metadata.path) {\n                    return [imageState.metadata.path];\n                }\n\n                return [];\n            },\n\n            name: 'Image',\n            description: 'Embed with a link'\n        });\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'quote-brick',\n    templateUrl: './quote-brick.component.html',\n    styleUrls: ['./quote-brick.component.scss']\n})\nexport class QuoteBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Quote';\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrickRegistry} from '../../wall/wall';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {QuoteBrickComponent} from './component/quote-brick.component';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ContenteditableModule\n    ],\n    exports: [QuoteBrickComponent],\n    declarations: [QuoteBrickComponent],\n    entryComponents: [QuoteBrickComponent]\n})\nexport class QuoteBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'quote',\n            component: QuoteBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Quote',\n            description: 'Capture a quote'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n\n    close() {\n        this.ngxStickyModalRef.dismiss();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IOnWallFocus} from '../../../wall/wall';\nimport {IVideoBrickState} from '../video-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\nimport {getModalConfig} from '../../base-brick/base-brick.component';\n\n@Component({\n    selector: 'video-brick',\n    templateUrl: './video-brick.component.html',\n    styleUrls: ['./video-brick.component.scss']\n})\nexport class VideoBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: IVideoBrickState;\n\n    @Output() stateChanges: EventEmitter<IVideoBrickState> = new EventEmitter();\n\n    @ViewChild('iframe') iframe: ElementRef;\n\n    // ui\n    uiStates: any = {\n        initial: 'initial',\n        video: 'video'\n    };\n\n    uiState: string = this.uiStates.initial;\n\n    scope: IVideoBrickState = {\n        src: ''\n    };\n\n    videoSrcPlaceholderRef: StickyModalRef;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        if (this.state && this.state.src !== this.scope.src) {\n            this.scope.src = this.state.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallStateChange(newState: IVideoBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            this.scope.src = newState.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (this.uiState === this.uiStates.initial && !this.videoSrcPlaceholderRef) {\n            setTimeout(() => {\n                this.showVideoPanel();\n            }, 0);\n        }\n    }\n\n    applySrc(src: string) {\n        this.uiState = this.uiStates.initial;\n\n        if (src.length) {\n            const srcArray = src.split('=');\n            const youtubeId = srcArray[1];\n\n            if (youtubeId) {\n                this.scope.src = `https://www.youtube.com/embed/${youtubeId}`;\n\n                this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n\n                this.save();\n\n                this.uiState = this.uiStates.video;\n            }\n        }\n    }\n\n    showVideoPanel() {\n        const modalConfig = getModalConfig(this.el, this.componentFactoryResolver, InputContextComponent);\n        this.videoSrcPlaceholderRef = this.ngxStickyModalService.open(modalConfig);\n\n        this.videoSrcPlaceholderRef.result.then((result) => {\n            this.videoSrcPlaceholderRef = null;\n            this.applySrc(result.src);\n        }, () => {\n            this.videoSrcPlaceholderRef = null;\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IVideoBrickState} from './video-brick-state.interface';\n\nexport class VideoBrickTextRepresentationClass {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `video!${(this.brickSnapshot.state as IVideoBrickState).src}`;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {VideoBrickComponent} from './component/video-brick.component';\nimport {VideoBrickTextRepresentationClass} from './video-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [VideoBrickComponent],\n    declarations: [VideoBrickComponent, InputContextComponent],\n    entryComponents: [VideoBrickComponent, InputContextComponent]\n})\nexport class VideoBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'video',\n            component: VideoBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Video',\n            description: 'Embed from Youtube and more'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n\n    close() {\n        this.ngxStickyModalRef.dismiss();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IWebBookmarkBrickState} from '../web-bookmark-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\nimport {getModalConfig} from '../../base-brick/base-brick.component';\nimport {BricksListComponent} from '../../text-brick/bricks-list/bricks-list.component';\n\n@Component({\n    selector: 'web-bookmark-brick',\n    templateUrl: './web-bookmark-brick.component.html',\n    styleUrls: ['./web-bookmark-brick.component.scss']\n})\nexport class WebBookmarkBrickComponent implements OnInit {\n    @Input() id: string;\n    @Input() state: IWebBookmarkBrickState;\n\n    @Output() stateChanges: EventEmitter<IWebBookmarkBrickState> = new EventEmitter();\n\n    scope: IWebBookmarkBrickState = {\n        src: null,\n        description: null,\n        image: {\n            height: null,\n            width: null,\n            url: null\n        },\n        logo: {\n            height: null,\n            width: null,\n            url: null\n        },\n        title: null,\n        author: null\n    };\n\n    loading = false;\n    modalRef: StickyModalRef;\n\n    constructor(private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n    }\n\n    onWallStateChange(newState: IWebBookmarkBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n        }\n    }\n\n    applySrc(src: string) {\n        if (src.length) {\n            if (this.isValidUrl(src)) {\n                this.loading = true;\n\n                this.getWebPageMetaInfo(src).then((webPageMetaInfo) => {\n                    Object.assign(this.scope, webPageMetaInfo);\n\n                    this.scope.src = src;\n\n                    this.save();\n\n                    this.loading = false;\n                }, () => {\n                    this.loading = false;\n                });\n            } else {\n                alert('Url is invalid');\n            }\n        }\n    }\n\n    showPanel() {\n        if (!this.loading) {\n            const modalConfig = getModalConfig(this.el, this.componentFactoryResolver, InputContextComponent);\n            this.modalRef = this.ngxStickyModalService.open(modalConfig);\n            this.modalRef.result.then(result => {\n                this.modalRef = null;\n                this.applySrc(result.src);\n            }, () => {\n                this.modalRef = null;\n            });\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private getWebPageMetaInfo(url: string): Promise<any> {\n        return fetch(`https://api.microlink.io/?url=${url}`).then((page) => {\n            return page.json().then((pageMetadata) => {\n                const {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                } = pageMetadata.data;\n\n                return {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                };\n            });\n        });\n    }\n\n    private isValidUrl(src: string): boolean {\n        let url;\n\n        try {\n            url = new URL(src);\n        } catch (e) {\n        }\n\n        return Boolean(url);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {VideoBrickTextRepresentationClass} from '../video-brick/video-brick-text-representation.class';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {WebBookmarkBrickComponent} from './component/web-bookmark-brick.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        TowModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [\n        WebBookmarkBrickComponent\n    ],\n    declarations: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    entryComponents: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    providers: []\n})\nexport class WebBookmarkBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'webbookmark',\n            component: WebBookmarkBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Web Bookmark',\n            description: 'Save a link as a visual bookmark'\n        });\n    }\n}\n","export const SUPPORTED_MODES = [\n    {\n        value: 'javascript',\n        name: 'Javascript'\n    },\n    {\n        value: 'shell',\n        name: 'Shell'\n    },\n    {\n        value: 'xml',\n        name: 'XML'\n    }\n];\n\nexport const DEFAULT_THEME = 'neo';\n","import {Component, Inject} from '@angular/core';\nimport {STICKY_MODAL_DATA, StickyModalRef} from 'ngx-sticky-modal';\n\nexport interface IModeListComponentConfig {\n    modes: { value: string, name: string }[];\n}\n\n@Component({\n    selector: 'w-mode-list-component',\n    templateUrl: './mode-list.component.html'\n})\nexport class ModeListComponent {\n    constructor(@Inject(STICKY_MODAL_DATA) public config: IModeListComponentConfig,\n                private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    onSelected(mode: string) {\n        this.ngxStickyModalRef.close(mode);\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/shell/shell';\nimport 'codemirror/mode/xml/xml';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {DEFAULT_THEME, SUPPORTED_MODES} from '../code-brick.constant';\nimport {ModeListComponent} from '../mode-list/mode-list.component';\n\nexport interface ICodeBrickState {\n    code: string;\n    mode: string;\n}\n\n@Component({\n    selector: 'code-brick',\n    templateUrl: './code-brick.component.html',\n    styleUrls: ['./code-brick.component.scss']\n})\nexport class CodeBrickComponent implements OnInit {\n    scope: ICodeBrickState = {\n        code: '',\n        mode: SUPPORTED_MODES[0].value\n    };\n\n    ui: {\n        displayModeName: string;\n    } = {\n        displayModeName: SUPPORTED_MODES[0].name\n    };\n\n    codeMirrorInstance: any;\n\n    @Input() id: string;\n    @Input() state: ICodeBrickState;\n    @ViewChild('container', {read: ElementRef}) container: ElementRef;\n    @ViewChild('mode', {read: ElementRef}) mode: ElementRef;\n\n    @Output() stateChanges: EventEmitter<ICodeBrickState> = new EventEmitter();\n\n    constructor(private ngxStickyModalService: StickyModalService,\n                private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.codeMirrorInstance = CodeMirror(this.container.nativeElement, {\n            value: ``,\n            mode: this.scope.mode,\n            theme: DEFAULT_THEME,\n            dragDrop: false,\n            scrollbarStyle: null\n        });\n\n        this.codeMirrorInstance.on('change', () => {\n            this.scope.code = this.codeMirrorInstance.getValue();\n\n            this.saveState();\n        });\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ICodeBrickState) {\n        if (newState && newState.code !== this.scope.code) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        this.codeMirrorInstance.setValue(this.scope.code);\n\n        if (this.scope.mode !== this.codeMirrorInstance.getMode().name) {\n            this.codeMirrorInstance.setOption('mode', this.scope.mode);\n        }\n\n        this.ui.displayModeName = SUPPORTED_MODES.find((mode) => mode.value === this.scope.mode).name;\n    }\n\n    saveState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    onModeSelected() {\n        const elementBoundingRect = this.mode.nativeElement.getBoundingClientRect();\n\n        const modes: any[] = SUPPORTED_MODES.map((mode) => {\n            return {\n                ...mode,\n                selected: mode.value === this.scope.mode\n            };\n        });\n\n        this.ngxStickyModalService.open({\n            component: ModeListComponent,\n            data: {modes},\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.x,\n                    clientY: elementBoundingRect.y + 35\n                }\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        }).result.then((mode: any) => {\n            Object.assign(this.scope, {\n                ...this.state,\n                mode: mode.value\n            });\n\n            this.processNewState();\n        }, () => {\n            // nothing\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {CodeBrickComponent} from './component/code-brick.component';\nimport {ModeListComponent} from './mode-list/mode-list.component';\nimport {MatButtonModule, MatListModule} from '@angular/material';\nimport {CommonModule} from '@angular/common';\nimport {WallModule} from '../../wall/wall.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        WallModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatListModule\n    ],\n    declarations: [\n        CodeBrickComponent,\n        ModeListComponent\n    ],\n    entryComponents: [\n        CodeBrickComponent,\n        ModeListComponent\n    ]\n})\nexport class CodeBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'code',\n            component: CodeBrickComponent,\n            name: 'Code',\n            description: 'Capture a code snippet'\n        });\n    }\n}\n","import {ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {BrickRegistry, IBrickDefinition, IBrickSpecification} from '../../../wall/wall';\nimport {TEXT_BRICK_TAG} from '../text-brick.constant';\n\nexport interface IBricksListComponentConfig {\n    text$: Observable<string>;\n    up$: Observable<any>;\n    down$: Observable<any>;\n    enter$: Observable<any>;\n    selectedTag$: Subject<string>;\n}\n\n@Component({\n    selector: 'w-bricks-list',\n    templateUrl: './bricks-list.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BricksListComponent implements OnInit, OnDestroy {\n    selectedTag$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n    bricksList$: BehaviorSubject<IBrickSpecification[]> = new BehaviorSubject([]);\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private brickRegistry: BrickRegistry,\n                @Inject(STICKY_MODAL_DATA) public config: IBricksListComponentConfig) {\n        this.updateBricksList('');\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.config.text$.subscribe((filterText) => {\n                this.updateBricksList(filterText.slice(1));\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.up$.subscribe(() => {\n                this.onNavigationUpDownHandler(true);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.down$.subscribe(() => {\n                this.onNavigationUpDownHandler(false);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.enter$.subscribe(() => {\n                this.notifySelectedTag();\n            })\n        );\n    }\n\n    onBrickSelected(brickDescription: IBrickDefinition) {\n        this.selectedTag$.next(brickDescription.tag);\n\n        this.notifySelectedTag();\n    }\n\n    trackByFn(index, item) {\n        return item.tag;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    private notifySelectedTag() {\n        this.config.selectedTag$.next(this.selectedTag$.getValue());\n    }\n\n    private updateBricksList(filterText: string) {\n        const brickDescriptors = this.brickRegistry.getAll()\n            .filter((brickDescriptor) => {\n                if (brickDescriptor.tag === TEXT_BRICK_TAG) {\n                    return false;\n                } else {\n                    return brickDescriptor.tag.includes(filterText);\n                }\n            }).sort((a, b) => {\n                if (a.tag.startsWith(filterText)) {\n                    return -1;\n                } else if (b.tag.startsWith(filterText)) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n        if (brickDescriptors.length) {\n            this.selectedTag$.next(brickDescriptors[0].tag);\n        } else {\n            this.selectedTag$.next(null);\n        }\n\n        this.bricksList$.next(brickDescriptors);\n    }\n\n    private onNavigationUpDownHandler(isUp: boolean): void {\n        const currentSelectedTag = this.selectedTag$.getValue();\n        const currentBrickList = this.bricksList$.getValue();\n\n        if (currentSelectedTag && currentBrickList.length > 1) {\n            const currentSelectedBrickIndex = currentBrickList.findIndex((brickDescriptor) => {\n                return brickDescriptor.tag === currentSelectedTag;\n            });\n\n            let nextSelectedBrick;\n\n            if (isUp) {\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex - 1];\n\n                if (!nextSelectedBrick) {\n                    // take last brick\n                    nextSelectedBrick = currentBrickList[currentBrickList.length - 1];\n                }\n            } else {\n                // is bottom\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex + 1];\n\n                if (!nextSelectedBrick) {\n                    // take first brick\n                    nextSelectedBrick = currentBrickList[0];\n                }\n            }\n\n            this.selectedTag$.next(nextSelectedBrick.tag);\n\n            // wait until component re-renders\n            setTimeout(() => {\n                document.getElementsByClassName('w-bricks-list__selected')[0].scrollIntoView();\n            });\n        }\n    }\n}\n","export const TEXT_BRICK_TAG = 'text';\n","export class NodeTreeSplit {\n    leftTree: HTMLElement;\n    rightTree: HTMLElement;\n\n    constructor(private root: HTMLElement,\n                private targetElement: Node, // text node\n                private offset: number) {\n        if (root === targetElement) {\n            // edge case scenario, just return root node itself\n            this.leftTree = root as HTMLElement;\n            this.rightTree = root as HTMLElement;\n        } else {\n            // get direct parent of target node\n            let parent = targetElement.parentNode;\n\n            // create left and right trees which will be returned as result\n            let rightTree = parent.cloneNode(false);\n            let leftTree = parent.cloneNode(false);\n\n            // Build Right tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            rightTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all next siblings of target node to the right tree\n            this.appendNextSiblingsToNode(rightTree, targetElement);\n\n            // Build Left tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            leftTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(0, offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all previous siblings of target node to the left tree\n            this.prependPreviousSiblingsToNode(leftTree, targetElement);\n\n            if (root === parent) {\n                // we already fully build left and right trees\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            } else {\n                // recursively build left and right trees\n                // climbing from parent node to the root node\n                let leftParentTree;\n                let rightParentTree;\n                let grandparent = parent.parentNode;\n\n                while (root.contains(grandparent) || grandparent === root) {\n                    rightParentTree = grandparent.cloneNode(false);\n                    leftParentTree = grandparent.cloneNode(false);\n\n                    // Process Left tree\n                    this.prependPreviousSiblingsToNode(leftParentTree, parent);\n\n                    leftParentTree.appendChild(leftTree);\n                    leftTree = leftParentTree;\n\n                    // Process Right tree\n                    this.appendNextSiblingsToNode(rightParentTree, parent);\n\n                    rightParentTree.prepend(rightTree);\n                    rightTree = rightParentTree;\n\n                    parent = grandparent;\n                    grandparent = grandparent.parentNode;\n                }\n\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            }\n        }\n    }\n\n    private prependPreviousSiblingsToNode(leftTree, targetNode: Node): void {\n        let previousSibling = targetNode.previousSibling;\n\n        while (previousSibling) {\n            leftTree.prepend(previousSibling.cloneNode(true));\n\n            previousSibling = previousSibling.previousSibling;\n        }\n    }\n\n    private appendNextSiblingsToNode(rightTree, targetElement: Node): void {\n        let nextSibling = targetElement.nextSibling;\n\n        while (nextSibling) {\n            rightTree.appendChild(nextSibling.cloneNode(true));\n\n            nextSibling = nextSibling.nextSibling;\n        }\n    }\n}\n","export class TreeNodeTraverse {\n    constructor(private root: HTMLElement) {\n    }\n\n    traversePostOrder(fn: (node: Node) => void) {\n        this._traversePostOrder(this.root, fn);\n    }\n\n    traversePreOrder(fn: (node: Node) => void) {\n        this._traversePreOrder(this.root, fn);\n    }\n\n    traversePostPreOrder(fn: (node: Node) => void) {\n        this._traversePostPreOrder(this.root, fn);\n    }\n\n    getPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostPreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    private _traversePostOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n\n    private _traversePreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePreOrder(childNode, fn);\n            }\n        });\n    }\n\n    private _traversePostPreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostPreOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n}\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {ITextBrickApi} from '../text-brick-api.interface';\n\nexport interface ITextContextMenuComponent {\n    api: ITextBrickApi;\n}\n\n@Component({\n    selector: 'w-text-context-menu',\n    templateUrl: './text-context-menu.component.html'\n})\nexport class TextContextMenuComponent implements OnInit {\n    @ViewChild('linkEl') linkEl: ElementRef;\n\n    ui = {\n        showLinkForm: false\n    };\n\n    constructor(@Inject(STICKY_MODAL_DATA) public config: ITextContextMenuComponent) {\n\n    }\n\n    ngOnInit() {\n        this.config.api.saveSelection();\n    }\n\n    bold() {\n        this.config.api.bold();\n    }\n\n    italic() {\n        this.config.api.italic();\n    }\n\n    link() {\n        this.switchLinkFormVisibility();\n\n        if (this.ui.showLinkForm) {\n            this.config.api.saveSelection();\n\n            setTimeout(() => {\n                if (this.config.api.isLinkSelected()) {\n                    this.linkEl.nativeElement.value = this.config.api.getSelectedLinkHref();\n                }\n\n                this.linkEl.nativeElement.focus();\n            });\n        } else {\n            this.config.api.restoreSelection();\n        }\n    }\n\n    applyLink() {\n        this.config.api.restoreSelection();\n\n        if (this.config.api.isLinkSelected()) {\n            this.config.api.changeLinkUrl(this.linkEl.nativeElement.value);\n        } else {\n            this.config.api.createLink(this.linkEl.nativeElement.value);\n        }\n\n        this.switchLinkFormVisibility();\n    }\n\n    unlink() {\n        this.config.api.restoreSelection();\n\n        this.config.api.unlink();\n\n        this.switchLinkFormVisibility();\n    }\n\n    switchLinkFormVisibility() {\n        this.ui.showLinkForm = !this.ui.showLinkForm;\n    }\n}\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {debounceTime, filter} from 'rxjs/operators';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {NodeTreeSplit} from '../../../modules/utils/node-tree-split';\nimport {TreeNodeTraverse} from '../../../modules/utils/node/tree-node-traverse';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\nimport {BricksListComponent} from '../bricks-list/bricks-list.component';\nimport {ITextBrickApi} from '../text-brick-api.interface';\nimport {TextContextMenuComponent} from '../text-context-menu/text-context-menu.component';\nimport {IWallModel} from '../../../wall/model/interfaces/wall-model.interface';\nimport {DIVIDER_BRICK_TAG} from '../../divider-brick/divider-brick.constant';\nimport {getModalConfig} from '../../base-brick/base-brick.component';\n\n@Component({\n    selector: 'text-brick',\n    templateUrl: './text-brick.component.html',\n    styleUrls: ['./text-brick.component.scss']\n})\nexport class TextBrickComponent extends BaseTextBrickComponent implements OnInit, OnDestroy, ITextBrickApi {\n    @Input() wallModel: IWallModel;\n\n    placeholder = null;\n\n    brickSelectionModalRef: StickyModalRef;\n    contextMenuModalRef: StickyModalRef;\n\n    up$ = new Subject();\n    down$ = new Subject();\n    enter$ = new Subject();\n    selectedTag$: Subject<string> = new Subject();\n\n    subscriptions: Subscription[] = [];\n\n    selectionInfo: {\n        ranges: Range[],\n        selectedLink: HTMLElement\n    };\n\n    api: ITextBrickApi = {\n        bold: this.bold.bind(this),\n        italic: this.italic.bind(this),\n        createLink: this.createLink.bind(this),\n        changeLinkUrl: this.changeLinkUrl.bind(this),\n        isLinkSelected: this.isLinkSelected.bind(this),\n        getSelectedLinkHref: this.getSelectedLinkHref.bind(this),\n        saveSelection: this.saveSelection.bind(this),\n        restoreSelection: this.restoreSelection.bind(this),\n        unlink: this.unlink.bind(this)\n    };\n\n    constructor(private zone: NgZone,\n                private ngxStickyModalService: StickyModalService,\n                private cd: ChangeDetectorRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private el: ElementRef) {\n        super();\n\n        this.selectedTag$.subscribe((newTag) => {\n            if (newTag) {\n                this.hideBricksList();\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                if (newTag === DIVIDER_BRICK_TAG) {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            }\n        });\n\n        this.subscriptions.push(\n            // show sub-menu for selected text\n            fromEvent(this.el.nativeElement, 'mouseup')\n                .pipe(\n                    filter(() => Boolean(this.scope.text.length)),\n                    debounceTime(500),\n                    filter(() => this.el.nativeElement.contains(window.getSelection().anchorNode))\n                )\n                .subscribe((e: any) => {\n                    this.onTextSelection();\n                })\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    onBlur() {\n        this.placeholder = null;\n    }\n\n    onFocus() {\n        this.placeholder = 'Type \\'/\\' for commands';\n    }\n\n    onKeyPress(e: KeyboardEvent) {\n        super.onKeyPress(e);\n\n        this.hideContextMenuModal();\n    }\n\n    // open the link in new window\n    onClick(event: MouseEvent) {\n        const target = event.target as Node;\n\n        if (this.isHTMLElement(target)) {\n            if (target.tagName === 'A') {\n                window.open(target.getAttribute('href'), '_blank');\n            }\n        }\n    }\n\n    topKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.up$.next();\n        } else {\n            super.topKeyPressed(e);\n        }\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.down$.next();\n        } else {\n            super.bottomKeyPressed(e);\n        }\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            this.enter$.next();\n\n            setTimeout(() => {\n                this.hideBricksList();\n            }, 10);\n        } else {\n            if (this.isTag()) {\n                const newTag = this.scope.text.slice(1);\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                // d - divider tag\n                if (newTag === 'd') {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            } else {\n                super.enterKeyPressed(e);\n            }\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        const nodeTreeSplit = new NodeTreeSplit(this.editor.nativeElement, target, offset);\n\n        return {\n            left: nodeTreeSplit.leftTree.innerHTML,\n            right: nodeTreeSplit.rightTree.innerHTML\n        };\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.hideBricksList();\n        }\n    }\n\n    onTextChange() {\n        super.onTextChange();\n\n        if (this.brickSelectionModalRef) {\n            if (!this.scope.text.length) {\n                this.hideBricksList();\n            }\n        } else if (this.scope.text[0] === '/' && this.scope.text.length === 1) {\n            this.openBricksListModal();\n        }\n    }\n\n    openBricksListModal() {\n        this.editor.nativeElement.blur();\n\n        const modalConfig = getModalConfig(this.el, this.componentFactoryResolver, BricksListComponent);\n        modalConfig.data = {\n            text$: this.textChange,\n            up$: this.up$,\n            down$: this.down$,\n            enter$: this.enter$,\n            selectedTag$: this.selectedTag$\n        };\n        this.brickSelectionModalRef = this.ngxStickyModalService.open(modalConfig);\n\n        setTimeout(() => {\n            this.editor.nativeElement.focus();\n        });\n    }\n\n    onPaste(e: ClipboardEvent) {\n        const imageDataTransferItem = this.extractImageDataTransferItem(e.clipboardData.items);\n\n        if (imageDataTransferItem) {\n            e.preventDefault();\n\n            (new ImgEncoder(imageDataTransferItem.getAsFile())).getBase64Representation().then((imgBase64) => {\n                this.wallModel.api.core.turnBrickInto(this.id, 'image', {\n                    src: imgBase64\n                });\n            });\n        } else {\n            super.onPaste(e);\n        }\n    }\n\n    onTextSelection() {\n        if (!this.contextMenuModalRef) {\n            const selection = window.getSelection();\n\n            if (!selection.isCollapsed) {\n                this.showContextModal();\n            }\n        }\n    }\n\n    // API\n    bold(): void {\n        document.execCommand('bold', false);\n    }\n\n    italic(): void {\n        document.execCommand('italic', false);\n    }\n\n    createLink(url: string): void {\n        document.execCommand('createLink', false, url);\n    }\n\n    getSelectedLinkHref(): string {\n        if (this.selectionInfo.selectedLink) {\n            return this.selectionInfo.selectedLink.getAttribute('href');\n        }\n    }\n\n    unlink(): void {\n        document.execCommand('unlink', false);\n    }\n\n    changeLinkUrl(url: string): void {\n        if (this.selectionInfo.selectedLink) {\n            this.selectionInfo.selectedLink.setAttribute('href', url);\n\n            this.triggerEditorChange();\n        }\n    }\n\n    isLinkSelected(): boolean {\n        return Boolean(this.selectionInfo && this.selectionInfo.selectedLink);\n    }\n\n    saveSelection() {\n        this.selectionInfo = {\n            selectedLink: this.getSelectedLink(),\n            ranges: this.getSelectedRanges()\n        };\n    }\n\n    restoreSelection() {\n        const sel = window.getSelection();\n\n        sel.removeAllRanges();\n\n        for (let i = 0, len = this.selectionInfo.ranges.length; i < len; ++i) {\n            sel.addRange(this.selectionInfo.ranges[i]);\n        }\n    }\n\n    // end API\n\n    private getSelectedLink(): HTMLElement {\n        const selection = window.getSelection();\n\n        let anchorNodeLink;\n        let focusNodeLink;\n\n        const isAnchorNodeBelongToBrick = this.el.nativeElement.contains(selection.anchorNode);\n        const isFocusNodeBelongToBrick = this.el.nativeElement.contains(selection.focusNode);\n\n        if (isAnchorNodeBelongToBrick) {\n            anchorNodeLink = this.findParentLink(selection.anchorNode);\n        }\n\n        if (isFocusNodeBelongToBrick) {\n            focusNodeLink = this.findParentLink(selection.focusNode);\n        }\n\n        if (anchorNodeLink) {\n            return anchorNodeLink;\n        } else if (focusNodeLink) {\n            return focusNodeLink;\n        } else if (selection.anchorNode !== selection.focusNode &&\n            isFocusNodeBelongToBrick && isAnchorNodeBelongToBrick) {\n            return this.findLinkBetweenNodes(selection.anchorNode, selection.focusNode);\n        }\n    }\n\n    private triggerEditorChange() {\n        this.editor.nativeElement.dispatchEvent(new Event('input'));\n    }\n\n    private showContextModal() {\n        this.editor.nativeElement.blur();\n\n        const sel = window.getSelection();\n\n        const elementBoundingRect = sel.getRangeAt(0).getBoundingClientRect();\n\n        this.contextMenuModalRef = this.ngxStickyModalService.open({\n            component: TextContextMenuComponent,\n            data: {\n                api: this.api\n            },\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.left + ((elementBoundingRect.right - elementBoundingRect.left) / 2.5),\n                    clientY: elementBoundingRect.top - 35\n                }\n            },\n            overlayConfig: {\n                hasBackdrop: false\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.contextMenuModalRef.result.then(() => {\n            this.hideContextMenuModal();\n        }, () => {\n            this.hideContextMenuModal();\n        });\n\n        setTimeout(() => {\n            this.editor.nativeElement.focus();\n        });\n    }\n\n    // todo: might be as util method\n    private getSelectedRanges(): Range[] {\n        const sel = window.getSelection();\n        const ranges = [];\n\n        for (let i = 0, len = sel.rangeCount; i < len; ++i) {\n            ranges.push(sel.getRangeAt(i));\n        }\n\n        return ranges;\n    }\n\n    private extractImageDataTransferItem(items: DataTransferItemList): DataTransferItem {\n        let index;\n\n        for (index in items) {\n            if (items.hasOwnProperty(index)) {\n                const item = items[index];\n\n                if (item.kind === 'file') {\n                    return item;\n                }\n            }\n        }\n    }\n\n    private isTag() {\n        return this.scope.text && this.scope.text[0] === '/' &&\n            this.wallModel.api.core.isRegisteredBrick(this.scope.text.slice(1));\n    }\n\n    private hideBricksList() {\n        if (this.brickSelectionModalRef) {\n            this.brickSelectionModalRef.close();\n\n            this.brickSelectionModalRef = null;\n        }\n    }\n\n    private hideContextMenuModal() {\n        if (this.contextMenuModalRef) {\n            this.contextMenuModalRef.close();\n\n            this.contextMenuModalRef = null;\n        }\n    }\n\n    private findParentLink(node: Node): HTMLElement {\n        let currentNode: Node = node;\n        let linkNode = null;\n\n        while (!linkNode && currentNode !== this.el.nativeElement) {\n            if ((currentNode as HTMLElement).tagName === 'A') {\n                linkNode = currentNode;\n            }\n\n            currentNode = currentNode.parentElement;\n        }\n\n        return linkNode;\n    }\n\n    private findLinkBetweenNodes(nodeA: Node, nodeB: Node): HTMLElement {\n        const treeNodeTraverse = new TreeNodeTraverse(this.editor.nativeElement);\n\n        const orderedNodes = treeNodeTraverse.getPostPreOrderNodes();\n\n        let nodeAIndex = orderedNodes.indexOf(nodeA);\n        let nodeBIndex = orderedNodes.indexOf(nodeB);\n\n        if (nodeBIndex < nodeAIndex) {\n            const temp = nodeBIndex;\n\n            nodeBIndex = nodeAIndex;\n            nodeAIndex = temp;\n        }\n\n        const orderedNodesBetweenNodes = orderedNodes.slice(nodeAIndex, nodeBIndex);\n\n        const linkNodes = orderedNodesBetweenNodes.filter((node) => {\n            if (this.isHTMLElement(node)) {\n                return node.tagName === 'A';\n            }\n        });\n\n        return linkNodes[0] as HTMLElement;\n    }\n\n    private isHTMLElement(node: Node | HTMLElement): node is HTMLElement {\n        return (node as HTMLElement).querySelector !== undefined;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {BricksListComponent} from './bricks-list/bricks-list.component';\nimport {TextBrickComponent} from './component/text-brick.component';\nimport {TextContextMenuComponent} from './text-context-menu/text-context-menu.component';\nimport {MatButtonModule, MatFormFieldModule, MatIconModule, MatInputModule, MatListModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatListModule,\n        MatIconModule\n    ],\n    exports: [\n        TextBrickComponent,\n        BricksListComponent,\n        TextContextMenuComponent\n    ],\n    declarations: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ],\n    entryComponents: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ]\n})\nexport class TextBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'text',\n            component: TextBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Text',\n            description: 'Just start writing with plain text'\n        });\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToTopLeftPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToLeftCenterPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","export const WALL = {\n    MODES: {\n        EDIT: 'edit',\n        READ: 'READ'\n    }\n};\n"]}