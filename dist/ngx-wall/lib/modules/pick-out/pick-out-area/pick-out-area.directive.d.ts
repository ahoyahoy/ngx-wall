import { ApplicationRef, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, NgZone, OnDestroy, OnInit } from '@angular/core';
import { PickOutCoordinator } from '../pick-out-coordinator.service';
import { IPickOutAreaConfig } from './pick-out-area-config.interface';
import { PickOutAreaComponent } from './pick-out-area.component';
import { PickOutAreaModel } from './pick-out-area.model';
export declare class PickOutAreaDirective implements OnInit, OnDestroy {
    private pickOutCoordinator;
    private componentFactoryResolver;
    private appRef;
    private zone;
    private el;
    private injector;
    config: IPickOutAreaConfig;
    doc: any;
    pickOutAreaModel: PickOutAreaModel;
    selectionRangeComponentRef: ComponentRef<PickOutAreaComponent>;
    onMouseUpBound: () => any;
    onMouseMoveBound: (event: MouseEvent) => void;
    onSelectionStartBound: () => any;
    onContainerScrollBound: () => any;
    previousClientX: number;
    previousClientY: number;
    constructor(doc: any, pickOutCoordinator: PickOutCoordinator, componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, zone: NgZone, el: ElementRef, injector: Injector);
    ngOnInit(): void;
    triggerPickOutChanged(): void;
    mouseDown(event: MouseEvent): void;
    onMouseMove(event: any): void;
    onMouseUp(): void;
    onContainerScroll(): void;
    onSelectionStart(e: any): void;
    renderRangeComponent(): void;
    removeRangeComponent(): void;
    onStartPicKOut(): void;
    onStopPickOut(): void;
    ngOnDestroy(): void;
    private clearSelection;
    private findBrickIdByCoordinate;
    private isMouseOverDraggableElement;
}
