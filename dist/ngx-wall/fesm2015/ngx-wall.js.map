{"version":3,"file":"ngx-wall.js","sources":["ng://ngx-wall/lib/modules/utils/guid.ts","ng://ngx-wall/lib/modules/utils/base64-to-file.ts","ng://ngx-wall/lib/modules/utils/img-encoder.service.ts","ng://ngx-wall/lib/wall/model/wall-brick.model.ts","ng://ngx-wall/lib/wall/plugins/core/events/add-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/before-change.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/move-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-brick.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/remove-bricks.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/set-plan.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/turn-brick-into.event.ts","ng://ngx-wall/lib/wall/plugins/core/events/update-brick-state.event.ts","ng://ngx-wall/lib/wall/plugins/core/layout-walker.class.ts","ng://ngx-wall/lib/wall/plugins/core/wall-layout.model.ts","ng://ngx-wall/lib/wall/plugins/core/wall-core.plugin.ts","ng://ngx-wall/lib/wall/model/events/wall-plugin-initialized.event.ts","ng://ngx-wall/lib/wall/model/wall.model.ts","ng://ngx-wall/lib/wall/registry/brick-registry.service.ts","ng://ngx-wall/lib/wall/factory/wall-model.factory.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/component/placeholder.component.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.service.ts","ng://ngx-wall/lib/modules/components/placeholder-renderer/placeholder-renderer.module.ts","ng://ngx-wall/lib/wall/components/wall-canvas/wall-canvas.component.ts","ng://ngx-wall/lib/modules/radar/events/location-updated.event.ts","ng://ngx-wall/lib/modules/radar/spot.model.ts","ng://ngx-wall/lib/modules/radar/radar-coordinator.service.ts","ng://ngx-wall/lib/modules/radar/radar.service.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component.ts","ng://ngx-wall/lib/wall/components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component.ts","ng://ngx-wall/lib/wall/components/wall/events/selected-brick.event.ts","ng://ngx-wall/lib/wall/components/wall/wall-view.model.ts","ng://ngx-wall/lib/wall/components/wall/wall.component.ts","ng://ngx-wall/lib/modules/tow/events/start-working.event.ts","ng://ngx-wall/lib/modules/tow/events/stop-working.event.ts","ng://ngx-wall/lib/modules/tow/events/work-in-progress.event.ts","ng://ngx-wall/lib/modules/tow/tow-coordinator.service.ts","ng://ngx-wall/lib/modules/tow/tow-slave/tow-slave.directive.ts","ng://ngx-wall/lib/modules/tow/tow.service.ts","ng://ngx-wall/lib/modules/radar/directive/spot.directive.ts","ng://ngx-wall/lib/modules/radar/radar.module.ts","ng://ngx-wall/lib/modules/tow/tow.module.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.component.ts","ng://ngx-wall/lib/modules/pick-out/events/end-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/pick-out-items.event.ts","ng://ngx-wall/lib/modules/pick-out/events/start-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/events/stop-pick-out.event.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-coordinator.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.constant.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.model.ts","ng://ngx-wall/lib/modules/pick-out/pick-out-area/pick-out-area.directive.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.service.ts","ng://ngx-wall/lib/modules/pick-out/pick-out.module.ts","ng://ngx-wall/lib/wall/wall.module.ts","ng://ngx-wall/lib/modules/helper-components/brick-input-placeholder/brick-input-placeholder.component.ts","ng://ngx-wall/lib/modules/helper-components/loading-wrapper/loading-wrapper.component.ts","ng://ngx-wall/lib/modules/helper-components/helper-components.module.ts","ng://ngx-wall/lib/wall/components/wall/wall.constant.ts","ng://ngx-wall/lib/plugins/copy/copy.plugin.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.constant.ts","ng://ngx-wall/lib/plugins/undo-redo/undo-redo.plugin.ts","ng://ngx-wall/lib/modules/tow/tow.constant.ts","ng://ngx-wall/lib/plugins/selections/selection.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.constant.ts","ng://ngx-wall/lib/bricks/divider-brick/component/divider-brick.component.ts","ng://ngx-wall/lib/bricks/divider-brick/divider-brick.module.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-representation.class.ts","ng://ngx-wall/lib/modules/utils/deep-left-node-child.ts","ng://ngx-wall/lib/modules/utils/deep-right-node-child.ts","ng://ngx-wall/lib/modules/utils/first-sub-string-node.ts","ng://ngx-wall/lib/modules/utils/node/caret-start-end-position.ts","ng://ngx-wall/lib/modules/utils/node/cursor-left-coordinate.ts","ng://ngx-wall/lib/modules/utils/node/cursor-position-in-line.ts","ng://ngx-wall/lib/modules/utils/node/place-caret-to-position.ts","ng://ngx-wall/lib/modules/utils/node/string-without-empty-nodes.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.constant.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/bottom-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/enter-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/left-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/right-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/keypress-handlers/top-key.handler.ts","ng://ngx-wall/lib/bricks/base-text-brick/base-text-brick.component.ts","ng://ngx-wall/lib/bricks/header-brick/component/header-brick.component.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.directive.ts","ng://ngx-wall/lib/modules/contenteditable/contenteditable.module.ts","ng://ngx-wall/lib/bricks/header-brick/header-brick.module.ts","ng://ngx-wall/lib/modules/file-uploader/file-uploader.token.ts","ng://ngx-wall/lib/bricks/img-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/img-brick/component/img-brick.component.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-destructor.class.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick-text-representation.class.ts","ng://ngx-wall/lib/modules/resizable/resizable-handler.component.ts","ng://ngx-wall/lib/modules/resizable/resizable.const.ts","ng://ngx-wall/lib/modules/resizable/resizable.directive.ts","ng://ngx-wall/lib/modules/resizable/resizable.module.ts","ng://ngx-wall/lib/bricks/img-brick/img-brick.module.ts","ng://ngx-wall/lib/bricks/quote-brick/component/quote-brick.component.ts","ng://ngx-wall/lib/bricks/quote-brick/quote-brick.module.ts","ng://ngx-wall/lib/bricks/video-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/video-brick/component/video-brick.component.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick-text-representation.class.ts","ng://ngx-wall/lib/bricks/video-brick/video-brick.module.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/input-context/input-context.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/component/web-bookmark-brick.component.ts","ng://ngx-wall/lib/bricks/web-bookmark-brick/web-bookmark-brick.module.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.constant.ts","ng://ngx-wall/lib/bricks/code-brick/mode-list/mode-list.component.ts","ng://ngx-wall/lib/bricks/code-brick/component/code-brick.component.ts","ng://ngx-wall/lib/bricks/code-brick/code-brick.module.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.constant.ts","ng://ngx-wall/lib/bricks/text-brick/bricks-list/bricks-list.component.ts","ng://ngx-wall/lib/modules/utils/node-tree-split.ts","ng://ngx-wall/lib/modules/utils/node/tree-node-traverse.ts","ng://ngx-wall/lib/bricks/text-brick/text-context-menu/text-context-menu.component.ts","ng://ngx-wall/lib/bricks/text-brick/component/text-brick.component.ts","ng://ngx-wall/lib/bricks/text-brick/text-brick.module.ts","ng://ngx-wall/lib/modules/radar/events/location-to-top-left-point.event.ts","ng://ngx-wall/lib/modules/radar/events/location-to-left-center-point.event.ts"],"sourcesContent":["export class Guid {\n    get() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n}\n","export class Base64ToFile {\n    constructor(private base64: string, private fileName: string) {\n    }\n\n    getFile(): File {\n        const arr = this.base64.split(',');\n        const mime = arr[0].match(/:(.*?);/)[1];\n        const bstr = atob(arr[1]);\n        let n = bstr.length;\n        const u8arr = new Uint8Array(n);\n\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        return new File([u8arr], this.fileName, {type: mime});\n    }\n}\n","export class ImgEncoder {\n    constructor(private image: File) {\n    }\n\n    getBase64Representation(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                resolve(event.target.result);\n            };\n\n            reader.onerror = (event: any) => {\n                reject(event);\n            };\n\n            reader.readAsDataURL(this.image);\n        });\n    }\n}\n","import {IBrickSnapshot} from './interfaces/brick-snapshot.interface';\n\nexport class WallBrick {\n    id: string;\n    tag: string;\n    meta: any;\n    state: any = {};\n\n    constructor(id: string, tag: string, meta: any) {\n        this.id = id;\n        this.tag = tag;\n        this.meta = meta;\n    }\n\n    getState(): any {\n        return JSON.parse(JSON.stringify(this.state));\n    }\n\n    updateState(newState) {\n        if (Object.keys(newState).length) {\n            Object.assign(this.state, newState);\n        } else {\n            this.state = {};\n        }\n\n        return this;\n    }\n\n    turnInto(tag: string) {\n        this.tag = tag;\n\n        this.updateState({});\n\n        return this;\n    }\n\n    getSnapshot(): IBrickSnapshot {\n        return {\n            id: this.id,\n            tag: this.tag,\n            meta: this.meta,\n            state: this.getState()\n        };\n    }\n}\n","export class AddBrickEvent {\n    constructor(public brickId: string) {\n    }\n}\n","export class BeforeChangeEvent {\n    constructor(public beforeEventType: any) {\n    }\n}\n","export class MoveBrickEvent {\n    constructor(public movedBrickIds: string[], beforeBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBrickEvent {\n    constructor(public brick: IBrickSnapshot,\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","import {IBrickSnapshot} from '../../../model/interfaces/brick-snapshot.interface';\n\nexport class RemoveBricksEvent {\n    constructor(public bricks: IBrickSnapshot[],\n                public previousBrickId: string,\n                public nextBrickId: string) {\n    }\n}\n","export class SetPlanEvent {\n}\n\n","export class TurnBrickIntoEvent {\n    constructor(public brickId: string,\n                public newTag: string,\n                public oldTag: string) {\n    }\n}\n","export class UpdateBrickStateEvent {\n    constructor(public brickId: string,\n                public brickState: any,\n                public oldBrickState: any) {\n    }\n}\n","import {BrickRegistry} from '../../registry/brick-registry.service';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Execute queries commands over rows\n* */\nexport class LayoutWalker {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // public API\n\n    getRowCount() {\n        return this.rows.length;\n    }\n\n    isBrickAheadOf(firstBrickId: string, secondBrickId: string): boolean {\n        const brickIdsSequence = this.getBrickSequence(() => true).map((brick) => brick.id);\n\n        return brickIdsSequence.indexOf(firstBrickId) < brickIdsSequence.indexOf(secondBrickId);\n    }\n\n    getBrickTag(brickId: string): string {\n        return this.getBrickById(brickId).tag;\n    }\n\n    getBrickById(brickId: string): WallBrick {\n        return this.getBrickSequence((brick: WallBrick) => {\n            return brick.id === brickId;\n        })[0];\n    }\n\n    getBrickIds(): string[] {\n        return this.getBrickSequence(() => true).map((brick) => brick.id);\n    }\n\n    filterBricks(predictor: (brick: IBrickSnapshot) => boolean) {\n        return this.getBrickSequence((wallBrick) => {\n            return predictor(wallBrick.getSnapshot());\n        });\n    }\n\n    getBrickPosition(brickId: string) {\n        const brickPosition = {\n            rowIndex: null,\n            columnIndex: null,\n            brickIndex: null\n        };\n\n        let i = 0;\n\n        while (brickPosition.rowIndex === null && i < this.rows.length) {\n            this.rows[i].columns.forEach((column, columnIndex) => {\n                let brickIndex = null;\n\n                column.bricks.forEach((brick, index) => {\n                    if (brick.id === brickId) {\n                        brickIndex = index;\n                    }\n                });\n\n                if (brickIndex || brickIndex === 0) {\n                    brickPosition.rowIndex = i;\n                    brickPosition.columnIndex = columnIndex;\n                    brickPosition.brickIndex = brickIndex;\n                }\n            });\n\n            i++;\n        }\n\n        return brickPosition;\n    }\n\n    getColumnCount(rowIndex: number): number {\n        return this.rows[rowIndex].columns.length;\n    }\n\n    getBricksCount(): number {\n        return this.getBrickSequence(() => true).length;\n    }\n\n    getNextBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex + 1];\n    }\n\n    getNextBrickId(brickId: string): string {\n        const nextBrick = this.getNextBrick(brickId);\n\n        return nextBrick && nextBrick.id;\n    }\n\n    getPreviousBrick(brickId: string): WallBrick {\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIndex = bricksSequence.findIndex((brick) => {\n            return brick.id === brickId;\n        });\n\n        return bricksSequence[brickIndex - 1];\n    }\n\n    getPreviousBrickId(brickId: string): string {\n        const previousBrick = this.getPreviousBrick(brickId);\n\n        return previousBrick && previousBrick.id;\n    }\n\n    getBrickSequence(predicate): WallBrick[] {\n        const brickSequence = [];\n\n        this.traverse((row: IWallRow) => {\n            row.columns.forEach((column) => {\n                column.bricks.forEach((brick) => {\n                    if (predicate(brick)) {\n                        brickSequence.push(brick);\n                    }\n                });\n            });\n        });\n\n        return brickSequence;\n    }\n\n    getNextTextBrickId(brickId: string): string {\n        const nextTextBrick = this.getNextTextBrick(brickId);\n\n        return nextTextBrick && nextTextBrick.id;\n    }\n\n    getPreviousTextBrickId(brickId: string): string {\n        const previousTextBrick = this.getPreviousTextBrick(brickId);\n\n        return previousTextBrick && previousTextBrick.id;\n    }\n\n    // end public API\n\n    getNextTextBrick(brickId: string): WallBrick {\n        const nextTextBricks = this.findBricksAfter(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return nextTextBricks[0];\n    }\n\n    getPreviousTextBrick(brickId: string): WallBrick {\n        const previousTextBricks = this.findBrickBefore(brickId, (currentBrick: WallBrick) => {\n            return this.brickRegistry.get(currentBrick.tag).supportText;\n        });\n\n        return previousTextBricks[previousTextBricks.length - 1];\n    }\n\n    findBricksAfter(brickId: string, predicate): WallBrick[] {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsAfter = brickIdsSequence.splice(currentBrickIdIndex + 1);\n\n            brickIdsAfter.forEach((brickIdAfter) => {\n                const currentBrick = bricksSequence.find((brick) => {\n                    return brick.id === brickIdAfter;\n                });\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    findBrickBefore(brickId: string, predicate) {\n        const bricks = [];\n\n        const bricksSequence = this.getBrickSequence(() => true);\n\n        const brickIdsSequence = bricksSequence.map((brick) => brick.id);\n\n        const currentBrickIdIndex = brickIdsSequence.indexOf(brickId);\n\n        if (currentBrickIdIndex !== -1) {\n            const brickIdsBefore = brickIdsSequence.splice(0, currentBrickIdIndex);\n\n            brickIdsBefore.forEach((brickIdBefore) => {\n                const currentBrick = bricksSequence.find((brick) => brick.id === brickIdBefore);\n\n                if (predicate(currentBrick)) {\n                    bricks.push(currentBrick);\n                }\n            });\n        }\n\n        return bricks;\n    }\n\n    setLayout(rows: IWallRow[]) {\n        this.rows = rows;\n    }\n\n    traverse(fn: (row: IWallRow) => void) {\n        this.rows.forEach((row) => {\n            fn(row);\n        });\n    }\n}\n","import {Guid} from '../../../modules/utils/utils';\nimport {BrickRegistry} from '../../registry/public_api';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {LayoutWalker} from './layout-walker.class';\n\n/*\n* Modify layout wall rows\n* */\nexport class WallLayout {\n    rows: IWallRow[] = [];\n\n    constructor(private brickRegistry: BrickRegistry, private layoutWalker: LayoutWalker) {\n    }\n\n    // create new row and one column inside\n    addBrickToNewRow(rowIndex: number, brick: WallBrick, rowId?: string) {\n        const totalRowCount = this.rows.length;\n        const lastRowIndex = totalRowCount - 1;\n\n        // user cannot create row in position more than last row index + 1\n        // todo: remove helper checks, lets face the problem earlier\n        if (rowIndex > (lastRowIndex + 1)) {\n            rowIndex = lastRowIndex + 1;\n        }\n\n        this.createNewRow(rowIndex, rowId || this.generateId());\n\n        this.addBrick(rowIndex, 0, 0, brick);\n    }\n\n    // add only in already existing row and column\n    addBrickToExistingColumn(rowIndex: number, columnIndex: number, brickIndex: number, brick: WallBrick) {\n        const column = this.getColumn(rowIndex, columnIndex);\n\n        if (column) {\n            const bricksCount = column.bricks.length;\n\n            // user cannot put brick in position more than total brick count + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (brickIndex > (bricksCount + 1)) {\n                brickIndex = bricksCount + 1;\n            }\n\n            this.addBrick(rowIndex, columnIndex, brickIndex, brick);\n        }\n    }\n\n    // create new column in existing row\n    addBrickToNewColumn(rowIndex, columnIndex, brick: WallBrick) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            const columnCount = row.columns.length;\n\n            // user cannot create column in position more than total column cound + 1\n            // todo: remove helper checks, lets face the problem earlier\n            if (columnIndex > (columnCount + 1)) {\n                columnIndex = columnCount + 1;\n            }\n\n            this.createNewColumn(rowIndex, columnIndex);\n\n            this.addBrick(rowIndex, columnIndex, 0, brick);\n        }\n    }\n\n    moveBrickAfterInNewRow(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            const newRowIndex = afterBrickPosition.rowIndex + 1;\n\n            this.addBrickToNewRow(newRowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickAfterInSameColumn(afterBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n\n            this.addBrickToExistingColumn(\n                afterBrickPosition.rowIndex,\n                afterBrickPosition.columnIndex,\n                afterBrickPosition.brickIndex + index + 1,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInNewRow(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.reverse();\n\n        movedBrickIds.forEach((movedBrickId, index) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            let beforeBrickPosition;\n\n            if (index === 0) {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            } else {\n                beforeBrickPosition = this.layoutWalker.getBrickPosition(movedBrickIds[index - 1]);\n            }\n\n            this.addBrickToNewRow(beforeBrickPosition.rowIndex, currentMovedBrick);\n        });\n    }\n\n    moveBrickBeforeInSameColumn(beforeBrickId: string, movedBrickIds: string[]): void {\n        movedBrickIds.forEach((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n            this.addBrickToExistingColumn(\n                beforeBrickPosition.rowIndex,\n                beforeBrickPosition.columnIndex,\n                beforeBrickPosition.brickIndex,\n                currentMovedBrick);\n        });\n    }\n\n    moveBrickToNewColumn(movedBrickIds, beforeBrickId, side): void {\n        const movedBricks = movedBrickIds.map((movedBrickId) => {\n            const currentMovedBrick = this.layoutWalker.getBrickById(movedBrickId);\n\n            this.removeBrick(movedBrickId);\n\n            return currentMovedBrick;\n        });\n\n        const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n\n        let columnIndex;\n\n        // todo: move side to constant\n        // todo: search across project for all hard coded variables\n        if (side === 'left') {\n            columnIndex = beforeBrickPosition.columnIndex;\n        } else if (side === 'right') {\n            columnIndex = beforeBrickPosition.columnIndex + 1;\n        }\n\n        movedBricks.forEach((movedBrick, index) => {\n            if (index === 0) {\n                this.addBrickToNewColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    movedBrick\n                );\n            } else {\n                this.addBrickToExistingColumn(\n                    beforeBrickPosition.rowIndex,\n                    columnIndex,\n                    index,\n                    movedBrick\n                );\n            }\n        });\n    }\n\n    removeBrick(brickId: string): void {\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n\n        const row = this.rows[brickPosition.rowIndex];\n        const column = row.columns[brickPosition.columnIndex];\n\n        // remove brick\n        column.bricks.splice(brickPosition.brickIndex, 1);\n\n        // remove column if there are no bricks inside\n        if (column.bricks.length === 0) {\n            row.columns.splice(brickPosition.columnIndex, 1);\n\n            // remove row if there are no columns inside\n            if (row.columns.length === 0) {\n                this.rows.splice(brickPosition.rowIndex, 1);\n\n                // if there are no rows, create default\n                if (this.rows.length === 0) {\n                    this.rows.push(this.initializeNewRow(this.generateId()));\n                }\n            }\n        }\n    }\n\n    // COMMANDS\n    private addBrick(rowIndex, columnIndex, brickIndex, brick) {\n        this.rows[rowIndex].columns[columnIndex].bricks.splice(brickIndex, 0, brick);\n    }\n\n    private getColumn(rowIndex: number, columnIndex: number): IWallColumn {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n            return row.columns[columnIndex];\n        } else {\n            return null;\n        }\n    }\n\n    private createNewRow(rowIndex: number, rowId: string): void {\n        this.rows.splice(rowIndex, 0, this.initializeNewRow(rowId));\n    }\n\n    private createNewColumn(rowIndex: number, columnIndex: number): void {\n        this.rows[rowIndex].columns.splice(columnIndex, 0, this.initializeNewColumn());\n    }\n\n    private initializeNewRow(rowId: string): IWallRow {\n        return {\n            id: rowId,\n            columns: [\n                this.initializeNewColumn()\n            ]\n        };\n    }\n\n    private initializeNewColumn(): IWallColumn {\n        return {\n            bricks: []\n        };\n    }\n\n    private generateId(): string {\n        return (new Guid()).get();\n    }\n}\n","import {Subject, Subscription} from 'rxjs';\nimport {Guid} from '../../../modules/utils/utils';\nimport {IBrickDefinition} from '../../model/interfaces/brick-definition.interface';\nimport {IWallColumn} from '../../model/interfaces/wall-column.interface';\nimport {IWallDefinition} from '../../model/interfaces/wall-definition.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {WallBrick} from '../../model/wall-brick.model';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {AddBrickEvent} from './events/add-brick.event';\nimport {BeforeChangeEvent} from './events/before-change.event';\nimport {MoveBrickEvent} from './events/move-brick.event';\nimport {RemoveBrickEvent} from './events/remove-brick.event';\nimport {RemoveBricksEvent} from './events/remove-bricks.event';\nimport {SetPlanEvent} from './events/set-plan.event';\nimport {TurnBrickIntoEvent} from './events/turn-brick-into.event';\nimport {UpdateBrickStateEvent} from './events/update-brick-state.event';\nimport {LayoutWalker} from './layout-walker.class';\nimport {WallLayout} from './wall-layout.model';\nimport {IWallPlugin} from '../../model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IBrickSnapshot} from '../../model/interfaces/brick-snapshot.interface';\n\n/*\n* Contains Wall data structure and registers API for data manipulation.\n* Responsible to IWallDefinition->Layout and Layout->IWallDefinition transformation\n* */\nexport class WallCorePlugin implements IWallPlugin {\n    name = 'core';\n    version = '0.0.0';\n\n    // sub plugins\n    private layout: WallLayout;\n    private layoutWalker: LayoutWalker = new LayoutWalker(this.brickRegistry);\n\n    private wallModel: IWallModel;\n\n    private DEFAULT_BRICK = 'text';\n\n    private events: Subject<any> = new Subject();\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    // START API\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        [\n            'getRowCount',\n            'getBrickTag',\n            'getPreviousBrickId',\n            'getNextBrickId',\n            'getColumnCount',\n            'getBrickIds',\n            'getBricksCount',\n            'getNextTextBrickId',\n            'getPreviousTextBrickId',\n            'filterBricks',\n            'isBrickAheadOf'\n        ].forEach((methodName) => {\n            this[methodName] = this.layoutWalker[methodName].bind(this.layoutWalker);\n        });\n\n        this.wallModel.registerApi(this.name, this);\n    }\n\n    // old\n\n    // COMMAND METHODS\n    setPlan(plan: IWallDefinition) {\n        this.dispatch(new BeforeChangeEvent(SetPlanEvent));\n\n        this.layout = new WallLayout(this.brickRegistry, this.layoutWalker);\n\n        this.layoutWalker.setLayout(this.layout.rows);\n\n        // build tree\n        plan.layout.bricks.forEach((row, rowIndex) => {\n            row.columns.forEach((column, columnIndex) => {\n                column.bricks.forEach((brick, brickIndex) => {\n                    const planBrick = plan.bricks.find((currentPlanBrick) => {\n                        return brick.id === currentPlanBrick.id;\n                    });\n\n                    const wallBrick = this.restoreBrick(planBrick);\n\n                    // first column in new row\n                    if (columnIndex === 0) {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewRow(rowIndex, wallBrick, row.id);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    } else {\n                        if (brickIndex === 0) {\n                            this.layout.addBrickToNewColumn(rowIndex, columnIndex, wallBrick);\n                        } else {\n                            this.layout.addBrickToExistingColumn(rowIndex, columnIndex, brickIndex, wallBrick);\n                        }\n                    }\n                });\n            });\n        });\n\n        this.dispatch(new SetPlanEvent());\n    }\n\n    addBrickAfterBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex + 1, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex + 1,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    addBrickBeforeBrickId(brickId: string, tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickPosition = this.layoutWalker.getBrickPosition(brickId);\n        const columnCount = this.layoutWalker.getColumnCount(brickPosition.rowIndex);\n        const newBrick = this.createBrick(tag, state);\n\n        if (columnCount === 1) {\n            this.layout.addBrickToNewRow(brickPosition.rowIndex, newBrick);\n        } else if (columnCount > 1) {\n            this.layout.addBrickToExistingColumn(\n                brickPosition.rowIndex,\n                brickPosition.columnIndex,\n                brickPosition.brickIndex,\n                newBrick);\n        }\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    // Add text brick to the bottom of wall in the new row\n    addDefaultBrick() {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const brickCount = this.layoutWalker.getBricksCount();\n        const newBrick = this.createBrick(this.DEFAULT_BRICK);\n        const rowIndex = brickCount ? this.layoutWalker.getRowCount() + 1 : 0;\n\n        this.layout.addBrickToNewRow(rowIndex, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n    }\n\n    addBrickAtStart(tag: string, state?: any): IBrickSnapshot {\n        this.dispatch(new BeforeChangeEvent(AddBrickEvent));\n\n        const newBrick = this.createBrick(tag, state);\n\n        this.layout.addBrickToNewRow(0, newBrick);\n\n        this.dispatch(new AddBrickEvent(newBrick.id));\n\n        return this.getBrickSnapshot(newBrick.id);\n    }\n\n    updateBrickState(brickId, brickState): void {\n        this.dispatch(new BeforeChangeEvent(UpdateBrickStateEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const oldState = JSON.parse(JSON.stringify(brick.getState()));\n\n        brick.updateState(JSON.parse(JSON.stringify(brickState)));\n\n        this.dispatch(new UpdateBrickStateEvent(\n            brickId,\n            JSON.parse(JSON.stringify(brick.getState())),\n            oldState\n        ));\n    }\n\n    // todo: should be async operation\n    removeBrick(brickId: string): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBrickEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextTextBrick(brickId);\n        const previousTextBrick = this.layoutWalker.getPreviousTextBrick(brickId);\n\n        this.clearBrickResources(brickId).then(() => {\n        });\n\n        const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n        this.layout.removeBrick(brickId);\n\n        this.dispatch(new RemoveBrickEvent(\n            removedBrick.getSnapshot(),\n            previousTextBrick && previousTextBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    // todo: should be async operation\n    removeBricks(brickIds): void {\n        this.dispatch(new BeforeChangeEvent(RemoveBricksEvent));\n\n        const nextTextBrick = this.layoutWalker.getNextBrick(brickIds[brickIds.length - 1]);\n        const previousBrick = this.layoutWalker.getPreviousBrick(brickIds[0]);\n\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        Promise.all(clearPromises).then(() => {\n        });\n\n        const removedBricks = brickIds.map((brickId) => {\n            const removedBrick = this.layoutWalker.getBrickById(brickId);\n\n            this.layout.removeBrick(brickId);\n\n            return {\n                id: removedBrick.id,\n                tag: removedBrick.tag,\n                state: removedBrick.state\n            };\n        });\n\n        this.dispatch(new RemoveBricksEvent(\n            removedBricks,\n            previousBrick && previousBrick.id,\n            nextTextBrick && nextTextBrick.id\n        ));\n    }\n\n    /**\n     * Remove all bricks from layout\n     * Clear all bricks external dependencies\n     */\n    clear(): Promise<any> {\n        const brickIds = this.layoutWalker.getBrickIds();\n\n        // todo: replace it after removeBricks will be async\n        const clearPromises = brickIds.map((brickId) => this.clearBrickResources(brickId));\n\n        return Promise.all(clearPromises).then(() => {\n            brickIds.forEach((brickId) => {\n                this.layout.removeBrick(brickId);\n            });\n        });\n    }\n\n    turnBrickInto(brickId: string, newTag: string, state: any = {}) {\n        this.dispatch(new BeforeChangeEvent(TurnBrickIntoEvent));\n\n        const brick = this.layoutWalker.getBrickById(brickId);\n        const oldTag = brick.tag;\n\n        brick\n            .turnInto(newTag)\n            .updateState(state);\n\n        this.dispatch(new TurnBrickIntoEvent(brickId, newTag, oldTag));\n    }\n\n    moveBrickAfterBrickId(movedBrickIds: string[], afterBrickId: string): void {\n        if (movedBrickIds.indexOf(afterBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const afterBrickPosition = this.layoutWalker.getBrickPosition(afterBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(afterBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickAfterInNewRow(afterBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickAfterInSameColumn(afterBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, afterBrickId));\n        }\n    }\n\n    moveBrickBeforeBrickId(movedBrickIds: string[], beforeBrickId: string): void {\n        if (movedBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            const beforeBrickPosition = this.layoutWalker.getBrickPosition(beforeBrickId);\n            const columnCount = this.layoutWalker.getColumnCount(beforeBrickPosition.rowIndex);\n\n            if (columnCount === 1) {\n                this.layout.moveBrickBeforeInNewRow(beforeBrickId, movedBrickIds);\n            } else {\n                this.layout.moveBrickBeforeInSameColumn(beforeBrickId, movedBrickIds);\n            }\n\n            this.dispatch(new MoveBrickEvent(movedBrickIds, beforeBrickId));\n        }\n    }\n\n    moveBrickToNewColumn(targetBrickIds: string[], beforeBrickId: string, side: string): void {\n        if (targetBrickIds.indexOf(beforeBrickId) === -1) {\n            this.dispatch(new BeforeChangeEvent(MoveBrickEvent));\n\n            this.layout.moveBrickToNewColumn(targetBrickIds, beforeBrickId, side);\n\n            this.dispatch(new MoveBrickEvent(targetBrickIds, beforeBrickId));\n        }\n    }\n\n    // QUERY METHODS\n    getPlan(): IWallDefinition {\n        const plan = {\n            bricks: [],\n            layout: {\n                bricks: []\n            }\n        };\n\n        this.layoutWalker.traverse((row: IWallRow) => {\n            const columns = [];\n\n            row.columns.forEach((column: IWallColumn) => {\n                const planColumn = {\n                    bricks: []\n                };\n\n                column.bricks.forEach((brick: WallBrick) => {\n                    plan.bricks.push({\n                        id: brick.id,\n                        tag: brick.tag,\n                        meta: brick.meta,\n                        data: brick.state\n                    });\n\n                    planColumn.bricks.push({\n                        id: brick.id\n                    });\n                });\n\n                columns.push(planColumn);\n            });\n\n            plan.layout.bricks.push({\n                columns,\n                id: row.id\n            });\n        });\n\n        return JSON.parse(JSON.stringify(plan));\n    }\n\n    sortBrickIdsByLayoutOrder(brickIds: string[]) {\n        const bricksSequence = this.layoutWalker.getBrickSequence(() => true);\n\n        return bricksSequence\n            .filter((brick) => brickIds.indexOf(brick.id) !== -1)\n            .map((brick) => brick.id);\n    }\n\n    traverse(fn): void {\n        return this.layoutWalker.traverse((row: IWallRow) => {\n            const preparedRow = {\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brick) => brick.getSnapshot())\n                    };\n                })\n            };\n\n            fn(preparedRow);\n        });\n    }\n\n    getBrickSnapshot(brickId: string): IBrickSnapshot {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        return brick ? brick.getSnapshot() : null;\n    }\n\n    getBrickResourcePaths(brickId: string): string[] {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (!brickSpecification.getBrickResourcePaths) {\n            return [];\n        }\n\n        return brickSpecification.getBrickResourcePaths(brick.getSnapshot());\n    }\n\n    getBrickTextRepresentation(brickId: string): string {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.textRepresentation) {\n            const brickTextRepresentation = new brickSpecification.textRepresentation(brick.getSnapshot());\n\n            return brickTextRepresentation.getText() || '';\n        } else {\n            return '';\n        }\n    }\n\n    subscribe(callback): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    isRegisteredBrick(tag: string): boolean {\n        return Boolean(this.brickRegistry.get(tag));\n    }\n\n    private dispatch(e: any): void {\n        this.events.next(e);\n    }\n\n    private createBrick(tag, state?: any) {\n        const id = this.generateGuid();\n        const meta = {};\n        const brick = new WallBrick(id, tag, meta);\n\n        if (state) {\n            brick.updateState(state);\n        }\n\n        return brick;\n    }\n\n    private restoreBrick(brickDefinition: IBrickDefinition): WallBrick {\n        const brick = new WallBrick(\n            brickDefinition.id,\n            brickDefinition.tag,\n            brickDefinition.meta\n        );\n\n        brick.updateState(brickDefinition.data);\n\n        return brick;\n    }\n\n    private clearBrickResources(brickId): Promise<any> {\n        const brick = this.layoutWalker.getBrickById(brickId);\n\n        const brickSpecification = this.brickRegistry.get(brick.tag);\n\n        if (brickSpecification.destructor) {\n            return brickSpecification.destructor(brick.getSnapshot());\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    private generateGuid(): string {\n        return (new Guid()).get();\n    }\n}\n","export class WallPluginInitializedEvent {\n    constructor(public pluginName: string) {\n    }\n}\n","import {Observable, Subject, Subscription} from 'rxjs';\nimport {IWallPlugin} from './interfaces/wall-plugin.interface';\nimport {WallPluginInitializedEvent} from './events/wall-plugin-initialized.event';\nimport {IWallModelConfig} from './interfaces/wall-model-config.interface';\nimport {IWallModel} from './interfaces/wall-model.interface';\nimport {IWallCorePluginApi} from './interfaces/wall-core-plugin-api.interface';\nimport {BrickRegistry} from '../registry/brick-registry.service';\n\nexport class WallModel implements IWallModel {\n    version: '0.0.0';\n\n    // plugin api\n    api: {\n        [apiName: string]: any;\n        core: IWallCorePluginApi\n    } = {\n        core: null\n    };\n\n    private events$: Observable<any> = new Subject();\n\n    private plugins: Map<string, IWallPlugin> = new Map();\n\n    constructor(private brickRegistry: BrickRegistry, config: IWallModelConfig) {\n        // initialize 3rd party plugins\n        config.plugins.forEach((plugin) => this.initializePlugin(plugin));\n    }\n\n    // register external API\n    registerApi(apiName: string, api: object) {\n        this.api[apiName] = api;\n    }\n\n    destroy() {\n        this.plugins.forEach((plugin) => this.destroyPlugin(plugin));\n    }\n\n    // proxy events from all plugins\n    subscribe(callback): Subscription {\n        return this.events$.subscribe(callback);\n    }\n\n    private dispatch(e: any): void {\n        (this.events$ as Subject<any>).next(e);\n    }\n\n    private initializePlugin(plugin: IWallPlugin) {\n        plugin.onWallInitialize(this);\n\n        this.plugins.set(plugin.name, plugin);\n\n        this.dispatch(new WallPluginInitializedEvent(plugin.name));\n    }\n\n    private destroyPlugin(plugin: IWallPlugin) {\n        if (plugin.onWallPluginDestroy) {\n            plugin.onWallPluginDestroy();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {IBrickSpecification} from './interfaces/brick-specification.interface';\n\n@Injectable()\nexport class BrickRegistry {\n    private bricks: IBrickSpecification[] = [];\n\n    // todo: add unregister functionality\n\n    register(brickConfiguration: IBrickSpecification) {\n        this.bricks.push(brickConfiguration);\n    }\n\n    get(tag: string): IBrickSpecification {\n        return this.bricks.find((brickConfiguration: IBrickSpecification) => brickConfiguration.tag === tag);\n    }\n\n    getAll(): IBrickSpecification[] {\n        return this.bricks;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {WallCorePlugin} from '../plugins/core/wall-core.plugin';\nimport {WallModel} from '../model/wall.model';\nimport {BrickRegistry} from '../registry/brick-registry.service';\nimport {IWallModel} from '../model/interfaces/wall-model.interface';\nimport {IWallModelConfig} from '../model/interfaces/wall-model-config.interface';\n\n@Injectable()\nexport class WallModelFactory {\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    create(config?: IWallModelConfig): IWallModel {\n        const defaultConfig = {\n            plan: {\n                bricks: [],\n                layout: {\n                    bricks: []\n                }\n            },\n            plugins: []\n        };\n\n        config = {\n            ...defaultConfig,\n            ...config\n        };\n\n        // inject core plugin as initial first plugin\n        // in this way factory will decouple WallModel from WallCorePlugin\n        config.plugins.unshift(new WallCorePlugin(this.brickRegistry));\n\n        const wallModel = new WallModel(\n            this.brickRegistry,\n            config\n        );\n\n        wallModel.api.core.setPlan(config.plan);\n\n        return wallModel;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    templateUrl: './placeholder.component.html',\n    styleUrls: ['./placeholder.component.scss']\n})\nexport class PlaceholderComponent {\n    x: number;\n    y: number;\n    size: number;\n    isHorizontal: boolean;\n\n    setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.isHorizontal = isHorizontal;\n    }\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector\n} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\n\n@Injectable()\nexport class PlaceholderRenderer {\n    private placeholderComponentRef: ComponentRef<PlaceholderComponent> = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private injector: Injector) {\n    }\n\n    render(x: number, y: number, size: number, isHorizontal: boolean = true) {\n        if (!this.placeholderComponentRef) {\n            this.renderPlaceholderComponent();\n        }\n\n        this.setCoordinate(x, y, size, isHorizontal);\n    }\n\n    clear() {\n        if (this.placeholderComponentRef) {\n            this.removePlaceholderComponent();\n        }\n    }\n\n    private renderPlaceholderComponent() {\n        this.placeholderComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PlaceholderComponent)\n            .create(this.injector);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.placeholderComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.placeholderComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n        document.body.appendChild(domElem);\n    }\n\n    private removePlaceholderComponent() {\n        this.appRef.detachView(this.placeholderComponentRef.hostView);\n        this.placeholderComponentRef.destroy();\n\n        this.placeholderComponentRef = null;\n    }\n\n    private setCoordinate(x: number, y: number, size: number, isHorizontal: boolean) {\n        this.placeholderComponentRef.instance.setCoordinate(x, y, size, isHorizontal);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PlaceholderComponent} from './component/placeholder.component';\nimport {PlaceholderRenderer} from './placeholder-renderer.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        PlaceholderComponent\n    ],\n    providers: [\n        PlaceholderRenderer\n    ],\n    entryComponents: [\n        PlaceholderComponent\n    ]\n})\nexport class PlaceholderRendererModule {\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Component, ElementRef, EventEmitter, Inject, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {IFocusedBrick} from '../wall/interfaces/focused-brick.interface';\n\n@Component({\n    selector: 'wall-canvas',\n    templateUrl: './wall-canvas-component.component.html',\n    styleUrls: ['./wall-canvas.component.scss']\n})\nexport class WallCanvasComponent implements OnChanges {\n    @Input() wallModel: IWallModel;\n    @Input() rows: IWallRow[] = [];\n\n    @Input() selectedBricks: string[] = null;\n    @Input() focusedBrick: IFocusedBrick = null;\n    @Input() isMediaInteractionEnabled$: Observable<boolean>;\n\n    @Output() canvasClick: EventEmitter<any> = new EventEmitter();\n    @Output() onBrickStateChanged: EventEmitter<any> = new EventEmitter();\n\n    // public API for sub components\n    focusedBrick$: Subject<IFocusedBrick> = new Subject();\n    selectedBricks$: Subject<string[]> = new Subject();\n\n    doc: any = null;\n\n    @ViewChild('expander') expander: ElementRef;\n\n    constructor(@Inject(DOCUMENT) doc) {\n        this.doc = doc;\n    }\n\n    onEditorClick(e: any) {\n        if (e.target === this.expander.nativeElement) {\n            this.canvasClick.emit();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.focusedBrick && changes.focusedBrick.currentValue) {\n            this.focusedBrick$.next(changes.focusedBrick.currentValue);\n        }\n\n        if (changes.selectedBricks) {\n            this.selectedBricks$.next(changes.selectedBricks.currentValue || []);\n        }\n    }\n\n    brickStateChanged(brickId: string, brickState: any) {\n        this.onBrickStateChanged.emit({\n            brickId,\n            brickState\n        });\n    }\n\n    trackRowsBy(index, item): string {\n        return item.id;\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationUpdatedEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {SpotDirective} from './directive/spot.directive';\nimport {ISpotPosition, ISpotSize} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\n\nexport class SpotModel {\n    id: SpotId;\n    data: any;\n    position: ISpotPosition;\n    size: ISpotSize;\n\n    private instance: SpotDirective;\n\n    constructor(instance: SpotDirective) {\n        this.id = instance.id;\n        this.instance = instance;\n\n        this.updateInfo();\n    }\n\n    updateInfo() {\n        const {position, size, data} = this.instance.getInfo();\n\n        this.data = data;\n        this.size = size;\n        this.position = position;\n    }\n\n    isCross13Line(y) {\n        return (y > this.position.y) && (y < this.position.y + this.size.height);\n    }\n\n    getMinimalDistanceToPoint(x: number, y: number) {\n        let minimalDistance = null;\n\n        // distances to horizontal lines\n        const distanceToLine12 = Math.abs(this.position.y - y);\n        const distanceToLine43 = Math.abs((this.position.y + this.size.height) - y);\n\n        // distances to vertical lines\n        const distanceToLine14 = Math.abs(this.position.x - x);\n        const distanceToLine23 = Math.abs((this.position.x + this.size.width) - x);\n\n        const minDistanceToHorizontalLine = Math.min.apply(null, [distanceToLine12, distanceToLine43]);\n        const minDistanceToVerticalLine = Math.min.apply(null, [distanceToLine14, distanceToLine23]);\n\n        if ((x > this.position.x) && (x < this.position.x + this.size.width)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToHorizontalLine;\n        } else if ((y > this.position.y) && (y < this.position.y + this.size.height)) {\n            // point directly cross the beacon\n            minimalDistance = minDistanceToVerticalLine;\n        } else {\n            // point doesn't cross beacon, calculate shortest distance to beacon\n            minimalDistance = Math.sqrt(\n                minDistanceToHorizontalLine *\n                minDistanceToHorizontalLine +\n                minDistanceToVerticalLine *\n                minDistanceToVerticalLine\n            );\n        }\n\n        return minimalDistance;\n    }\n\n    getDistanceToTopLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToBottomLeftPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + this.size.height - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    getDistanceToLeftCenterPoint(x: number, y: number) {\n        const a = Math.abs(this.position.x - x);\n        const b = Math.abs(this.position.y + (this.size.height / 2) - y);\n\n        return Math.sqrt(a * a + b * b);\n    }\n\n    isPointInsideSpot(x: number, y: number): boolean {\n        if ((x > this.position.x) && (x < this.position.x + this.size.width) &&\n            (y > this.position.y) && (y < this.position.y + this.size.height)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {throttleTime} from 'rxjs/operators';\nimport {SpotDirective} from './directive/spot.directive';\nimport {LocationUpdatedEvent} from './events/location-updated.event';\nimport {IDistanceToSpot} from './interfaces/distance-to-spot.interface';\nimport {SpotId} from './interfaces/spot-id.type';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class RadarCoordinator {\n    private spots: Map<SpotId, SpotModel> = new Map();\n\n    private events: Subject<any> = new Subject();\n\n    private mouseMove$: Observable<MouseEvent>;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private zone: NgZone) {\n        this.mouseMove$ = fromEvent(doc, 'mousemove');\n\n        const throttleMouseTime = 30;\n\n        // run outside Angular Zone in order to decrease performance hit\n        this.zone.runOutsideAngular(() => {\n            this.mouseMove$\n                .pipe(\n                    throttleTime(throttleMouseTime)\n                )\n                .subscribe((event) => {\n                    this.updateSpotsInfo();\n                    this.updateLocationPosition(event.clientX, event.clientY);\n                });\n        });\n    }\n\n    register(spotId: SpotId, spotInstance: SpotDirective) {\n        this.spots.set(spotId, new SpotModel(spotInstance));\n    }\n\n    unRegister(spotId: SpotId) {\n        this.spots.delete(spotId);\n    }\n\n    updateSpotsInfo() {\n        this.spots.forEach((spot) => spot.updateInfo());\n    }\n\n    filterSpots(predicate: (spot: SpotModel) => void): SpotModel[] {\n        return Array.from(this.spots)\n            .map(([id, spot]) => spot)\n            .filter((spot) => predicate(spot));\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n\n    private updateLocationPosition(x: number, y: number) {\n        const sortedSpots: IDistanceToSpot[] = [];\n\n        this.spots.forEach((spot) => {\n            const minimalDistance = spot.getMinimalDistanceToPoint(x, y);\n            const topLeftPointDistance = spot.getDistanceToTopLeftPoint(x, y);\n            const bottomLeftPointDistance = spot.getDistanceToBottomLeftPoint(x, y);\n            const centerLeftPointDistance = spot.getDistanceToLeftCenterPoint(x, y);\n            const isCross13Line = spot.isCross13Line(y);\n\n            sortedSpots.push({\n                minimalDistance,\n                topLeftPointDistance,\n                bottomLeftPointDistance,\n                centerLeftPointDistance,\n                isCross13Line,\n                data: spot.data\n            });\n        });\n\n        this.events.next(new LocationUpdatedEvent(sortedSpots));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {SpotModel} from './spot.model';\n\n@Injectable()\nexport class Radar {\n    private events: Subject<any> = new Subject();\n\n    constructor(private radarCoordinator: RadarCoordinator) {\n        this.radarCoordinator.subscribe((event) => {\n            this.events.next(event);\n        });\n    }\n\n    filterSpots(fn: (spot: SpotModel) => void): SpotModel[] {\n        return this.radarCoordinator.filterSpots(fn);\n    }\n\n    subscribe(fn: any): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {WallCanvasComponent} from '../../wall-canvas.component';\nimport {Radar} from '../../../../../modules/radar/radar.service';\nimport {LocationUpdatedEvent} from '../../../../../modules/radar/events/location-updated.event';\nimport {IWallComponent} from '../../../wall/interfaces/wall-component/wall-component.interface';\n\n@Component({\n    selector: 'wall-canvas-brick',\n    templateUrl: './wall-canvas-brick.component.html',\n    styleUrls: ['./wall-canvas-brick.component.scss']\n})\nexport class WallCanvasBrickComponent implements OnInit, OnDestroy, OnChanges {\n    // todo add type\n    @Input() brick: any;\n\n    @ViewChild('brickContainer', {read: ViewContainerRef}) container: ViewContainerRef;\n\n    selected = false;\n\n    isMouseNear = false;\n\n    spot: any;\n\n    isMediaInteractionEnabled = true;\n\n    private componentReference: ComponentRef<any>;\n\n    private minimalDistanceToMouse = 100;\n\n    // subscriptions\n    private stateChangesSubscription: Subscription;\n    private radarSubscription: Subscription;\n    private focusedBrickSubscription: Subscription;\n    private selectedBricksSubscription: Subscription;\n    private isMediaInteractionEnabledSubscription: Subscription;\n\n    constructor(private injector: Injector,\n                private resolver: ComponentFactoryResolver,\n                private radar: Radar,\n                private cdRef: ChangeDetectorRef,\n                private wallCanvasComponent: WallCanvasComponent) {\n    }\n\n    ngOnInit() {\n        this.spot = {\n            brickId: this.brick.id,\n            isPickOutItem: true,\n            isBeacon: true\n        };\n\n        this.componentReference = this.renderBrick();\n\n        this.radarSubscription = this.radar.subscribe((e) => {\n            if (e instanceof LocationUpdatedEvent) {\n                const currentSpot = e.spots.find((spot) => spot.data.brickId === this.brick.id);\n\n                if (currentSpot.isCross13Line) {\n                    this.isMouseNear = currentSpot.topLeftPointDistance < this.minimalDistanceToMouse;\n                } else {\n                    this.isMouseNear = false;\n                }\n\n                this.cdRef.detectChanges();\n            }\n        });\n\n        this.focusedBrickSubscription = this.wallCanvasComponent.focusedBrick$.subscribe((focusedBrick) => {\n            if (focusedBrick.id === this.brick.id) {\n                this.callInstanceApi('onWallFocus', focusedBrick.context);\n            }\n        });\n\n        this.selectedBricksSubscription = this.wallCanvasComponent.selectedBricks$.subscribe((selectedBricks) => {\n            this.selected = !Boolean(selectedBricks.indexOf(this.brick.id) === -1);\n        });\n\n        this.isMediaInteractionEnabledSubscription = this.wallCanvasComponent.isMediaInteractionEnabled$\n            .subscribe((isMediaInteractionEnabled) => this.isMediaInteractionEnabled = isMediaInteractionEnabled);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.brick && !changes.brick.firstChange && changes.brick.currentValue) {\n            this.componentReference.instance.state = this.brick.state;\n\n            this.callInstanceApi('onWallStateChange', this.componentReference.instance.state);\n        }\n    }\n\n    ngOnDestroy() {\n        this.radarSubscription.unsubscribe();\n        this.focusedBrickSubscription.unsubscribe();\n        this.selectedBricksSubscription.unsubscribe();\n        this.isMediaInteractionEnabledSubscription.unsubscribe();\n\n        if (this.stateChangesSubscription) {\n            this.stateChangesSubscription.unsubscribe();\n        }\n    }\n\n    private callInstanceApi(methodName: string, data?: any) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName](data);\n        }\n    }\n\n    private renderBrick() {\n        const factory = this.resolver.resolveComponentFactory(this.brick.component);\n\n        const componentReference = this.container.createComponent(factory, null, this.injector);\n\n        const componentInstance = componentReference.instance as IWallComponent;\n\n        componentInstance.id = this.brick.id;\n        componentInstance.state = this.brick.state;\n        componentInstance.wallModel = this.wallCanvasComponent.wallModel;\n\n        if (componentInstance.stateChanges) {\n            this.stateChangesSubscription = componentInstance.stateChanges.subscribe((newState) => {\n                this.wallCanvasComponent.brickStateChanged(this.brick.id, newState);\n            });\n        }\n\n        return componentReference;\n    }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'wall-canvas-row',\n    templateUrl: './wall-canvas-row.component.html',\n    styleUrls: ['./wall-canvas-row.component.scss']\n})\nexport class WallCanvasRowComponent {\n    @Input() row: any; // todo add type\n\n    trackColumnsBy(index): number {\n        return index;\n    }\n\n    trackBricksBy(index, item) {\n        return item.hash;\n    }\n}\n","export class SelectedBrickEvent {\n    constructor(public selectedBrickIds: string[]) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {SelectedBrickEvent} from './events/selected-brick.event';\nimport {IFocusedBrick} from './interfaces/focused-brick.interface';\nimport {IWallUiApi} from './interfaces/ui-api.interface';\nimport {IFocusContext} from './interfaces/wall-component/wall-component-focus-context.interface';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {BrickRegistry} from '../../registry/brick-registry.service';\nimport {IWallRow} from '../../model/interfaces/wall-row.interface';\nimport {RemoveBricksEvent} from '../../plugins/core/events/remove-bricks.event';\nimport {MoveBrickEvent} from '../../plugins/core/events/move-brick.event';\nimport {TurnBrickIntoEvent} from '../../plugins/core/events/turn-brick-into.event';\nimport {BeforeChangeEvent} from '../../plugins/core/events/before-change.event';\n\n@Injectable()\nexport class WallViewModel implements IWallUiApi {\n    wallModel: IWallModel = null;\n\n    events: Subject<any> = new Subject();\n\n    // UI\n    focusedBrick: IFocusedBrick = null;\n    selectedBricks: string[] = [];\n    isMediaInteractionEnabled$: Observable<boolean> = new BehaviorSubject(true);\n    canvasLayout: IWallRow[] = [];\n\n    private wallModelSubscription: Subscription;\n\n    constructor(private brickRegistry: BrickRegistry) {\n    }\n\n    getCanvasLayout(): IWallRow[] {\n        const rows = [];\n\n        this.wallModel.api.core.traverse((row) => {\n            rows.push({\n                id: row.id,\n\n                columns: row.columns.map((column) => {\n                    return {\n                        bricks: column.bricks.map((brickConfig) => {\n                            const component = this.brickRegistry.get(brickConfig.tag).component;\n\n                            return {\n                                id: brickConfig.id,\n                                hash: brickConfig.tag + brickConfig.id,\n                                state: brickConfig.state,\n                                component\n                            };\n                        })\n                    };\n                })\n            });\n        });\n\n        return rows;\n    }\n\n    initialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        // initialize view core API\n        const coreApi = [\n            // SELECTION\n            'getSelectedBrickIds',\n            'selectBrick',\n            'selectBricks',\n            'addBrickToSelection',\n            'removeBrickFromSelection',\n            'unSelectBricks',\n\n            // FOCUS\n            'focusOnBrickId',\n            'getFocusedBrickId',\n            'focusOnPreviousTextBrick',\n            'focusOnNextTextBrick',\n\n            // REMOVE BRICK\n            'removeBrick',\n            'removeBricks',\n\n            // BEHAVIOUR\n            'enableMediaInteraction',\n            'disableMediaInteraction',\n\n            // CLIENT\n            'subscribe'\n        ].reduce((result, methodName) => {\n            if (this[methodName].bind) {\n                result[methodName] = this[methodName].bind(this);\n            } else {\n                result[methodName] = this[methodName];\n            }\n\n            return result;\n        }, {});\n\n        // protect API from extending\n        Object.seal(coreApi);\n\n        // register methods on model itself\n        this.wallModel.registerApi('ui', coreApi);\n\n        this.wallModelSubscription = this.wallModel.api.core.subscribe((event) => {\n            if (event instanceof TurnBrickIntoEvent) {\n                this.focusOnBrickId(event.brickId);\n            }\n\n            if (event instanceof MoveBrickEvent) {\n                this.unSelectBricks();\n            }\n\n            if (event instanceof RemoveBricksEvent) {\n                if (!this.wallModel.api.core.getBricksCount()) {\n                    this.wallModel.api.core.addDefaultBrick();\n                }\n            }\n\n            if (!(event instanceof BeforeChangeEvent)) {\n                this.canvasLayout = this.getCanvasLayout();\n            }\n        });\n\n        this.canvasLayout = this.getCanvasLayout();\n    }\n\n    /**\n     * @public-api\n     */\n    selectBrick(brickId: string): void {\n        this.selectedBricks = [brickId];\n\n        this.focusedBrick = null;\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    selectBricks(brickIds: string[]) {\n        if (JSON.stringify(brickIds) !== JSON.stringify(this.selectedBricks)) {\n            this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(brickIds);\n\n            const selectedBricksClone = this.selectedBricks.slice(0);\n\n            this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n        }\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    addBrickToSelection(brickId: string): void {\n        const selectedBrickIds = this.selectedBricks.slice(0);\n\n        selectedBrickIds.push(brickId);\n\n        this.selectedBricks = this.wallModel.api.core.sortBrickIdsByLayoutOrder(selectedBrickIds);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @deprecated\n     * @public-api\n     */\n    removeBrickFromSelection(brickId: string): void {\n        const brickIdIndex = this.selectedBricks.indexOf(brickId);\n\n        this.selectedBricks.splice(brickIdIndex, 1);\n\n        this.selectedBricks = this.selectedBricks.slice(0);\n\n        const selectedBricksClone = this.selectedBricks.slice(0);\n\n        this.dispatch(new SelectedBrickEvent(selectedBricksClone));\n    }\n\n    /**\n     * @public-api\n     */\n    unSelectBricks(): void {\n        this.selectedBricks = [];\n\n        this.dispatch(new SelectedBrickEvent([]));\n    }\n\n    /**\n     * @public-api\n     */\n    getSelectedBrickIds(): string[] {\n        return this.selectedBricks.slice(0);\n    }\n\n    /**\n     * @public-api\n     */\n    getFocusedBrickId(): string {\n        return this.focusedBrick && this.focusedBrick.id;\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnBrickId(brickId: string, focusContext?: IFocusContext): void {\n        this.focusedBrick = {\n            id: brickId,\n            context: focusContext\n        };\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnPreviousTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(brickId);\n\n        if (previousTextBrickId) {\n            this.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    focusOnNextTextBrick(brickId: string, focusContext?: IFocusContext) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(brickId);\n\n        if (nextTextBrickId) {\n            this.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    /**\n     * @public-api\n     */\n    enableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(true);\n    }\n\n    /**\n     * @public-api\n     */\n    disableMediaInteraction() {\n        (this.isMediaInteractionEnabled$ as BehaviorSubject<boolean>).next(false);\n    }\n\n    /**\n     * @public-api\n     */\n    subscribe(callback: any): Subscription {\n        return this.events.subscribe(callback);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBrick(brickId: string) {\n        this.removeBricks([brickId]);\n    }\n\n    /**\n     * @public-api\n     */\n    removeBricks(brickIds: string[]) {\n        const currentBrickIds = this.wallModel.api.core.getBrickIds();\n\n        if (currentBrickIds.length > 1) {\n            this.wallModel.api.core.removeBricks(brickIds);\n        } else if (currentBrickIds.length === 1) {\n            const brickSnapshot = this.wallModel.api.core.getBrickSnapshot(currentBrickIds[0]);\n\n            if (brickSnapshot.tag !== 'text' || brickSnapshot.state.text) {\n                this.wallModel.api.core.removeBricks(brickIds);\n            } else {\n                this.focusOnBrickId(currentBrickIds[0]);\n            }\n        }\n    }\n\n    // canvas interaction\n    onCanvasClick() {\n        // check whether the last element is empty text brick\n        // which is inside one column row\n\n        const rowCount = this.wallModel.api.core.getRowCount();\n        const brickIds = this.wallModel.api.core.getBrickIds();\n\n        if (rowCount > 0\n            && this.wallModel.api.core.getColumnCount(rowCount - 1) === 1\n            && brickIds.length) {\n            const lastBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(brickIds[brickIds.length - 1]);\n\n            if (lastBrickSnapshot.tag === 'text' && !lastBrickSnapshot.state.text) {\n                this.focusOnBrickId(lastBrickSnapshot.id);\n            } else {\n                this.wallModel.api.core.addDefaultBrick();\n            }\n        } else {\n            this.wallModel.api.core.addDefaultBrick();\n        }\n    }\n\n    // canvas interaction\n    onBrickStateChanged(brickId: string, brickState: any): void {\n        this.wallModel.api.core.updateBrickState(brickId, brickState);\n    }\n\n    reset() {\n        this.wallModelSubscription.unsubscribe();\n\n        this.wallModelSubscription = null;\n\n        this.focusedBrick = null;\n\n        this.unSelectBricks();\n    }\n\n    private dispatch(e) {\n        this.events.next(e);\n    }\n}\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {WallViewModel} from './wall-view.model';\nimport {IWallModel} from '../../model/interfaces/wall-model.interface';\nimport {IWallConfiguration} from './interfaces/wall-configuration.interface';\n\n@Component({\n    selector: 'wall',\n    templateUrl: './wall.component.html',\n    styleUrls: ['./wall.component.scss'],\n    providers: [\n        WallViewModel\n    ]\n})\nexport class WallComponent implements OnChanges, OnDestroy {\n    @Input() model: IWallModel = null;\n    @Input() configuration: IWallConfiguration = null;\n\n    constructor(public wallViewModel: WallViewModel) {\n    }\n\n    // click on empty space\n    onCanvasClick() {\n        this.wallViewModel.onCanvasClick();\n    }\n\n    onBrickStateChanged(event) {\n        this.wallViewModel.onBrickStateChanged(event.brickId, event.brickState);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.model) {\n            if (!changes.model.firstChange) {\n                this.cleanUp();\n            }\n\n            this.initialize();\n        }\n    }\n\n    ngOnDestroy() {\n        this.cleanUp();\n    }\n\n    private initialize() {\n        // initialize view model by business model\n        this.wallViewModel.initialize(this.model);\n    }\n\n    private cleanUp() {\n        this.wallViewModel.reset();\n    }\n}\n","export class StartWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class StopWorkingEvent {\n    constructor(public slaveId: string) {\n    }\n}\n","export class WorkInProgressEvent {\n    constructor(public mousePosition: {\n        clientX: number;\n        clientY: number;\n    }) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {StartWorkingEvent} from './events/start-working.event';\nimport {StopWorkingEvent} from './events/stop-working.event';\nimport {WorkInProgressEvent} from './events/work-in-progress.event';\n\n@Injectable()\nexport class TowCoordinator {\n    events: Subject<any> = new Subject();\n\n    // start track when slave start working\n    private isSlaveWorking = false;\n\n    constructor() {\n        document.addEventListener('dragover', (event: DragEvent) => {\n            if (this.isSlaveWorking) {\n                event.preventDefault();\n\n                event.dataTransfer.dropEffect = 'move';\n\n                this.slaveWorkProgress(event.clientX, event.clientY);\n            }\n        });\n    }\n\n    slaveStartWorking(id: string) {\n        this.isSlaveWorking = true;\n\n        this.events.next(new StartWorkingEvent(id));\n    }\n\n    slaveWorkProgress(clientX: number, clientY: number) {\n        this.events.next(new WorkInProgressEvent({\n            clientX,\n            clientY\n        }));\n    }\n\n    slaveStopWorking(id) {\n        this.isSlaveWorking = false;\n\n        this.events.next(new StopWorkingEvent(id));\n    }\n}\n","import {Directive, ElementRef, HostListener, Input, OnInit, Renderer2} from '@angular/core';\nimport {TowCoordinator} from '../tow-coordinator.service';\n\n// Notify Tow Coordinator about drag operation\n@Directive({selector: '[tow-slave]'})\nexport class TowSlaveDirective implements OnInit {\n    @Input('tow-slave') id;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private towCoordinator: TowCoordinator) {\n    }\n\n    @HostListener('dragstart', ['$event'])\n    dragStart(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n\n        event.dataTransfer.setData('FAKE', JSON.stringify({}));\n\n        this.towCoordinator.slaveStartWorking(this.id);\n    }\n\n    @HostListener('drag', ['$event'])\n    drag(event: DragEvent) {\n        event.dataTransfer.dropEffect = 'move';\n    }\n\n    @HostListener('dragend', ['$event'])\n    dragEnd(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.towCoordinator.slaveStopWorking(this.id);\n    }\n\n    ngOnInit() {\n        this.renderer2.setAttribute(this.el.nativeElement, 'draggable', 'true');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {TowCoordinator} from './tow-coordinator.service';\n\n@Injectable()\nexport class TowService {\n    events: Subject<any> = new Subject();\n\n    constructor(private towCoordinator: TowCoordinator) {\n        this.towCoordinator.events.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {Directive, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\nimport {ISpotInfo, ISpotPosition, ISpotSize} from '../interfaces/distance-to-spot.interface';\nimport {SpotId} from '../interfaces/spot-id.type';\nimport {RadarCoordinator} from '../radar-coordinator.service';\n\n@Directive({\n    selector: '[spot]'\n})\nexport class SpotDirective implements OnInit, OnDestroy {\n    @Input() spot: any;\n\n    id: SpotId = String(Math.random());\n\n    constructor(private radarCoordinator: RadarCoordinator,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        this.radarCoordinator.register(this.id, this);\n    }\n\n    getInfo(): ISpotInfo {\n        return {\n            id: this.id,\n            data: this.getData(),\n            size: this.getSize(),\n            position: this.getPosition()\n        };\n    }\n\n    getData(): any {\n        return this.spot;\n    }\n\n    getSize(): ISpotSize {\n        return {\n            width: this.el.nativeElement.offsetWidth,\n            height: this.el.nativeElement.offsetHeight\n        };\n    }\n\n    getPosition(): ISpotPosition {\n        const offsets = this.el.nativeElement.getBoundingClientRect();\n\n        return {\n            x: offsets.left,\n            y: offsets.top\n        };\n    }\n\n    ngOnDestroy() {\n        this.radarCoordinator.unRegister(this.id);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {SpotDirective} from './directive/spot.directive';\nimport {RadarCoordinator} from './radar-coordinator.service';\nimport {Radar} from './radar.service';\n\n@NgModule({\n    exports: [SpotDirective],\n    declarations: [SpotDirective],\n    providers: [\n        Radar,\n        RadarCoordinator\n    ]\n})\nexport class RadarModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TowCoordinator} from './tow-coordinator.service';\nimport {TowSlaveDirective} from './tow-slave/tow-slave.directive';\nimport {TowService} from './tow.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        TowSlaveDirective\n    ],\n\n    exports: [\n        TowSlaveDirective\n    ],\n\n    providers: [\n        TowService,\n        TowCoordinator\n    ]\n})\nexport class TowModule {\n}\n","import {Component} from '@angular/core';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Component({\n    templateUrl: './pick-out-area.component.html',\n    styleUrls: ['./pick-out-area.component.scss']\n})\nexport class PickOutAreaComponent {\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    initialize(pickOutAreaModel: PickOutAreaModel) {\n        this.pickOutAreaModel = pickOutAreaModel;\n    }\n}\n","export class EndPickOut {\n}\n","export class PickOutItems {\n    constructor(public ids: string[]) {\n    }\n}\n","export class StartPickOut {\n}\n","export class StopPickOut {\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {EndPickOut} from './events/end-pick-out.event';\nimport {PickOutItems} from './events/pick-out-items.event';\nimport {StartPickOut} from './events/start-pick-out.event';\nimport {StopPickOut} from './events/stop-pick-out.event';\nimport {Radar} from '../radar/radar.service';\nimport {SpotModel} from '../radar/spot.model';\n\n@Injectable()\nexport class PickOutCoordinator {\n    changes: Subject<any> = new Subject();\n\n    private isPickOutAllowed = true;\n\n    constructor(private radar: Radar) {\n    }\n\n    disablePickOut() {\n        this.isPickOutAllowed = false;\n    }\n\n    enablePickOut() {\n        this.isPickOutAllowed = true;\n    }\n\n    stopPickOut() {\n        this.changes.next(new StopPickOut());\n    }\n\n    startPickOut() {\n        this.changes.next(new StartPickOut());\n    }\n\n    pickOutChanged(range) {\n        const pickOutSpotModels = this.radar.filterSpots((spot: SpotModel) => spot.data.isPickOutItem);\n\n        pickOutSpotModels.forEach((spotModel) => {\n            spotModel.updateInfo();\n        });\n\n        this.changes.next(new PickOutItems(this.getSelectedItemIds(range, pickOutSpotModels)));\n    }\n\n    endPickOut() {\n        this.changes.next(new EndPickOut());\n    }\n\n    private getSelectedItemIds(range, pickOutsItem: SpotModel[]): string[] {\n        return pickOutsItem\n            .filter((pickOutItem) => {\n                return (range.x < (pickOutItem.position.x + pickOutItem.size.width) &&\n                    (range.x + range.width) > pickOutItem.position.x &&\n                    (range.y + range.height) > pickOutItem.position.y &&\n                    range.y < (pickOutItem.position.y + pickOutItem.size.height));\n            })\n            .map((pickOutItem) => pickOutItem.data.brickId);\n    }\n}\n","export const MOUSE_LEFT_KEY_CODE = 0;\n","export class PickOutAreaModel {\n    // brick ids allow to define should we render area component\n    initialBrickId: string;\n    currentBrickId: string;\n\n    // calculate pick out area width and height\n    initialX: number;\n    initialY: number;\n\n    // store last client X and Y position before scroll event\n    previousClientX: number;\n    previousClientY: number;\n\n    // coordinates inside scrollable container\n    x: number;\n    y: number;\n\n    // coordinates related to viewport\n    clientX: number;\n    clientY: number;\n\n    // size of pick out area\n    width: number;\n    height: number;\n\n    isPickOutProcessInitialized = false;\n\n    scrollableContainer: HTMLElement;\n\n    private minimumMoveDistance = 5;\n\n    constructor(scrollableContainer: HTMLElement,\n                x: number,\n                y: number,\n                overBrickId: string) {\n        this.scrollableContainer = scrollableContainer;\n\n        this.initialX = x;\n        this.initialY = y;\n\n        this.x = x;\n        this.y = y;\n\n        this.initialBrickId = overBrickId;\n        this.currentBrickId = overBrickId;\n    }\n\n    recalculatePositionAndSize() {\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        const pageX = this.previousClientX - scrollContextRect.left;\n        const pageY = this.previousClientY - scrollContextRect.top + this.scrollableContainer.scrollTop;\n\n        this.updatePickOutAreaPositionAndSize(pageX, pageY);\n    }\n\n    updateCurrentClientPosition(clientX: number, clientY: number) {\n        this.previousClientX = clientX;\n        this.previousClientY = clientY;\n\n        this.recalculatePositionAndSize();\n    }\n\n    updateCurrentBrickId(brickId: string): void {\n        this.currentBrickId = brickId;\n    }\n\n    canInitiatePickOutProcess(): boolean {\n        return this.isMouseMovedEnough() &&\n            (!this.currentBrickId || this.currentBrickId !== this.initialBrickId);\n    }\n\n    initiatePickOutProcess() {\n        this.isPickOutProcessInitialized = true;\n    }\n\n    private updatePickOutAreaPositionAndSize(x: number, y: number) {\n        // update x position and width\n        if (x < this.initialX) {\n            this.width = this.initialX - x;\n\n            this.x = x;\n        } else {\n            this.width = Math.abs(x - this.x);\n        }\n\n        // update y position and height\n        if (y < this.initialY) {\n            this.height = this.initialY - y;\n\n            this.y = y;\n        } else {\n            this.height = Math.abs(y - this.y);\n        }\n\n        const scrollContextRect = this.scrollableContainer.getBoundingClientRect();\n\n        this.clientX = scrollContextRect.left + this.x;\n        this.clientY = scrollContextRect.top + this.y - this.scrollableContainer.scrollTop;\n    }\n\n    private isMouseMovedEnough(): boolean {\n        return this.width > this.minimumMoveDistance ||\n            this.height > this.minimumMoveDistance;\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener,\n    Inject,\n    Injector,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport {PickOutCoordinator} from '../pick-out-coordinator.service';\nimport {MOUSE_LEFT_KEY_CODE} from '../pick-out.constant';\nimport {IPickOutAreaConfig} from './pick-out-area-config.interface';\nimport {PickOutAreaComponent} from './pick-out-area.component';\nimport {PickOutAreaModel} from './pick-out-area.model';\n\n@Directive({\n    selector: '[pick-out-area]'\n})\nexport class PickOutAreaDirective implements OnInit, OnDestroy {\n    @Input('pick-out-area') config: IPickOutAreaConfig;\n\n    doc: any = null;\n\n    pickOutAreaModel: PickOutAreaModel = null;\n\n    selectionRangeComponentRef: ComponentRef<PickOutAreaComponent> = null;\n\n    onMouseUpBound: () => any;\n    onMouseMoveBound: (event: MouseEvent) => void;\n    onSelectionStartBound: () => any;\n    onContainerScrollBound: () => any;\n\n    previousClientX: number;\n    previousClientY: number;\n\n    constructor(@Inject(DOCUMENT) doc,\n                private pickOutCoordinator: PickOutCoordinator,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private zone: NgZone,\n                private el: ElementRef,\n                private injector: Injector) {\n        this.doc = doc;\n    }\n\n    ngOnInit() {\n        this.onMouseUpBound = this.onMouseUp.bind(this);\n        this.onMouseMoveBound = this.onMouseMove.bind(this);\n        this.onSelectionStartBound = this.onSelectionStart.bind(this);\n        this.onContainerScrollBound = this.onContainerScroll.bind(this);\n\n        this.doc.addEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.addEventListener('mouseup', this.onMouseUpBound);\n        this.doc.addEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.addEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    triggerPickOutChanged() {\n        this.pickOutCoordinator.pickOutChanged({\n            x: this.pickOutAreaModel.clientX,\n            y: this.pickOutAreaModel.clientY,\n            width: this.pickOutAreaModel.width,\n            height: this.pickOutAreaModel.height\n        });\n    }\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        if (event.button === MOUSE_LEFT_KEY_CODE && !this.isMouseOverDraggableElement(event.clientX, event.clientY)) {\n            const scrollContextRect = this.config.scrollableContainer.getBoundingClientRect();\n            const pageX = event.clientX - scrollContextRect.left;\n            const pageY = event.clientY - scrollContextRect.top + this.config.scrollableContainer.scrollTop;\n\n            const brickIdOverMouse = this.findBrickIdByCoordinate(event.clientX, event.clientY);\n\n            this.pickOutAreaModel = new PickOutAreaModel(\n                this.config.scrollableContainer,\n                pageX,\n                pageY,\n                brickIdOverMouse\n            );\n        }\n    }\n\n    onMouseMove(event: any) {\n        if (this.pickOutAreaModel) {\n            this.pickOutAreaModel.updateCurrentClientPosition(event.clientX, event.clientY);\n            this.pickOutAreaModel.updateCurrentBrickId(this.findBrickIdByCoordinate(event.clientX, event.clientY));\n\n            if (this.pickOutAreaModel.isPickOutProcessInitialized) {\n                event.preventDefault();\n\n                this.triggerPickOutChanged();\n            } else if (this.pickOutAreaModel.canInitiatePickOutProcess()) {\n                this.pickOutAreaModel.initiatePickOutProcess();\n\n                this.onStartPicKOut();\n            }\n        }\n    }\n\n    onMouseUp() {\n        this.onStopPickOut();\n    }\n\n    onContainerScroll() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.pickOutAreaModel.recalculatePositionAndSize();\n\n            this.triggerPickOutChanged();\n        }\n    }\n\n    onSelectionStart(e) {\n        // does not allow select text during pick out process\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            e.preventDefault();\n        }\n    }\n\n    renderRangeComponent() {\n        // https://medium.com/@caroso1222/angular-pro-tip-how-to-dynamically-create-components-in-body-ba200cc289e6\n\n        // 1. Create a component reference from the component\n        this.selectionRangeComponentRef = this.componentFactoryResolver\n            .resolveComponentFactory(PickOutAreaComponent)\n            .create(this.injector);\n\n        this.selectionRangeComponentRef.instance.initialize(this.pickOutAreaModel);\n\n        // 2. Attach component to the appRef so that it's inside the ng component tree\n        this.appRef.attachView(this.selectionRangeComponentRef.hostView);\n\n        // 3. Get DOM element from component\n        const domElem = (this.selectionRangeComponentRef.hostView as EmbeddedViewRef<any>)\n            .rootNodes[0] as HTMLElement;\n\n        // 4. Append DOM element to the body\n\n        this.config.scrollableContainer.appendChild(domElem);\n    }\n\n    removeRangeComponent() {\n        this.appRef.detachView(this.selectionRangeComponentRef.hostView);\n        this.selectionRangeComponentRef.destroy();\n        this.selectionRangeComponentRef = null;\n    }\n\n    onStartPicKOut() {\n        this.pickOutCoordinator.startPickOut();\n\n        this.doc.activeElement.blur();\n\n        this.renderRangeComponent();\n\n        this.clearSelection();\n    }\n\n    onStopPickOut() {\n        if (this.pickOutAreaModel && this.pickOutAreaModel.isPickOutProcessInitialized) {\n            this.removeRangeComponent();\n\n            this.pickOutCoordinator.endPickOut();\n        }\n\n        this.pickOutAreaModel = null;\n    }\n\n    ngOnDestroy() {\n        this.doc.removeEventListener('mouseup', this.onMouseUpBound);\n        this.doc.removeEventListener('mousemove', this.onMouseMoveBound);\n        this.doc.removeEventListener('selectstart', this.onSelectionStartBound);\n        this.config.scrollableContainer.removeEventListener('scroll', this.onContainerScrollBound);\n    }\n\n    private clearSelection() {\n        window.getSelection().empty();\n    }\n\n    private findBrickIdByCoordinate(pageX: number, clientY: number): string {\n        let currentElement = document.elementFromPoint(pageX, clientY);\n\n        while (currentElement && currentElement.tagName !== 'WALL-CANVAS-BRICK') {\n            currentElement = currentElement.parentElement;\n        }\n\n        if (currentElement) {\n            // there is canvas bricks\n            return currentElement\n                .getElementsByClassName('wall-canvas-brick__wrapper')[0]\n                .getAttribute('id');\n        } else {\n            return null;\n        }\n    }\n\n    private isMouseOverDraggableElement(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement &&\n        !(currentElement as HTMLElement).draggable &&\n        !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\n\n@Injectable()\nexport class PickOutService {\n    events: Subject<any> = new Subject();\n\n    constructor(private pickOutHandlerService: PickOutCoordinator) {\n        this.pickOutHandlerService.changes.subscribe((e) => {\n            this.events.next(e);\n        });\n    }\n\n    enablePickOut() {\n        this.pickOutHandlerService.enablePickOut();\n    }\n\n    disablePickOut() {\n        this.pickOutHandlerService.disablePickOut();\n    }\n\n    stopPickOut() {\n        this.pickOutHandlerService.stopPickOut();\n    }\n\n    subscribe(fn): Subscription {\n        return this.events.subscribe(fn);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {PickOutAreaComponent} from './pick-out-area/pick-out-area.component';\nimport {PickOutAreaDirective} from './pick-out-area/pick-out-area.directive';\nimport {PickOutCoordinator} from './pick-out-coordinator.service';\nimport {PickOutService} from './pick-out.service';\nimport {RadarModule} from '../radar/radar.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RadarModule\n    ],\n\n    declarations: [\n        PickOutAreaComponent,\n        PickOutAreaDirective\n    ],\n\n    providers: [\n        PickOutService,\n        PickOutCoordinator\n    ],\n\n    exports: [\n        PickOutAreaDirective\n    ],\n\n    entryComponents: [\n        PickOutAreaComponent\n    ]\n})\n\nexport class PickOutModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {WallModelFactory} from './factory/wall-model.factory';\nimport {BrickRegistry} from './registry/brick-registry.service';\nimport {MatIconModule} from '@angular/material';\nimport {PlaceholderRendererModule} from '../modules/components/placeholder-renderer/placeholder-renderer.module';\nimport {WallCanvasBrickComponent} from './components/wall-canvas/components/wall-canvas-brick/wall-canvas-brick.component';\nimport {WallCanvasRowComponent} from './components/wall-canvas/components/wall-canvas-row/wall-canvas-row.component';\nimport {WallCanvasComponent} from './components/wall-canvas/wall-canvas.component';\nimport {WallComponent} from './components/wall/wall.component';\nimport {TowModule} from '../modules/tow/tow.module';\nimport {RadarModule} from '../modules/radar/radar.module';\nimport {PickOutModule} from '../modules/pick-out/pick-out.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PickOutModule,\n        TowModule,\n        RadarModule,\n        PlaceholderRendererModule,\n        MatIconModule\n    ],\n\n    declarations: [\n        WallComponent,\n        WallCanvasComponent,\n        WallCanvasRowComponent,\n        WallCanvasBrickComponent\n    ],\n\n    exports: [\n        WallComponent\n    ]\n})\nexport class WallModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: WallModule,\n            providers: [\n                BrickRegistry,\n                WallModelFactory\n            ]\n        };\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'w-brick-input-placeholder',\n    templateUrl: './brick-input-placeholder.component.html',\n    styleUrls: ['./brick-input-placeholder.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BrickInputPlaceholderComponent implements OnInit {\n    @Input() text: string;\n    @Input() icon: string;\n    @Input() loading: boolean;\n    @Output() selected: EventEmitter<MouseEvent> = new EventEmitter();\n\n    constructor() {\n    }\n\n    onClick(event: MouseEvent) {\n        this.selected.emit(event);\n    }\n\n    ngOnInit() {\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'w-loading-wrapper',\n    templateUrl: './loading-wrapper.component.html',\n    styleUrls: ['./loading-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingWrapperComponent implements OnInit {\n    @Input() message: string;\n\n    ngOnInit() {\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {BrickInputPlaceholderComponent} from './brick-input-placeholder/brick-input-placeholder.component';\nimport {LoadingWrapperComponent} from './loading-wrapper/loading-wrapper.component';\nimport {MatIconModule} from '@angular/material';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    exports: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    declarations: [\n        BrickInputPlaceholderComponent,\n        LoadingWrapperComponent,\n    ],\n    providers: []\n})\nexport class HelperComponentsModule {\n}\n","export const WALL = {\n    MODES: {\n        EDIT: 'edit',\n        READ: 'READ'\n    }\n};\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {IWallModel, IWallPlugin} from '../../wall/wall';\n\nexport class CopyPlugin implements IWallPlugin {\n    name: 'copy';\n    version: '0.0.0';\n\n    doc: Document = null;\n\n    onCopyBound: any;\n\n    wallModel: IWallModel;\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n\n        this.onCopyBound = this.onCopy.bind(this);\n\n        this.doc.addEventListener('copy', this.onCopyBound);\n    }\n\n    onWallInitialize(model: IWallModel) {\n        this.wallModel = model;\n    }\n\n    onCopy(e: ClipboardEvent) {\n        const selectedTextRepresentation = this.getSelectedTextRepresentation();\n\n        if (selectedTextRepresentation.length) {\n            e.preventDefault();\n\n            this.addToClipboard(e, selectedTextRepresentation);\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('click', this.onCopy);\n    }\n\n    private addToClipboard(e: ClipboardEvent, str: string) {\n        e.clipboardData.setData('text/plain', str);\n    }\n\n    private getSelectedTextRepresentation(): string {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        return selectedBrickIds\n            .map((selectedBrickId) => this.wallModel.api.core.getBrickTextRepresentation(selectedBrickId))\n            .map((textRepresentation) => textRepresentation.trim())\n            .join('\\n');\n    }\n}\n","export const UNDO_REDO_API_NAME = 'undo';\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BeforeChangeEvent, IWallDefinition, IWallModel, IWallPlugin, SetPlanEvent} from '../../wall/wall';\nimport {IUndoRedoApi} from './undo-redo-api.interface';\nimport {UNDO_REDO_API_NAME} from './undo-redo.constant';\n\nexport class UndoRedoPlugin implements IWallPlugin {\n    name: 'undoredo';\n    version: '0.0.0';\n\n    private wallModel: IWallModel;\n\n    private doc: Document;\n\n    private onUndoKeyHandlerBound: any;\n\n    private apiSubscription: Subscription;\n\n    private processingUndo = false;\n\n    private undoPlanStack: IWallDefinition[] = [];\n    private redoPlanStack: IWallDefinition[] = [];\n\n    constructor(private injector: Injector) {\n        this.doc = this.injector.get(DOCUMENT);\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.wallModel.registerApi(UNDO_REDO_API_NAME, {\n            undo: this.undo.bind(this),\n            undoSize: this.undoSize.bind(this),\n            redo: this.redo.bind(this),\n            redoSize: this.redoSize.bind(this),\n            clear: this.clear.bind(this)\n        } as IUndoRedoApi);\n\n        this.apiSubscription = this.wallModel.api.core.subscribe((e) => {\n            this.wallModelEventHandler(e);\n        });\n\n        this.onUndoKeyHandlerBound = this.onUndoKeyHandler.bind(this);\n\n        this.doc.addEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    onWallPluginDestroy() {\n        this.apiSubscription.unsubscribe();\n\n        this.doc.removeEventListener('keydown', this.onUndoKeyHandlerBound);\n    }\n\n    private onUndoKeyHandler(e: KeyboardEvent) {\n        const CTRL_KEY = 90;\n\n        if (e.keyCode === CTRL_KEY && e.ctrlKey) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (e.shiftKey) {\n                this.redo();\n            } else {\n                this.undo();\n            }\n        }\n    }\n\n    private undoSize(): number {\n        return this.undoPlanStack.length;\n    }\n\n    private redoSize(): number {\n        return this.redoPlanStack.length;\n    }\n\n    private wallModelEventHandler(e: any): void {\n        if (!this.processingUndo) {\n            if (e instanceof BeforeChangeEvent && (e as BeforeChangeEvent).beforeEventType !== SetPlanEvent) {\n                this.undoPlanStack.push(this.wallModel.api.core.getPlan());\n\n                this.redoPlanStack = [];\n            }\n        }\n    }\n\n    private redo() {\n        const redoPlan = this.redoPlanStack.pop();\n\n        if (redoPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(redoPlan);\n\n            this.undoPlanStack.push(redoPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private undo() {\n        const previousPlan = this.undoPlanStack.pop();\n\n        if (previousPlan) {\n            this.processingUndo = true;\n\n            this.wallModel.api.core.setPlan(previousPlan);\n\n            this.redoPlanStack.push(previousPlan);\n\n            this.processingUndo = false;\n        }\n    }\n\n    private clear() {\n        this.undoPlanStack = [];\n        this.redoPlanStack = [];\n    }\n}\n","export const TOW = {\n    dropTypes: {\n        horizontal: 'horizontal',\n        vertical: 'vertical'\n    },\n\n    dropSides: {\n        left: 'left',\n        right: 'right',\n        top: 'top',\n        bottom: 'bottom'\n    }\n};\n","import {DOCUMENT} from '@angular/common';\nimport {Injector} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {Radar} from '../../modules/radar/radar.service';\nimport {SpotModel} from '../../modules/radar/spot.model';\nimport {PickOutService} from '../../modules/pick-out/pick-out.service';\nimport {StartPickOut} from '../../modules/pick-out/events/start-pick-out.event';\nimport {PickOutItems} from '../../modules/pick-out/events/pick-out-items.event';\nimport {EndPickOut} from '../../modules/pick-out/events/end-pick-out.event';\nimport {IWallPlugin} from '../../wall/model/interfaces/wall-plugin.interface';\nimport {IWallModel} from '../../wall/model/interfaces/wall-model.interface';\nimport {TowService} from '../../modules/tow/tow.service';\nimport {TOW} from '../../modules/tow/tow.constant';\nimport {StopWorkingEvent} from '../../modules/tow/events/stop-working.event';\nimport {WorkInProgressEvent} from '../../modules/tow/events/work-in-progress.event';\nimport {StartWorkingEvent} from '../../modules/tow/events/start-working.event';\nimport {PlaceholderRenderer} from '../../modules/components/placeholder-renderer/placeholder-renderer.service';\n\nexport interface ISelectionOptions {\n    shouldUnselectBrick: (e: MouseEvent) => boolean;\n}\n\nexport class SelectionPlugin implements IWallPlugin {\n    name: 'selection';\n    version: '0.0.0';\n\n    doc: Document;\n\n    isMouseSelection = false;\n    onMouseDownBound: any;\n    onKeyDownHandlerBound: any;\n\n    wallModel: IWallModel;\n\n    private pickOutService: PickOutService;\n    private radar: Radar;\n    private towService: TowService;\n    private placeholderRenderer: PlaceholderRenderer;\n\n    private nearestBrickToDrop: {\n        spot: SpotModel;\n        type: string;\n        side: string;\n    };\n    private placeholderHeight = 2;\n    private isEnableDropZoneHighlight = false;\n\n    private towServiceSubscription: Subscription;\n    private pickOutServiceSubscription: Subscription;\n\n    private options: ISelectionOptions;\n\n    constructor(private injector: Injector, options?: ISelectionOptions) {\n        // extension point for client to prevent brick un-selections\n        this.options = {\n            shouldUnselectBrick: () => true,\n            ...options\n        };\n    }\n\n    onWallInitialize(wallModel: IWallModel) {\n        this.wallModel = wallModel;\n\n        this.doc = this.injector.get(DOCUMENT);\n        this.pickOutService = this.injector.get(PickOutService);\n        this.radar = this.injector.get(Radar);\n        this.placeholderRenderer = this.injector.get(PlaceholderRenderer);\n        this.towService = this.injector.get(TowService);\n\n        this.onMouseDownBound = this.onMouseDown.bind(this);\n        this.onKeyDownHandlerBound = this.onKeyDownHandler.bind(this);\n\n        this.doc.addEventListener('mousedown', this.onMouseDownBound);\n        this.doc.addEventListener('keydown', this.onKeyDownHandlerBound);\n\n        // listen to picked out items and select appropriate bricks\n        this.pickOutServiceSubscription = this.pickOutService.subscribe((e) => {\n            if (e instanceof StartPickOut) {\n                this.isMouseSelection = true;\n\n                this.wallModel.api.ui.disableMediaInteraction();\n            }\n\n            if (e instanceof PickOutItems) {\n                this.wallModel.api.ui.selectBricks(e.ids);\n            }\n\n            if (e instanceof EndPickOut) {\n                this.wallModel.api.ui.enableMediaInteraction();\n            }\n        });\n\n        // listen for draggable operation and move bricks accordingly\n        this.towServiceSubscription = this.towService.subscribe((e) => {\n            if (e instanceof StartWorkingEvent) {\n                if (this.wallModel.api.core.getBrickSnapshot(e.slaveId)) {\n                    this.isEnableDropZoneHighlight = true;\n                } else {\n                    this.isEnableDropZoneHighlight = false;\n                }\n\n                this.nearestBrickToDrop = null;\n                this.placeholderRenderer.clear();\n            }\n\n            if (e instanceof StopWorkingEvent && this.nearestBrickToDrop) {\n                if (this.isEnableDropZoneHighlight) {\n                    let movedBrickIds = [];\n\n                    const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n                    if (selectedBrickIds.length > 1) {\n                        movedBrickIds = movedBrickIds.concat(selectedBrickIds);\n                    } else {\n                        movedBrickIds.push(e.slaveId);\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.horizontal) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.top) {\n                            this.wallModel.api.core.moveBrickBeforeBrickId(\n                                movedBrickIds,\n                                this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.bottom) {\n                            this.wallModel.api.core.moveBrickAfterBrickId(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId\n                            );\n                        }\n                    }\n\n                    if (this.nearestBrickToDrop.type === TOW.dropTypes.vertical) {\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.left) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.left\n                            );\n                        }\n\n                        if (this.nearestBrickToDrop.side === TOW.dropSides.right) {\n                            this.wallModel.api.core.moveBrickToNewColumn(\n                                movedBrickIds, this.nearestBrickToDrop.spot.data.brickId, TOW.dropSides.right\n                            );\n                        }\n                    }\n\n                    this.nearestBrickToDrop = null;\n\n                    this.placeholderRenderer.clear();\n                }\n            }\n\n            if (e instanceof WorkInProgressEvent) {\n                if (this.isEnableDropZoneHighlight) {\n                    const spots = this.radar.filterSpots((spot: SpotModel) => spot.data.isBeacon);\n\n                    let nearestSpot: SpotModel;\n\n                    spots.forEach((spot) => {\n                        spot.updateInfo();\n\n                        if (!nearestSpot) {\n                            nearestSpot = spot;\n                        } else {\n                            const currentSpotMinimalDistance = spot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                                e.mousePosition.clientX,\n                                e.mousePosition.clientY\n                            );\n\n                            if (currentSpotMinimalDistance < nearestSpotMinimalDistance) {\n                                nearestSpot = spot;\n                            }\n                        }\n                    });\n\n                    if (nearestSpot) {\n                        const nearestSpotMinimalDistance = nearestSpot.getMinimalDistanceToPoint(\n                            e.mousePosition.clientX,\n                            e.mousePosition.clientY\n                        );\n\n                        if (nearestSpotMinimalDistance < 50) {\n                            this.nearestBrickToDrop = {\n                                spot: nearestSpot,\n                                side: null,\n                                type: null\n                            };\n\n                            if (e.mousePosition.clientX < nearestSpot.position.x) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.left;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.vertical;\n                                this.nearestBrickToDrop.side = TOW.dropSides.right;\n                            }\n\n                            if (e.mousePosition.clientX > nearestSpot.position.x &&\n                                e.mousePosition.clientX < nearestSpot.position.x + nearestSpot.size.width) {\n                                this.nearestBrickToDrop.type = TOW.dropTypes.horizontal;\n\n                                const centerYPosition = nearestSpot.position.y + (nearestSpot.size.height / 2);\n\n                                this.nearestBrickToDrop.side = e.mousePosition.clientY < centerYPosition ?\n                                    TOW.dropSides.top : TOW.dropSides.bottom;\n                            }\n\n                            this.renderPlaceholder();\n                        } else {\n                            this.nearestBrickToDrop = null;\n\n                            this.placeholderRenderer.clear();\n                        }\n                    } else {\n                        this.nearestBrickToDrop = null;\n\n                        this.placeholderRenderer.clear();\n                    }\n                }\n            }\n        });\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (!this.isMouseOverDraggableBox(e.clientX, e.clientY) && this.options.shouldUnselectBrick(e)) {\n            this.wallModel.api.ui.unSelectBricks();\n        }\n    }\n\n    onKeyDownHandler(e: KeyboardEvent) {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n        const firstSelectedBrickId = selectedBrickIds[0];\n        const lastSelectedBrickId = selectedBrickIds[selectedBrickIds.length - 1];\n\n        if (e.key === 'Delete' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.unSelectBricks();\n\n            this.wallModel.api.ui.removeBricks(selectedBrickIds);\n        }\n\n        if (e.key === 'Enter' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            this.wallModel.api.ui.focusOnBrickId(firstSelectedBrickId);\n\n            this.wallModel.api.ui.unSelectBricks();\n        }\n\n        if (e.key === 'ArrowUp' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const previousBrickId = this.wallModel.api.core.getPreviousBrickId(lastSelectedBrickId);\n\n            if (previousBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(previousBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(previousBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'ArrowDown' && selectedBrickIds.length) {\n            e.preventDefault();\n\n            const nextBrickId = this.wallModel.api.core.getNextBrickId(lastSelectedBrickId);\n\n            if (nextBrickId) {\n                if (e.shiftKey) {\n                    if (selectedBrickIds.length > 1 && !this.isDownSelectionDirection()) {\n                        this.wallModel.api.ui.removeBrickFromSelection(lastSelectedBrickId);\n                    } else {\n                        this.wallModel.api.ui.addBrickToSelection(nextBrickId);\n                    }\n                } else {\n                    this.wallModel.api.ui.selectBrick(nextBrickId);\n                }\n            }\n        }\n\n        if (e.key === 'Escape') {\n            e.preventDefault();\n\n            if (selectedBrickIds.length) {\n                this.wallModel.api.ui.unSelectBricks();\n            }\n        }\n    }\n\n    onWallPluginDestroy() {\n        this.doc.removeEventListener('mousedown', this.onMouseDownBound);\n        this.doc.removeEventListener('keydown', this.onKeyDownHandlerBound);\n\n        this.wallModel = null;\n        this.pickOutServiceSubscription.unsubscribe();\n        this.towServiceSubscription.unsubscribe();\n    }\n\n    private isMouseOverDraggableBox(clientX: number, clientY: number): boolean {\n        let currentElement = document.elementFromPoint(clientX, clientY);\n\n        while (currentElement && !currentElement.classList.contains('wall-canvas-brick__draggable-box')) {\n            currentElement = currentElement.parentElement;\n        }\n\n        return Boolean(currentElement);\n    }\n\n    private isDownSelectionDirection(): boolean {\n        const selectedBrickIds = this.wallModel.api.ui.getSelectedBrickIds();\n\n        const bricksCount = selectedBrickIds.length;\n\n        const lastBrickId = selectedBrickIds[bricksCount - 1];\n        const penultimateBrickId = selectedBrickIds[bricksCount - 2];\n\n        return this.wallModel.api.core.isBrickAheadOf(penultimateBrickId, lastBrickId);\n    }\n\n    private renderPlaceholder() {\n        let placeholderX;\n        let placeholderY;\n        let placeholderSize;\n        let placeholderIsHorizontal;\n\n        const spot = this.nearestBrickToDrop.spot;\n        const side = this.nearestBrickToDrop.side;\n        const type = this.nearestBrickToDrop.type;\n\n        if (type === TOW.dropTypes.horizontal) {\n            placeholderX = spot.position.x;\n            placeholderSize = spot.size.width;\n\n            if (side === TOW.dropSides.top) {\n                placeholderY = spot.position.y - this.placeholderHeight;\n            }\n\n            if (side === TOW.dropSides.bottom) {\n                placeholderY = spot.position.y + spot.size.height;\n            }\n\n            placeholderIsHorizontal = true;\n        }\n\n        if (type === TOW.dropTypes.vertical) {\n            placeholderY = spot.position.y;\n            placeholderSize = spot.size.height;\n            placeholderIsHorizontal = false;\n\n            if (side === TOW.dropSides.left) {\n                placeholderX = spot.position.x;\n            }\n\n            if (side === TOW.dropSides.right) {\n                placeholderX = spot.position.x + spot.size.width;\n            }\n        }\n\n        this.placeholderRenderer.render(placeholderX, placeholderY, placeholderSize, placeholderIsHorizontal);\n    }\n}\n","export const DIVIDER_BRICK_TAG = 'divider';\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'divider-brick',\n    templateUrl: './divider-brick.component.html',\n    styleUrls: ['./divider-brick.component.scss']\n})\n\nexport class DividerBrickComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {BrickRegistry} from '../../wall/wall';\nimport {DividerBrickComponent} from './component/divider-brick.component';\nimport {DIVIDER_BRICK_TAG} from './divider-brick.constant';\n\n@NgModule({\n    exports: [DividerBrickComponent],\n    declarations: [DividerBrickComponent],\n    entryComponents: [DividerBrickComponent]\n})\nexport class DividerBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: DIVIDER_BRICK_TAG,\n            component: DividerBrickComponent,\n            name: 'Divider',\n            description: 'Visually divide blocks'\n        });\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IBaseTextState} from './base-text-state.interface';\n\nexport class TextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return (this.brickSnapshot.state as IBaseTextState).text;\n    }\n}\n","export class DeepLeftNodeChild {\n    child: Node;\n\n    constructor(root: Node) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[0];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class DeepRightNodeChild {\n    child: Node;\n\n    constructor(root: HTMLElement) {\n        let currentNode: Node = root;\n\n        while (currentNode.childNodes.length) {\n            currentNode = currentNode.childNodes[currentNode.childNodes.length - 1];\n        }\n\n        this.child = currentNode;\n    }\n}\n","export class FirstSubStringNode {\n    firstLevelSubStringNodes: Node[] = [];\n\n    private readonly subString: string;\n\n    constructor(private root: HTMLElement, private subStringHTML: string) {\n        // get text representation\n        this.subString = this.getSubStringTextContent();\n\n        if (subStringHTML.length !== 0) {\n            if (this.root.childNodes.length === 1) {\n                this.firstLevelSubStringNodes = Array.from(this.root.childNodes);\n\n            } else if (this.root.childNodes.length > 1) {\n                this.firstLevelSubStringNodes = this.findFirstLevelSubStringNodes();\n            }\n        }\n    }\n\n    private findFirstLevelSubStringNodes() {\n        let i = this.root.childNodes.length - 1;\n        let currentNode = this.root.childNodes[i];\n        let text = '';\n        const firstLevelSubStringNodes = [];\n\n        while (currentNode && !text.includes(this.subString)) {\n            text = currentNode.textContent + text;\n\n            firstLevelSubStringNodes.push(currentNode);\n\n            i--;\n            currentNode = this.root.childNodes[i];\n        }\n\n        return firstLevelSubStringNodes.reverse();\n    }\n\n    private getSubStringTextContent(): string {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.subStringHTML;\n\n        return pNode.textContent;\n    }\n}\n","export class CaretStartEndPosition {\n    constructor(private el: Node) {\n    }\n\n    isCaretAtEnd(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setStart(selRange.endContainer, selRange.endOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n\n    isCaretAtStart(): boolean {\n        let result = false;\n        const sel = window.getSelection();\n\n        if (sel.rangeCount) {\n            const selRange = sel.getRangeAt(0);\n            const testRange = selRange.cloneRange();\n\n            testRange.selectNodeContents(this.el);\n            testRange.setEnd(selRange.startContainer, selRange.startOffset);\n            result = (testRange.toString().trim() === '');\n        }\n\n        return result;\n    }\n}\n","export class CursorLeftCoordinate {\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n    }\n\n    get(): number {\n        const div = this.createElementClone(this.targetNode);\n        const span = document.createElement('SPAN');\n\n        div.innerHTML = this.leftText;\n        span.innerHTML = this.rightText;\n\n        div.appendChild(span);\n\n        // make sure element stay at top left corner\n        div.style.position = 'absolute';\n        div.style.top = '0';\n        div.style.left = '0';\n        div.style.padding = '0';\n        div.style.margin = '0';\n\n        document.body.appendChild(div);\n\n        const leftCoordinate = span.offsetLeft;\n\n        div.remove();\n\n        return leftCoordinate;\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class CursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n\n    constructor(private leftText: string, private rightText: string, private targetNode: HTMLElement) {\n        if (leftText === '' && rightText === '') {\n            this.isOnFirstLine = true;\n            this.isOnLastLine = true;\n        } else {\n            // http://jsbin.com/qifezupu/31/edit?js,output\n\n            const div = this.createElementClone(this.targetNode);\n\n            document.body.appendChild(div);\n\n            const span1 = document.createElement('SPAN');\n            const span2 = document.createElement('SPAN');\n\n            div.appendChild(span1);\n            div.appendChild(span2);\n\n            span1.innerText = 'a';\n\n            const lh = span1.offsetHeight;\n\n            span1.innerHTML = leftText;\n            span2.innerHTML = rightText;\n\n            this.isOnFirstLine = span1.textContent.length === 0 ||\n                (span1.offsetHeight === lh && span1.getBoundingClientRect().top === span2.getBoundingClientRect().top);\n\n            this.isOnLastLine = span2.offsetHeight === lh;\n\n            div.remove();\n        }\n    }\n\n    private createElementClone(node: HTMLElement): HTMLElement {\n        const div = document.createElement('DIV');\n\n        const style = getComputedStyle(node);\n\n        [].forEach.call(style, (prop) => {\n            div.style[prop] = style[prop];\n        });\n\n        return div;\n    }\n}\n","export class PlaceCaretToPosition {\n    constructor(private el: Node, private position: number) {\n    }\n\n    place() {\n        const range = document.createRange();\n        const sel = window.getSelection();\n\n        range.setStart(this.el, this.position);\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n","/**\n * Returns string which does not contains empty nodes inside\n */\nexport class StringWithoutEmptyNodes {\n    constructor(private str: string) {\n    }\n\n    get() {\n        const pNode = document.createElement('P');\n\n        pNode.innerHTML = this.str;\n\n        if (!pNode.textContent.trim().length) {\n            // there are no text itself, so replace any tags to empty string\n            return '';\n        } else {\n            return this.str;\n        }\n    }\n}\n","export const FOCUS_INITIATOR = 'text-supporting-brick';\n\nexport const ENTER_KEY = 'Enter';\nexport const NUMPUB_ENTER_KEY = 'NumpadEnter';\nexport const ENTER_KEY_CODE_ANDROID = 13;\nexport const DELETE_KEY = 'Delete';\nexport const BACK_SPACE_KEY = 'Backspace';\nexport const BACK_SPACE_KEY_CODE_ANDROID = 8;\nexport const LEFT_KEY = 'ArrowLeft';\nexport const TOP_KEY = 'ArrowUp';\nexport const RIGHT_KEY = 'ArrowRight';\nexport const BOTTOM_KEY = 'ArrowDown';\nexport const ESCAPE_KEY = 27;\nexport const TAB_KEY = 'Tab';\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class BottomKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        if (this.baseTextBrickComponent.isCaretAtLastLine()) {\n            e.preventDefault();\n\n            const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    bottomKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {BaseTextBrickComponent} from '../base-text-brick.component';\n\nexport class EnterKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const sel = window.getSelection();\n\n        const splittedText = this.baseTextBrickComponent.getSplittedText(\n            sel.focusOffset,\n            sel.focusNode\n        );\n\n        splittedText.left = this.baseTextBrickComponent.cleanUpText(splittedText.left);\n        splittedText.right = this.baseTextBrickComponent.cleanUpText(splittedText.right);\n\n        if (splittedText.left.length) {\n            if (splittedText.right.length) {\n                // text is splitted to two part\n                this.splitBrickForTwoPart(splittedText.left, splittedText.right);\n            } else {\n                // cursor at end - text's exist - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        } else {\n            if (splittedText.right.length) {\n                // cursor at start, text exists - just create new line at top, do not move focus\n                this.addEmptyTextBrickBefore();\n            } else {\n                // there are no text at all - create new and focus on it\n                this.addEmptyBrickAfter();\n            }\n        }\n    }\n\n    private splitBrickForTwoPart(left: string, right: string) {\n        this.addBrickAfter(right);\n\n        this.baseTextBrickComponent.setTextState(left);\n        this.baseTextBrickComponent.saveCurrentState();\n    }\n\n    private addEmptyTextBrickBefore() {\n        const newTextState = {\n            text: '',\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        this.baseTextBrickComponent.wallModel.api.core\n            .addBrickBeforeBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // scroll browser view to element\n        this.baseTextBrickComponent.editor.nativeElement.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'start'\n        });\n    }\n\n    private addEmptyBrickAfter() {\n        // cursor at end - text's exist - create new and focus on it\n        this.addBrickAfter('');\n    }\n\n    private addBrickAfter(text: string) {\n        const newTextState = {\n            text: text,\n            tabs: this.baseTextBrickComponent.scope.tabs\n        };\n\n        const addedBrick = this.baseTextBrickComponent.wallModel.api.core\n            .addBrickAfterBrickId(this.baseTextBrickComponent.id, 'text', newTextState);\n\n        // wait one tick for component rendering\n        setTimeout(() => {\n            this.baseTextBrickComponent.wallUiApi.focusOnBrickId(addedBrick.id);\n        });\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class LeftKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                leftKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi\n            .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class RightKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const focusContext: IFocusContext = {\n            initiator: FOCUS_INITIATOR,\n            details: {\n                rightKey: true\n            }\n        };\n\n        this.baseTextBrickComponent.wallUiApi.focusOnNextTextBrick(this.baseTextBrickComponent.id, focusContext);\n    }\n}\n","import {IFocusContext} from '../../../wall/wall';\nimport {BaseTextBrickComponent} from '../base-text-brick.component';\nimport {FOCUS_INITIATOR} from '../base-text-brick.constant';\n\nexport class TopKeyHandler {\n    constructor(private baseTextBrickComponent: BaseTextBrickComponent) {\n    }\n\n    execute(e: KeyboardEvent) {\n        const caretLeftCoordinate = this.baseTextBrickComponent.getCaretLeftCoordinate();\n\n        if (this.baseTextBrickComponent.isCaretAtFirstLine()) {\n            e.preventDefault();\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    topKey: true,\n                    caretLeftCoordinate\n                }\n            };\n\n            this.baseTextBrickComponent.wallModel.api.ui\n                .focusOnPreviousTextBrick(this.baseTextBrickComponent.id, focusContext);\n        }\n    }\n}\n","import {ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {DeepLeftNodeChild} from '../../modules/utils/deep-left-node-child';\nimport {DeepRightNodeChild} from '../../modules/utils/deep-right-node-child';\nimport {FirstSubStringNode} from '../../modules/utils/first-sub-string-node';\nimport {CaretStartEndPosition} from '../../modules/utils/node/caret-start-end-position';\nimport {CursorLeftCoordinate} from '../../modules/utils/node/cursor-left-coordinate';\nimport {CursorPositionInLine} from '../../modules/utils/node/cursor-position-in-line';\nimport {PlaceCaretToPosition} from '../../modules/utils/node/place-caret-to-position';\nimport {StringWithoutEmptyNodes} from '../../modules/utils/node/string-without-empty-nodes';\nimport {IFocusContext, IOnWallFocus, IOnWallStateChange, IWallComponent, IWallModel, IWallUiApi} from '../../wall/wall';\nimport {\n    BACK_SPACE_KEY,\n    BACK_SPACE_KEY_CODE_ANDROID,\n    BOTTOM_KEY,\n    DELETE_KEY,\n    ENTER_KEY,\n    ENTER_KEY_CODE_ANDROID,\n    ESCAPE_KEY,\n    FOCUS_INITIATOR,\n    LEFT_KEY,\n    NUMPUB_ENTER_KEY,\n    RIGHT_KEY,\n    TAB_KEY,\n    TOP_KEY\n} from './base-text-brick.constant';\nimport {IBaseTextState} from './base-text-state.interface';\nimport {BottomKeyHandler} from './keypress-handlers/bottom-key.handler';\nimport {EnterKeyHandler} from './keypress-handlers/enter-key.handler';\nimport {LeftKeyHandler} from './keypress-handlers/left-key.handler';\nimport {RightKeyHandler} from './keypress-handlers/right-key.handler';\nimport {TopKeyHandler} from './keypress-handlers/top-key.handler';\n\nenum LineType {\n    first = 'FIRST',\n    last = 'LAST'\n}\n\nexport interface ICursorPositionInLine {\n    isOnLastLine: boolean;\n    isOnFirstLine: boolean;\n}\n\nexport abstract class BaseTextBrickComponent implements OnInit, OnDestroy, IOnWallStateChange, IOnWallFocus, IWallComponent {\n    @Input() id: string;\n    @Input() state: IBaseTextState;\n    @Input() wallModel: IWallModel;\n\n    @Output() stateChanges: EventEmitter<IBaseTextState> = new EventEmitter();\n\n    @ViewChild('editor') editor: ElementRef;\n\n    keypressHandlers = {\n        top: new TopKeyHandler(this),\n        enter: new EnterKeyHandler(this),\n        left: new LeftKeyHandler(this),\n        right: new RightKeyHandler(this),\n        bottom: new BottomKeyHandler(this)\n    };\n\n    wallUiApi: IWallUiApi;\n\n    scope: IBaseTextState = {\n        text: '',\n        tabs: 0\n    };\n\n    maxTabNumber = 3;\n\n    textChange: Subject<string> = new Subject();\n\n    textChangeSubscription: Subscription;\n\n    onPasteBound: (e: ClipboardEvent) => any;\n\n    ngOnInit() {\n        if (this.state && this.state.text !== this.scope.text) {\n            this.setTextState(this.state.text);\n        }\n\n        this.scope.tabs = this.state.tabs || 0;\n\n        this.onPasteBound = this.onPaste.bind(this);\n\n        this.editor.nativeElement.addEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription = this.textChange.subscribe(() => {\n            this.setTextState(this.scope.text);\n            this.saveCurrentState();\n        });\n\n        this.wallUiApi = this.wallModel.api.ui;\n    }\n\n    onWallStateChange(newState: IBaseTextState) {\n        this.scope.tabs = this.state.tabs || this.scope.tabs;\n\n        if (newState && newState.text !== this.scope.text) {\n            this.setTextState(newState.text);\n        }\n    }\n\n    ngOnDestroy() {\n        this.editor.nativeElement.removeEventListener('paste', this.onPasteBound);\n\n        this.textChangeSubscription.unsubscribe();\n    }\n\n    onPaste(e: ClipboardEvent) {\n        e.preventDefault();\n\n        const textArr = e.clipboardData.getData('text/plain')\n            .split('\\n')\n            .map((str) => str.trim())\n            .filter((str) => str.length);\n\n        if (textArr.length === 1) {\n            document.execCommand('insertHTML', false, textArr[0]);\n        } else if (textArr.length > 1) {\n            // todo: add interface for UI api\n            textArr.reverse().forEach((text) => this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text', {text}));\n        }\n    }\n\n    onTextChange() {\n        this.textChange.next(this.scope.text);\n    }\n\n    // general handler of all key events\n    onKeyPress(e: KeyboardEvent) {\n        if (this.noMetaKeyIsPressed(e)) {\n            if (e.code === TOP_KEY) {\n                this.topKeyPressed(e);\n            }\n\n            if (e.code === BOTTOM_KEY) {\n                this.bottomKeyPressed(e);\n            }\n\n            if (e.code === LEFT_KEY && this.isCaretAtStart()) {\n                this.leftKeyPressed(e);\n            }\n\n            if (e.code === RIGHT_KEY && this.isCaretAtEnd()) {\n                this.rightKeyPressed(e);\n            }\n\n            if (e.code === ENTER_KEY || e.keyCode === ENTER_KEY_CODE_ANDROID || e.code === NUMPUB_ENTER_KEY) {\n                this.enterKeyPressed(e);\n            }\n\n            if (e.keyCode === ESCAPE_KEY) {\n                this.escapeKeyPressed(e);\n            }\n\n            if ((e.code === BACK_SPACE_KEY || e.keyCode === BACK_SPACE_KEY_CODE_ANDROID) && !this.isTextSelected()) {\n                this.backSpaceKeyPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text.length && this.isCaretAtEnd() && !this.isTextSelected()) {\n                this.concatWithNextTextSupportingBrick(e);\n            }\n\n            if (e.code === TAB_KEY && this.isCaretAtStart()) {\n                this.onTabPressed(e);\n            }\n\n            if (e.code === DELETE_KEY && this.scope.text === '') {\n                this.onDeleteAndFocusToNext(e);\n            }\n        }\n    }\n\n    proxyToKeyHandler(keyHandlerName: string, e: KeyboardEvent) {\n        this.keypressHandlers[keyHandlerName].execute(e);\n    }\n\n    // key handler\n    topKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('top', e);\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('bottom', e);\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('enter', e);\n    }\n\n    leftKeyPressed(e: KeyboardEvent) {\n        this.proxyToKeyHandler('left', e);\n    }\n\n    rightKeyPressed(e) {\n        this.proxyToKeyHandler('right', e);\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        // do nothing\n    }\n\n    onTabPressed(e: KeyboardEvent) {\n        e.preventDefault();\n\n        this.increaseTab();\n        this.saveCurrentState();\n    }\n\n    backSpaceKeyPressed(e: KeyboardEvent) {\n        if (this.isCaretAtStart()) {\n            if (this.scope.tabs) {\n                this.decreaseTab();\n                this.saveCurrentState();\n            } else {\n                if (this.scope.text.length) {\n                    this.concatWithPreviousTextSupportingBrick(e);\n                } else {\n                    this.onDeleteAndFocusToPrevious(e);\n                }\n            }\n        }\n    }\n\n    // end key handlers\n\n    isCaretAtFirstLine(): boolean {\n        return this.getCursorPositionInLine().isOnFirstLine;\n    }\n\n    isCaretAtLastLine(): boolean {\n        return this.getCursorPositionInLine().isOnLastLine;\n    }\n\n    getCaretLeftCoordinate(): number {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return (new CursorLeftCoordinate(leftRightText.left, leftRightText.right, this.editor.nativeElement)).get();\n    }\n\n    getCursorPositionInLine(): ICursorPositionInLine {\n        const sel = window.getSelection();\n        const leftRightText = this.getSplittedText(sel.focusOffset, sel.focusNode);\n\n        return new CursorPositionInLine(leftRightText.left, leftRightText.right, this.editor.nativeElement);\n    }\n\n    concatWithPreviousTextSupportingBrick(e) {\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        if (previousTextBrickId) {\n            e.preventDefault();\n\n            const previousBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(previousTextBrickId);\n\n            this.wallModel.api.core.updateBrickState(previousTextBrickId, {\n                text: this.cleanUpText(previousBrickSnapshot.state.text) + this.scope.text\n            });\n\n            // wait for component re-rendering\n            setTimeout(() => {\n                const focusContext: IFocusContext = {\n                    initiator: FOCUS_INITIATOR,\n                    details: {\n                        concatText: true,\n                        concatenationText: this.scope.text\n                    }\n                };\n\n                this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n\n                // remove only after focus will be established\n                // that prevents flickering on mobile\n                this.wallUiApi.removeBrick(this.id);\n            });\n        }\n    }\n\n    concatWithNextTextSupportingBrick(e: Event) {\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            e.preventDefault();\n\n            const nextTextBrickSnapshot = this.wallModel.api.core.getBrickSnapshot(nextTextBrickId);\n\n            const concatenationText = nextTextBrickSnapshot.state.text || '';\n\n            this.setTextState(this.scope.text + concatenationText);\n\n            this.saveCurrentState();\n\n            this.wallModel.api.core.removeBrick(nextTextBrickId);\n\n            setTimeout(() => {\n                this.placeCaretBaseOnConcatenatedText(concatenationText);\n            }, 10);\n        }\n    }\n\n    onDeleteAndFocusToPrevious(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const previousTextBrickId = this.wallModel.api.core.getPreviousTextBrickId(this.id);\n\n        this.wallUiApi.removeBrick(this.id);\n\n        if (previousTextBrickId) {\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(previousTextBrickId, focusContext);\n        }\n    }\n\n    onDeleteAndFocusToNext(e: KeyboardEvent) {\n        e.preventDefault();\n\n        const nextTextBrickId = this.wallModel.api.core.getNextTextBrickId(this.id);\n\n        if (nextTextBrickId) {\n            this.wallUiApi.removeBrick(this.id);\n\n            const focusContext: IFocusContext = {\n                initiator: FOCUS_INITIATOR,\n                details: {\n                    deletePreviousText: true\n                }\n            };\n\n            this.wallUiApi.focusOnBrickId(nextTextBrickId, focusContext);\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        return {\n            left: this.scope.text.slice(0, offset),\n            right: this.scope.text.slice(offset) || ''\n        };\n    }\n\n    // key handler end\n    onWallFocus(context?: IFocusContext): void {\n        if (this.editor.nativeElement !== document.activeElement) {\n            // focus by API call\n            this.editor.nativeElement.focus();\n\n            if (context && context.initiator === FOCUS_INITIATOR) {\n                if (context.details.deletePreviousText) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.concatText) {\n                    this.placeCaretBaseOnConcatenatedText(context.details.concatenationText);\n                }\n\n                if (context.details.leftKey) {\n                    this.placeCaretAtEnd();\n                }\n\n                if (context.details.rightKey) {\n                    this.placeCaretAtStart();\n                }\n\n                if (context.details.bottomKey || context.details.topKey) {\n                    const line = context.details.bottomKey ? LineType.first : LineType.last;\n\n                    this.placeCaretAtLeftCoordinate(context.details.caretLeftCoordinate, line);\n                }\n            }\n        }\n    }\n\n    setTextState(text: string = '') {\n        this.scope.text = this.cleanUpText(text);\n    }\n\n    increaseTab() {\n        if (this.scope.tabs < this.maxTabNumber) {\n            this.scope.tabs++;\n        }\n    }\n\n    decreaseTab() {\n        if (this.scope.tabs > 0) {\n            this.scope.tabs--;\n        }\n    }\n\n    saveCurrentState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    // caret helpers\n    isTextSelected(): boolean {\n        return !window.getSelection().isCollapsed;\n    }\n\n    placeCaretAtStart(): void {\n        const deepLeftNode = new DeepLeftNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeStart(deepLeftNode.child);\n    }\n\n    placeCaretAtEnd(): void {\n        const rightNode = new DeepRightNodeChild(this.editor.nativeElement);\n\n        this.placeCaretAtNodeEnd(rightNode.child);\n    }\n\n    placeCaretAtNodeStart(el: Node) {\n        this.placeCaretAtNodeToPosition(el, 0);\n    }\n\n    placeCaretAtNodeEnd(el: Node) {\n        this.placeCaretAtNodeToPosition(el, el.textContent.length);\n    }\n\n    placeCaretAtNodeToPosition(el: Node, position: number) {\n        (new PlaceCaretToPosition(el, position)).place();\n    }\n\n    // find the node which contains concatenated text and position in this node where cursor should be placed\n    placeCaretBaseOnConcatenatedText(concatenationText: string) {\n        if (concatenationText !== '') {\n            // find first level nodes for the text that was concatenated\n            const subStringNodes = new FirstSubStringNode(\n                this.editor.nativeElement,\n                concatenationText\n            );\n\n            // first level node which contains concatenated text\n            const firstLevelSubStringNode = subStringNodes.firstLevelSubStringNodes[0];\n\n            if (firstLevelSubStringNode) {\n                let focusNode;\n                let position;\n\n                if (firstLevelSubStringNode.nodeType === Node.TEXT_NODE) {\n                    // if first concatenated node is TEXT_NODE it might\n                    // be automatically concatenated with previous existing TEXT_NODE\n                    focusNode = firstLevelSubStringNode;\n\n                    // find text content for first concatenated TEXT_NODE\n                    const p = document.createElement('P');\n                    p.innerHTML = concatenationText;\n                    const firstLevelSubStringTextContent = p.childNodes[0].textContent;\n\n                    // finally find cursor position\n                    position = focusNode.textContent.length - firstLevelSubStringTextContent.length;\n                } else {\n                    focusNode = new DeepLeftNodeChild(firstLevelSubStringNode).child;\n\n                    position = 0;\n                }\n\n                this.placeCaretAtNodeToPosition(focusNode, position);\n            }\n        }\n    }\n\n    placeCaretAtLeftCoordinate(leftCoordinate: number, line: string) {\n        // todo: find the way to set caret based on coordinate number\n        if (line === LineType.last) {\n            this.placeCaretAtEnd();\n        } else {\n            this.placeCaretAtStart();\n        }\n    }\n\n    isCaretAtStart(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtStart();\n    }\n\n    isCaretAtEnd(): boolean {\n        return (new CaretStartEndPosition(this.editor.nativeElement)).isCaretAtEnd();\n    }\n\n    // remove all unnecessary tags\n    cleanUpText(text: string): string {\n        return (new StringWithoutEmptyNodes(text)).get();\n    }\n\n    private noMetaKeyIsPressed(e): boolean {\n        return !((e.shiftKey || e.altKey || e.ctrlKey || e.metaKey));\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'header-brick',\n    templateUrl: './header-brick.component.html',\n    styleUrls: ['./header-brick.component.scss']\n})\nexport class HeaderBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Header';\n}\n","import {Directive, ElementRef, HostListener, Input, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Directive({\n    selector: '[contenteditable]',\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: ContenteditableDirective, multi: true}\n    ]\n})\nexport class ContenteditableDirective implements ControlValueAccessor {\n    @Input() propValueAccessor: string = 'textContent';\n\n    private onChange: (value: string) => void;\n    private onTouched: () => void;\n    private removeDisabledState: () => void;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    }\n\n    @HostListener('input')\n    callOnChange() {\n        if (typeof this.onChange === 'function') {\n            this.onChange(this.elementRef.nativeElement[this.propValueAccessor]);\n        }\n    }\n\n    @HostListener('blur')\n    callOnTouched() {\n        if (typeof this.onTouched === 'function') {\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Writes a new value to the element.\n     * This method will be called by the forms API to write\n     * to the view when programmatic (model -> view) changes are requested.\n     *\n     * See: [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor#members)\n     */\n    writeValue(value: any): void { // todo add type\n        const normalizedValue = value === null ? '' : value;\n\n        this.renderer.setProperty(this.elementRef.nativeElement, this.propValueAccessor, normalizedValue);\n    }\n\n    /**\n     * Registers a callback function that should be called when\n     * the control's value changes in the UI.\n     *\n     * This is called by the forms API on initialization so it can update\n     * the form model when values propagate from the view (view -> model).\n     */\n    registerOnChange(fn: () => void): void {\n        this.onChange = fn;\n    }\n\n    /**\n     * Registers a callback function that should be called when the control receives a blur event.\n     * This is called by the forms API on initialization so it can update the form model on blur.\n     */\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * This function is called by the forms API when the control status changes to or from \"DISABLED\".\n     * Depending on the value, it should enable or disable the appropriate DOM element.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        if (isDisabled) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n            this.removeDisabledState = this.renderer\n                .listen(this.elementRef.nativeElement, 'keydown', this.listenerDisabledState);\n        } else {\n            if (this.removeDisabledState) {\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n                this.removeDisabledState();\n            }\n        }\n    }\n\n    private listenerDisabledState(e: KeyboardEvent) {\n        e.preventDefault();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {ContenteditableDirective} from './contenteditable.directive';\n\n@NgModule({\n    imports: [FormsModule],\n    exports: [ContenteditableDirective],\n    declarations: [ContenteditableDirective]\n})\nexport class ContenteditableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {HeaderBrickComponent} from './component/header-brick.component';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule\n    ],\n    exports: [HeaderBrickComponent],\n    declarations: [HeaderBrickComponent],\n    entryComponents: [HeaderBrickComponent]\n})\nexport class HeaderBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'header',\n            component: HeaderBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Header',\n            description: 'A large header with margins'\n        });\n    }\n}\n","import {InjectionToken} from '@angular/core';\nimport {IWallFileUploader} from './file-uploader.types';\n\nexport const WALL_FILE_UPLOADER = new InjectionToken<IWallFileUploader>('IWallFileUploader');\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applyImageSrc() {\n        this.notify({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onFileChange(event: any) {\n        this.notify({\n            file: event.target.files[0]\n        });\n    }\n\n    notify(data) {\n        this.ngxStickyModalRef.close(data);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applyImageSrc();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {WALL_FILE_UPLOADER} from '../../../modules/file-uploader/file-uploader.token';\nimport {IWallFileUploader, IWallFileUploaderResult} from '../../../modules/file-uploader/file-uploader.types';\nimport {IResizeData} from '../../../modules/resizable/resizable.directive';\nimport {Base64ToFile} from '../../../modules/utils/base64-to-file';\nimport {Guid} from '../../../modules/utils/guid';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {ImgBrickState, ImgBrickStateMetadata} from '../img-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\nimport {IOnWallFocus} from '../../../wall/components/wall/interfaces/wall-component/on-wall-focus.interface';\n\n@Component({\n    selector: 'img-brick',\n    templateUrl: './img-brick.component.html',\n    styleUrls: ['./img-brick.component.scss']\n})\nexport class ImgBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: ImgBrickState;\n\n    @Output() stateChanges: EventEmitter<ImgBrickState> = new EventEmitter();\n\n    @ViewChild('image') image: ElementRef;\n\n    scope: ImgBrickState = {\n        src: '',\n        metadata: null,\n        width: null\n    };\n\n    isSrcBase64 = false;\n\n    lastWidth: number;\n\n    imageSrcPlaceholderRef: StickyModalRef;\n\n    resizable = {\n        resize: this.onResize.bind(this),\n        resizeStart: this.onResizeStart.bind(this),\n        resizeEnd: this.onResizeEnd.bind(this)\n    };\n\n    constructor(private renderer: Renderer2,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService,\n                @Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader,\n                private el: ElementRef) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ImgBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        if (this.scope.src) {\n            this.isSrcBase64 = this.isBase64(this.scope.src);\n\n            if (!this.scope.width) {\n                this.setUpImageWidth();\n            }\n\n            if (this.isSrcBase64) {\n                this.processBase64ImgSrc();\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    // resize callbacks\n    onResize(resizeData: IResizeData) {\n        this.scope.width = this.lastWidth + resizeData.offset;\n    }\n\n    onResizeStart() {\n        this.lastWidth = this.scope.width;\n    }\n\n    onResizeEnd() {\n        this.save();\n    }\n\n    applyImageSrc(imageSrc: string, metadata?: ImgBrickStateMetadata): Promise<any> {\n        return this.isImage(imageSrc)\n            .then(() => {\n                this.scope.src = imageSrc;\n                this.isSrcBase64 = false;\n\n                if (metadata) {\n                    this.scope.metadata = metadata;\n                }\n\n                this.save();\n\n                return this.setUpImageWidth();\n            })\n            .catch(() => {\n                alert('Please enter valid url');\n            });\n    }\n\n    applyImageFile(imgFile: File): Promise<void> {\n        return (new ImgEncoder(imgFile)).getBase64Representation().then((imgBase64) => {\n            return this.applyImageSrc(imgBase64).then(() => {\n                return this.processBase64ImgSrc();\n            });\n        });\n    }\n\n    processBase64ImgSrc(): Promise<void> {\n        return this.uploadImage().then((uploadInfo) => {\n            return this.applyImageSrc(uploadInfo.downloadURL, {\n                path: uploadInfo.path\n            });\n        }, () => {\n        });\n    }\n\n    showPanel() {\n        if (!this.imageSrcPlaceholderRef) {\n            this.imageSrcPlaceholderRef = this.ngxStickyModalService.open({\n                component: InputContextComponent,\n                positionStrategy: {\n                    name: StickyPositionStrategy.flexibleConnected,\n                    options: {\n                        relativeTo: this.el.nativeElement\n                    }\n                },\n                position: {\n                    originX: 'center',\n                    originY: 'bottom',\n                    overlayX: 'center',\n                    overlayY: 'top'\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            });\n\n            this.imageSrcPlaceholderRef.result.then((result) => {\n                this.imageSrcPlaceholderRef = null;\n\n                if (result.src) {\n                    this.applyImageSrc(result.src);\n                } else {\n                    this.applyImageFile(result.file);\n                }\n            }, () => {\n                this.imageSrcPlaceholderRef = null;\n            });\n        }\n    }\n\n    isBase64(str: string) {\n        str = str.replace(/^data:image\\/(png|jpg|jpeg);base64,/, '');\n\n        try {\n            return btoa(atob(str)) === str;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    private uploadImage(): Promise<IWallFileUploaderResult> {\n        if (!this.wallFileUploader.canUploadFile()) {\n            return Promise.reject();\n        }\n\n        const fileName = (new Guid()).get();\n        const imgFile = (new Base64ToFile(this.scope.src, fileName)).getFile();\n\n        return this.wallFileUploader.upload(this.id, imgFile);\n    }\n\n    private setUpImageWidth(): Promise<void> {\n        return this.loadImage(this.scope.src).then(() => {\n            this.scope.width = this.image.nativeElement.width;\n\n            this.save();\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private loadImage(src: string) {\n        return this.isImage(src);\n    }\n\n    private isImage(src): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n\n            img.onload = () => {\n                resolve();\n            };\n\n            img.onerror = () => {\n                reject();\n            };\n\n            img.src = src;\n        });\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {IWallFileUploader, WALL_FILE_UPLOADER} from '../../modules/file-uploader/file-uploader';\nimport {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\n@Injectable()\nexport class ImgModel {\n    constructor(@Inject(WALL_FILE_UPLOADER) private wallFileUploader: IWallFileUploader) {\n    }\n\n    remove(brickSnapshot: IBrickSnapshot): Promise<any> {\n        const state: ImgBrickState = brickSnapshot.state;\n\n        if (state.src && state.metadata && state.metadata.path) {\n            return this.wallFileUploader.remove(state.metadata.path);\n        }\n\n        return Promise.resolve();\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {ImgBrickState} from './img-brick-state.interface';\n\nexport class ImgBrickTextRepresentation {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `img!${(this.brickSnapshot.state as ImgBrickState).src}`;\n    }\n}\n","import {Component, EventEmitter, HostListener, Input, Output} from '@angular/core';\n\n@Component({\n    template: `<span [ngClass]=\"customClassName\"></span>`\n})\nexport class ResizableHandlerComponent {\n    @Input() customClassName: string;\n    @Output() mouseDownEvent: EventEmitter<MouseEvent> = new EventEmitter();\n\n    @HostListener('mousedown', ['$event'])\n    mouseDown(event: MouseEvent) {\n        this.mouseDownEvent.emit(event);\n    }\n}\n","export const LEFT_HANDLER_CLASS = 'left-handler';\nexport const RIGHT_HANDLER_CLASS = 'right-handler';\n","import {DOCUMENT} from '@angular/common';\nimport {ComponentFactoryResolver, Directive, Inject, Input, NgZone, OnInit, ViewContainerRef} from '@angular/core';\nimport {ComponentRef} from '@angular/core/src/linker/component_factory';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {LEFT_HANDLER_CLASS, RIGHT_HANDLER_CLASS} from './resizable.const';\n\nexport interface IResizeData {\n    xInitial: number;\n    xCurrent: number;\n\n    offset: number;\n\n    isLeftDirection: boolean;\n    isRightDirection: boolean;\n}\n\n/**\n * @description\n * 1. dynamically add left and right handlers\n * 2. allow to show/hide handlers\n * 3. call callback, where to pass\n *  - distance on which handlers is moved\n *  - handler type (left of right)\n */\n@Directive({\n    selector: '[wResizable]'\n})\nexport class ResizableDirective implements OnInit {\n    @Input() wResizable: {\n        resize: (resizeData: IResizeData) => void;\n        resizeStart: (resizeData: IResizeData) => void;\n        resizeEnd: (resizeData: IResizeData) => void;\n    };\n\n    private resizeData: IResizeData = null;\n\n    constructor(private el: ViewContainerRef,\n                private zone: NgZone,\n                private cfr: ComponentFactoryResolver,\n                @Inject(DOCUMENT) private doc) {\n    }\n\n    ngOnInit() {\n        const leftHandler = this.createHandler(LEFT_HANDLER_CLASS);\n        const rightHandler = this.createHandler(RIGHT_HANDLER_CLASS);\n\n        leftHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, true);\n        });\n\n        rightHandler.instance.mouseDownEvent.subscribe((e: MouseEvent) => {\n            this.mouseDownHandler(e, false);\n        });\n\n        this.doc.addEventListener('mousemove', (event: MouseEvent) => {\n            if (this.resizeData) {\n                this.resizeData.xCurrent = event.clientX;\n\n                if (this.resizeData.isLeftDirection) {\n                    this.resizeData.offset = this.resizeData.xInitial - this.resizeData.xCurrent;\n                } else if (this.resizeData.isRightDirection) {\n                    this.resizeData.offset = this.resizeData.xCurrent - this.resizeData.xInitial;\n                }\n\n                if (this.wResizable.resize) {\n                    this.wResizable.resize(this.resizeData);\n                }\n            }\n        });\n\n        this.doc.addEventListener('mouseup', () => {\n            if (this.wResizable.resizeEnd) {\n                this.wResizable.resizeEnd(this.resizeData);\n            }\n\n            this.resizeData = null;\n        });\n    }\n\n    private createHandler(customClassName: string): ComponentRef<ResizableHandlerComponent> {\n        const handler = this.el.createComponent(\n            this.cfr.resolveComponentFactory(ResizableHandlerComponent)\n        );\n\n        handler.instance.customClassName = customClassName;\n\n        return handler;\n    }\n\n    private mouseDownHandler(e: MouseEvent, isLeftDirection: boolean) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.resizeData = {\n            xInitial: e.clientX,\n            xCurrent: e.clientX,\n            offset: 0,\n            isLeftDirection,\n            isRightDirection: !isLeftDirection\n        };\n\n        if (this.wResizable.resizeStart) {\n            this.wResizable.resizeStart(this.resizeData);\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ResizableHandlerComponent} from './resizable-handler.component';\nimport {ResizableDirective} from './resizable.directive';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ResizableDirective],\n    declarations: [ResizableDirective, ResizableHandlerComponent],\n    entryComponents: [ResizableHandlerComponent]\n})\nexport class ResizableModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {ImgBrickComponent} from './component/img-brick.component';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {ImgModel} from './img-brick-destructor.class';\nimport {ImgBrickState} from './img-brick-state.interface';\nimport {ImgBrickTextRepresentation} from './img-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {ResizableModule} from '../../modules/resizable/resizable.module';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {IBrickSnapshot} from '../../wall/model/interfaces/brick-snapshot.interface';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HelperComponentsModule,\n        ResizableModule,\n        TowModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [ImgBrickComponent],\n    declarations: [ImgBrickComponent, InputContextComponent],\n    entryComponents: [ImgBrickComponent, InputContextComponent],\n    providers: [\n        ImgModel\n    ]\n})\nexport class ImgBrickModule {\n    constructor(private brickRegistry: BrickRegistry,\n                private imgModel: ImgModel) {\n        this.brickRegistry.register({\n            tag: 'image',\n            component: ImgBrickComponent,\n            textRepresentation: ImgBrickTextRepresentation,\n\n            destructor: (brickSnapshot: IBrickSnapshot): Promise<void> => {\n                return this.imgModel.remove(brickSnapshot);\n            },\n\n            getBrickResourcePaths: (brickSnapshot: IBrickSnapshot) => {\n                const imageState: ImgBrickState = brickSnapshot.state;\n\n                if (imageState.metadata && imageState.metadata.path) {\n                    return [imageState.metadata.path];\n                }\n\n                return [];\n            },\n\n            name: 'Image',\n            description: 'Embed with a link'\n        });\n    }\n}\n","import {Component} from '@angular/core';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\n\n@Component({\n    selector: 'quote-brick',\n    templateUrl: './quote-brick.component.html',\n    styleUrls: ['./quote-brick.component.scss']\n})\nexport class QuoteBrickComponent extends BaseTextBrickComponent {\n    placeholder = 'Quote';\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrickRegistry} from '../../wall/wall';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {QuoteBrickComponent} from './component/quote-brick.component';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ContenteditableModule\n    ],\n    exports: [QuoteBrickComponent],\n    declarations: [QuoteBrickComponent],\n    entryComponents: [QuoteBrickComponent]\n})\nexport class QuoteBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'quote',\n            component: QuoteBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Quote',\n            description: 'Capture a quote'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, ViewChild} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IOnWallFocus} from '../../../wall/wall';\nimport {IVideoBrickState} from '../video-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\n\n@Component({\n    selector: 'video-brick',\n    templateUrl: './video-brick.component.html',\n    styleUrls: ['./video-brick.component.scss']\n})\nexport class VideoBrickComponent implements OnInit, IOnWallFocus {\n    @Input() id: string;\n    @Input() state: IVideoBrickState;\n\n    @Output() stateChanges: EventEmitter<IVideoBrickState> = new EventEmitter();\n\n    @ViewChild('iframe') iframe: ElementRef;\n\n    // ui\n    uiStates: any = {\n        initial: 'initial',\n        video: 'video'\n    };\n\n    uiState: string = this.uiStates.initial;\n\n    scope: IVideoBrickState = {\n        src: ''\n    };\n\n    videoSrcPlaceholderRef: StickyModalRef;\n\n    constructor(private renderer2: Renderer2,\n                private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        if (this.state && this.state.src !== this.scope.src) {\n            this.scope.src = this.state.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallStateChange(newState: IVideoBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            this.scope.src = newState.src;\n\n            if (this.scope.src) {\n                this.uiState = this.uiStates.video;\n\n                setTimeout(() => {\n                    this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n                }, 10);\n            }\n        }\n    }\n\n    onWallFocus(): void {\n        if (this.uiState === this.uiStates.initial && !this.videoSrcPlaceholderRef) {\n            setTimeout(() => {\n                this.showVideoPanel();\n            }, 0);\n        }\n    }\n\n    applySrc(src: string) {\n        this.uiState = this.uiStates.initial;\n\n        if (src.length) {\n            const srcArray = src.split('=');\n            const youtubeId = srcArray[1];\n\n            if (youtubeId) {\n                this.scope.src = `https://www.youtube.com/embed/${youtubeId}`;\n\n                this.renderer2.setAttribute(this.iframe.nativeElement, 'src', this.scope.src);\n\n                this.save();\n\n                this.uiState = this.uiStates.video;\n            }\n        }\n    }\n\n    showVideoPanel() {\n        this.videoSrcPlaceholderRef = this.ngxStickyModalService.open({\n            component: InputContextComponent,\n            positionStrategy: {\n                name: StickyPositionStrategy.flexibleConnected,\n                options: {\n                    relativeTo: this.el.nativeElement\n                }\n            },\n            position: {\n                originX: 'center',\n                originY: 'bottom',\n                overlayX: 'center',\n                overlayY: 'top'\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.videoSrcPlaceholderRef.result.then((result) => {\n            this.videoSrcPlaceholderRef = null;\n\n            this.applySrc(result.src);\n        }, () => {\n            this.videoSrcPlaceholderRef = null;\n        });\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n}\n","import {IBrickSnapshot} from '../../wall/wall';\nimport {IVideoBrickState} from './video-brick-state.interface';\n\nexport class VideoBrickTextRepresentationClass {\n    constructor(private brickSnapshot: IBrickSnapshot) {\n    }\n\n    getText() {\n        return `video!${(this.brickSnapshot.state as IVideoBrickState).src}`;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {VideoBrickComponent} from './component/video-brick.component';\nimport {VideoBrickTextRepresentationClass} from './video-brick-text-representation.class';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [VideoBrickComponent],\n    declarations: [VideoBrickComponent, InputContextComponent],\n    entryComponents: [VideoBrickComponent, InputContextComponent]\n})\nexport class VideoBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'video',\n            component: VideoBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Video',\n            description: 'Embed from Youtube and more'\n        });\n    }\n}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StickyModalRef} from 'ngx-sticky-modal';\n\n@Component({\n    templateUrl: './input-context.component.html',\n    styleUrls: ['./input-context.component.scss']\n})\nexport class InputContextComponent implements OnInit {\n    @ViewChild('src') srcInput: ElementRef;\n\n    constructor(private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    ngOnInit() {\n        setTimeout(() => {\n            this.srcInput.nativeElement.focus();\n        }, 10);\n    }\n\n    applySrc() {\n        this.ngxStickyModalRef.close({\n            src: this.srcInput.nativeElement.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        this.applySrc();\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {IWebBookmarkBrickState} from '../web-bookmark-brick-state.interface';\nimport {InputContextComponent} from '../input-context/input-context.component';\n\n@Component({\n    selector: 'web-bookmark-brick',\n    templateUrl: './web-bookmark-brick.component.html',\n    styleUrls: ['./web-bookmark-brick.component.scss']\n})\nexport class WebBookmarkBrickComponent implements OnInit {\n    @Input() id: string;\n    @Input() state: IWebBookmarkBrickState;\n\n    @Output() stateChanges: EventEmitter<IWebBookmarkBrickState> = new EventEmitter();\n\n    scope: IWebBookmarkBrickState = {\n        src: null,\n        description: null,\n        image: {\n            height: null,\n            width: null,\n            url: null\n        },\n        logo: {\n            height: null,\n            width: null,\n            url: null\n        },\n        title: null,\n        author: null\n    };\n\n    loading = false;\n\n    constructor(private el: ElementRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private ngxStickyModalService: StickyModalService) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n    }\n\n    onWallStateChange(newState: IWebBookmarkBrickState) {\n        if (newState && newState.src !== this.scope.src) {\n            Object.assign(this.scope, this.state);\n        }\n    }\n\n    applySrc(src: string) {\n        if (src.length) {\n            if (this.isValidUrl(src)) {\n                this.loading = true;\n\n                this.getWebPageMetaInfo(src).then((webPageMetaInfo) => {\n                    Object.assign(this.scope, webPageMetaInfo);\n\n                    this.scope.src = src;\n\n                    this.save();\n\n                    this.loading = false;\n                }, () => {\n                    this.loading = false;\n                });\n            } else {\n                alert('Url is invalid');\n            }\n        }\n    }\n\n    showPanel() {\n        if (!this.loading) {\n            this.ngxStickyModalService.open({\n                component: InputContextComponent,\n                positionStrategy: {\n                    name: StickyPositionStrategy.flexibleConnected,\n                    options: {\n                        relativeTo: this.el.nativeElement\n                    }\n                },\n                position: {\n                    originX: 'center',\n                    originY: 'bottom',\n                    overlayX: 'center',\n                    overlayY: 'top'\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            }).result.then((result) => {\n                this.applySrc(result.src);\n            }, () => {\n            });\n        }\n    }\n\n    onWallFocus(): void {\n        if (!this.scope.src) {\n            setTimeout(() => {\n                this.showPanel();\n            }, 0);\n        }\n    }\n\n    private save() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    private getWebPageMetaInfo(url: string): Promise<any> {\n        return fetch(`https://api.microlink.io/?url=${url}`).then((page) => {\n            return page.json().then((pageMetadata) => {\n                const {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                } = pageMetadata.data;\n\n                return {\n                    image,\n                    description,\n                    logo,\n                    title,\n                    author\n                };\n            });\n        });\n    }\n\n    private isValidUrl(src: string): boolean {\n        let url;\n\n        try {\n            url = new URL(src);\n        } catch (e) {\n        }\n\n        return Boolean(url);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {VideoBrickTextRepresentationClass} from '../video-brick/video-brick-text-representation.class';\nimport {InputContextComponent} from './input-context/input-context.component';\nimport {WebBookmarkBrickComponent} from './component/web-bookmark-brick.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule} from '@angular/material';\nimport {TowModule} from '../../modules/tow/tow.module';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        StickyModalModule,\n        HelperComponentsModule,\n        TowModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule\n    ],\n    exports: [\n        WebBookmarkBrickComponent\n    ],\n    declarations: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    entryComponents: [\n        InputContextComponent,\n        WebBookmarkBrickComponent\n    ],\n    providers: []\n})\nexport class WebBookmarkBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'webbookmark',\n            component: WebBookmarkBrickComponent,\n            textRepresentation: VideoBrickTextRepresentationClass,\n            name: 'Web Bookmark',\n            description: 'Save a link as a visual bookmark'\n        });\n    }\n}\n","export const SUPPORTED_MODES = [\n    {\n        value: 'javascript',\n        name: 'Javascript'\n    },\n    {\n        value: 'shell',\n        name: 'Shell'\n    },\n    {\n        value: 'xml',\n        name: 'XML'\n    }\n];\n\nexport const DEFAULT_THEME = 'neo';\n","import {Component, Inject} from '@angular/core';\nimport {STICKY_MODAL_DATA, StickyModalRef} from 'ngx-sticky-modal';\n\nexport interface IModeListComponentConfig {\n    modes: { value: string, name: string }[];\n}\n\n@Component({\n    selector: 'w-mode-list-component',\n    templateUrl: './mode-list.component.html'\n})\nexport class ModeListComponent {\n    constructor(@Inject(STICKY_MODAL_DATA) public config: IModeListComponentConfig,\n                private ngxStickyModalRef: StickyModalRef) {\n    }\n\n    onSelected(mode: string) {\n        this.ngxStickyModalRef.close(mode);\n    }\n}\n","import {Component, ComponentFactoryResolver, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/shell/shell';\nimport 'codemirror/mode/xml/xml';\nimport {StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {DEFAULT_THEME, SUPPORTED_MODES} from '../code-brick.constant';\nimport {ModeListComponent} from '../mode-list/mode-list.component';\n\nexport interface ICodeBrickState {\n    code: string;\n    mode: string;\n}\n\n@Component({\n    selector: 'code-brick',\n    templateUrl: './code-brick.component.html',\n    styleUrls: ['./code-brick.component.scss']\n})\nexport class CodeBrickComponent implements OnInit {\n    scope: ICodeBrickState = {\n        code: '',\n        mode: SUPPORTED_MODES[0].value\n    };\n\n    ui: {\n        displayModeName: string;\n    } = {\n        displayModeName: SUPPORTED_MODES[0].name\n    };\n\n    codeMirrorInstance: any;\n\n    @Input() id: string;\n    @Input() state: ICodeBrickState;\n    @ViewChild('container', {read: ElementRef}) container: ElementRef;\n    @ViewChild('mode', {read: ElementRef}) mode: ElementRef;\n\n    @Output() stateChanges: EventEmitter<ICodeBrickState> = new EventEmitter();\n\n    constructor(private ngxStickyModalService: StickyModalService,\n                private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        Object.assign(this.scope, this.state);\n\n        this.codeMirrorInstance = CodeMirror(this.container.nativeElement, {\n            value: ``,\n            mode: this.scope.mode,\n            theme: DEFAULT_THEME,\n            dragDrop: false,\n            scrollbarStyle: null\n        });\n\n        this.codeMirrorInstance.on('change', () => {\n            this.scope.code = this.codeMirrorInstance.getValue();\n\n            this.saveState();\n        });\n\n        this.processNewState();\n    }\n\n    onWallStateChange(newState: ICodeBrickState) {\n        if (newState && newState.code !== this.scope.code) {\n            Object.assign(this.scope, this.state);\n\n            this.processNewState();\n        }\n    }\n\n    processNewState() {\n        this.codeMirrorInstance.setValue(this.scope.code);\n\n        if (this.scope.mode !== this.codeMirrorInstance.getMode().name) {\n            this.codeMirrorInstance.setOption('mode', this.scope.mode);\n        }\n\n        this.ui.displayModeName = SUPPORTED_MODES.find((mode) => mode.value === this.scope.mode).name;\n    }\n\n    saveState() {\n        this.stateChanges.emit(this.scope);\n    }\n\n    onModeSelected() {\n        const elementBoundingRect = this.mode.nativeElement.getBoundingClientRect();\n\n        const modes: any[] = SUPPORTED_MODES.map((mode) => {\n            return {\n                ...mode,\n                selected: mode.value === this.scope.mode\n            };\n        });\n\n        this.ngxStickyModalService.open({\n            component: ModeListComponent,\n            data: {modes},\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.x,\n                    clientY: elementBoundingRect.y + 35\n                }\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        }).result.then((mode: any) => {\n            Object.assign(this.scope, {\n                ...this.state,\n                mode: mode.value\n            });\n\n            this.processNewState();\n        }, () => {\n            // nothing\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {CodeBrickComponent} from './component/code-brick.component';\nimport {ModeListComponent} from './mode-list/mode-list.component';\nimport {MatButtonModule, MatListModule} from '@angular/material';\nimport {CommonModule} from '@angular/common';\nimport {WallModule} from '../../wall/wall.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        WallModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatListModule\n    ],\n    declarations: [\n        CodeBrickComponent,\n        ModeListComponent\n    ],\n    entryComponents: [\n        CodeBrickComponent,\n        ModeListComponent\n    ]\n})\nexport class CodeBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'code',\n            component: CodeBrickComponent,\n            name: 'Code',\n            description: 'Capture a code snippet'\n        });\n    }\n}\n","export const TEXT_BRICK_TAG = 'text';\n","import {ChangeDetectionStrategy, Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {BrickRegistry, IBrickDefinition, IBrickSpecification} from '../../../wall/wall';\nimport {TEXT_BRICK_TAG} from '../text-brick.constant';\n\nexport interface IBricksListComponentConfig {\n    text$: Observable<string>;\n    up$: Observable<any>;\n    down$: Observable<any>;\n    enter$: Observable<any>;\n    selectedTag$: Subject<string>;\n}\n\n@Component({\n    selector: 'w-bricks-list',\n    templateUrl: './bricks-list.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BricksListComponent implements OnInit, OnDestroy {\n    selectedTag$: BehaviorSubject<string> = new BehaviorSubject(null);\n\n    bricksList$: BehaviorSubject<IBrickSpecification[]> = new BehaviorSubject([]);\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private brickRegistry: BrickRegistry,\n                @Inject(STICKY_MODAL_DATA) public config: IBricksListComponentConfig) {\n        this.updateBricksList('');\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.config.text$.subscribe((filterText) => {\n                this.updateBricksList(filterText.slice(1));\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.up$.subscribe(() => {\n                this.onNavigationUpDownHandler(true);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.down$.subscribe(() => {\n                this.onNavigationUpDownHandler(false);\n            })\n        );\n\n        this.subscriptions.push(\n            this.config.enter$.subscribe(() => {\n                this.notifySelectedTag();\n            })\n        );\n    }\n\n    onBrickSelected(brickDescription: IBrickDefinition) {\n        this.selectedTag$.next(brickDescription.tag);\n\n        this.notifySelectedTag();\n    }\n\n    trackByFn(index, item) {\n        return item.tag;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    private notifySelectedTag() {\n        this.config.selectedTag$.next(this.selectedTag$.getValue());\n    }\n\n    private updateBricksList(filterText: string) {\n        const brickDescriptors = this.brickRegistry.getAll()\n            .filter((brickDescriptor) => {\n                if (brickDescriptor.tag === TEXT_BRICK_TAG) {\n                    return false;\n                } else {\n                    return brickDescriptor.tag.includes(filterText);\n                }\n            }).sort((a, b) => {\n                if (a.tag.startsWith(filterText)) {\n                    return -1;\n                } else if (b.tag.startsWith(filterText)) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n        if (brickDescriptors.length) {\n            this.selectedTag$.next(brickDescriptors[0].tag);\n        } else {\n            this.selectedTag$.next(null);\n        }\n\n        this.bricksList$.next(brickDescriptors);\n    }\n\n    private onNavigationUpDownHandler(isUp: boolean): void {\n        const currentSelectedTag = this.selectedTag$.getValue();\n        const currentBrickList = this.bricksList$.getValue();\n\n        if (currentSelectedTag && currentBrickList.length > 1) {\n            const currentSelectedBrickIndex = currentBrickList.findIndex((brickDescriptor) => {\n                return brickDescriptor.tag === currentSelectedTag;\n            });\n\n            let nextSelectedBrick;\n\n            if (isUp) {\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex - 1];\n\n                if (!nextSelectedBrick) {\n                    // take last brick\n                    nextSelectedBrick = currentBrickList[currentBrickList.length - 1];\n                }\n            } else {\n                // is bottom\n                nextSelectedBrick = currentBrickList[currentSelectedBrickIndex + 1];\n\n                if (!nextSelectedBrick) {\n                    // take first brick\n                    nextSelectedBrick = currentBrickList[0];\n                }\n            }\n\n            this.selectedTag$.next(nextSelectedBrick.tag);\n\n            // wait until component re-renders\n            setTimeout(() => {\n                document.getElementsByClassName('w-bricks-list__selected')[0].scrollIntoView();\n            });\n        }\n    }\n}\n","export class NodeTreeSplit {\n    leftTree: HTMLElement;\n    rightTree: HTMLElement;\n\n    constructor(private root: HTMLElement,\n                private targetElement: Node, // text node\n                private offset: number) {\n        if (root === targetElement) {\n            // edge case scenario, just return root node itself\n            this.leftTree = root as HTMLElement;\n            this.rightTree = root as HTMLElement;\n        } else {\n            // get direct parent of target node\n            let parent = targetElement.parentNode;\n\n            // create left and right trees which will be returned as result\n            let rightTree = parent.cloneNode(false);\n            let leftTree = parent.cloneNode(false);\n\n            // Build Right tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            rightTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all next siblings of target node to the right tree\n            this.appendNextSiblingsToNode(rightTree, targetElement);\n\n            // Build Left tree\n\n            // as soon as targetElement is a Text Node, split text of that node using offset\n            leftTree.appendChild(\n                document.createTextNode(targetElement.textContent.slice(0, offset))\n            );\n\n            // parent node could contains other Nodes besides target node\n            // add all previous siblings of target node to the left tree\n            this.prependPreviousSiblingsToNode(leftTree, targetElement);\n\n            if (root === parent) {\n                // we already fully build left and right trees\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            } else {\n                // recursively build left and right trees\n                // climbing from parent node to the root node\n                let leftParentTree;\n                let rightParentTree;\n                let grandparent = parent.parentNode;\n\n                while (root.contains(grandparent) || grandparent === root) {\n                    rightParentTree = grandparent.cloneNode(false);\n                    leftParentTree = grandparent.cloneNode(false);\n\n                    // Process Left tree\n                    this.prependPreviousSiblingsToNode(leftParentTree, parent);\n\n                    leftParentTree.appendChild(leftTree);\n                    leftTree = leftParentTree;\n\n                    // Process Right tree\n                    this.appendNextSiblingsToNode(rightParentTree, parent);\n\n                    rightParentTree.prepend(rightTree);\n                    rightTree = rightParentTree;\n\n                    parent = grandparent;\n                    grandparent = grandparent.parentNode;\n                }\n\n                this.leftTree = leftTree as HTMLElement;\n                this.rightTree = rightTree as HTMLElement;\n            }\n        }\n    }\n\n    private prependPreviousSiblingsToNode(leftTree, targetNode: Node): void {\n        let previousSibling = targetNode.previousSibling;\n\n        while (previousSibling) {\n            leftTree.prepend(previousSibling.cloneNode(true));\n\n            previousSibling = previousSibling.previousSibling;\n        }\n    }\n\n    private appendNextSiblingsToNode(rightTree, targetElement: Node): void {\n        let nextSibling = targetElement.nextSibling;\n\n        while (nextSibling) {\n            rightTree.appendChild(nextSibling.cloneNode(true));\n\n            nextSibling = nextSibling.nextSibling;\n        }\n    }\n}\n","export class TreeNodeTraverse {\n    constructor(private root: HTMLElement) {\n    }\n\n    traversePostOrder(fn: (node: Node) => void) {\n        this._traversePostOrder(this.root, fn);\n    }\n\n    traversePreOrder(fn: (node: Node) => void) {\n        this._traversePreOrder(this.root, fn);\n    }\n\n    traversePostPreOrder(fn: (node: Node) => void) {\n        this._traversePostPreOrder(this.root, fn);\n    }\n\n    getPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    getPostPreOrderNodes(): Node[] {\n        const nodes = [];\n\n        this.traversePostPreOrder((node) => {\n            nodes.push(node);\n        });\n\n        return nodes;\n    }\n\n    private _traversePostOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n\n    private _traversePreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePreOrder(childNode, fn);\n            }\n        });\n    }\n\n    private _traversePostPreOrder(node: Node, fn: (node: Node) => void) {\n        Array.from(node.childNodes).forEach((childNode) => {\n            fn(childNode);\n\n            if (childNode.childNodes && childNode.childNodes.length) {\n                this._traversePostPreOrder(childNode, fn);\n            }\n\n            fn(childNode);\n        });\n    }\n}\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport {STICKY_MODAL_DATA} from 'ngx-sticky-modal';\nimport {ITextBrickApi} from '../text-brick-api.interface';\n\nexport interface ITextContextMenuComponent {\n    api: ITextBrickApi;\n}\n\n@Component({\n    selector: 'w-text-context-menu',\n    templateUrl: './text-context-menu.component.html'\n})\nexport class TextContextMenuComponent implements OnInit {\n    @ViewChild('linkEl') linkEl: ElementRef;\n\n    ui = {\n        showLinkForm: false\n    };\n\n    constructor(@Inject(STICKY_MODAL_DATA) public config: ITextContextMenuComponent) {\n\n    }\n\n    ngOnInit() {\n        this.config.api.saveSelection();\n    }\n\n    bold() {\n        this.config.api.bold();\n    }\n\n    italic() {\n        this.config.api.italic();\n    }\n\n    link() {\n        this.switchLinkFormVisibility();\n\n        if (this.ui.showLinkForm) {\n            this.config.api.saveSelection();\n\n            setTimeout(() => {\n                if (this.config.api.isLinkSelected()) {\n                    this.linkEl.nativeElement.value = this.config.api.getSelectedLinkHref();\n                }\n\n                this.linkEl.nativeElement.focus();\n            });\n        } else {\n            this.config.api.restoreSelection();\n        }\n    }\n\n    applyLink() {\n        this.config.api.restoreSelection();\n\n        if (this.config.api.isLinkSelected()) {\n            this.config.api.changeLinkUrl(this.linkEl.nativeElement.value);\n        } else {\n            this.config.api.createLink(this.linkEl.nativeElement.value);\n        }\n\n        this.switchLinkFormVisibility();\n    }\n\n    unlink() {\n        this.config.api.restoreSelection();\n\n        this.config.api.unlink();\n\n        this.switchLinkFormVisibility();\n    }\n\n    switchLinkFormVisibility() {\n        this.ui.showLinkForm = !this.ui.showLinkForm;\n    }\n}\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, Input, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {StickyModalRef, StickyModalService, StickyPositionStrategy} from 'ngx-sticky-modal';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {debounceTime, filter} from 'rxjs/operators';\nimport {ImgEncoder} from '../../../modules/utils/img-encoder.service';\nimport {NodeTreeSplit} from '../../../modules/utils/node-tree-split';\nimport {TreeNodeTraverse} from '../../../modules/utils/node/tree-node-traverse';\nimport {BaseTextBrickComponent} from '../../base-text-brick/base-text-brick.component';\nimport {BricksListComponent} from '../bricks-list/bricks-list.component';\nimport {ITextBrickApi} from '../text-brick-api.interface';\nimport {TextContextMenuComponent} from '../text-context-menu/text-context-menu.component';\nimport {IWallModel} from '../../../wall/model/interfaces/wall-model.interface';\nimport {DIVIDER_BRICK_TAG} from '../../divider-brick/divider-brick.constant';\n\n@Component({\n    selector: 'text-brick',\n    templateUrl: './text-brick.component.html',\n    styleUrls: ['./text-brick.component.scss']\n})\nexport class TextBrickComponent extends BaseTextBrickComponent implements OnInit, OnDestroy, ITextBrickApi {\n    @Input() wallModel: IWallModel;\n\n    placeholder = null;\n\n    brickSelectionModalRef: StickyModalRef;\n    contextMenuModalRef: StickyModalRef;\n\n    up$ = new Subject();\n    down$ = new Subject();\n    enter$ = new Subject();\n    selectedTag$: Subject<string> = new Subject();\n\n    subscriptions: Subscription[] = [];\n\n    selectionInfo: {\n        ranges: Range[],\n        selectedLink: HTMLElement\n    };\n\n    api: ITextBrickApi = {\n        bold: this.bold.bind(this),\n        italic: this.italic.bind(this),\n        createLink: this.createLink.bind(this),\n        changeLinkUrl: this.changeLinkUrl.bind(this),\n        isLinkSelected: this.isLinkSelected.bind(this),\n        getSelectedLinkHref: this.getSelectedLinkHref.bind(this),\n        saveSelection: this.saveSelection.bind(this),\n        restoreSelection: this.restoreSelection.bind(this),\n        unlink: this.unlink.bind(this)\n    };\n\n    constructor(private zone: NgZone,\n                private ngxStickyModalService: StickyModalService,\n                private cd: ChangeDetectorRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private el: ElementRef) {\n        super();\n\n        this.selectedTag$.subscribe((newTag) => {\n            if (newTag) {\n                this.hideBricksList();\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                if (newTag === DIVIDER_BRICK_TAG) {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            }\n        });\n\n        this.subscriptions.push(\n            // show sub-menu for selected text\n            fromEvent(this.el.nativeElement, 'mouseup')\n                .pipe(\n                    filter(() => Boolean(this.scope.text.length)),\n                    debounceTime(500),\n                    filter(() => this.el.nativeElement.contains(window.getSelection().anchorNode))\n                )\n                .subscribe((e: any) => {\n                    this.onTextSelection();\n                })\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n\n    onBlur() {\n        this.placeholder = null;\n    }\n\n    onFocus() {\n        this.placeholder = 'Type \\'/\\' for commands';\n    }\n\n    onKeyPress(e: KeyboardEvent) {\n        super.onKeyPress(e);\n\n        this.hideContextMenuModal();\n    }\n\n    // open the link in new window\n    onClick(event: MouseEvent) {\n        const target = event.target as Node;\n\n        if (this.isHTMLElement(target)) {\n            if (target.tagName === 'A') {\n                window.open(target.getAttribute('href'), '_blank');\n            }\n        }\n    }\n\n    topKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.up$.next();\n        } else {\n            super.topKeyPressed(e);\n        }\n    }\n\n    bottomKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.down$.next();\n        } else {\n            super.bottomKeyPressed(e);\n        }\n    }\n\n    enterKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            this.enter$.next();\n\n            setTimeout(() => {\n                this.hideBricksList();\n            }, 10);\n        } else {\n            if (this.isTag()) {\n                const newTag = this.scope.text.slice(1);\n\n                this.wallModel.api.core.turnBrickInto(this.id, newTag);\n\n                // d - divider tag\n                if (newTag === 'd') {\n                    this.wallModel.api.core.addBrickAfterBrickId(this.id, 'text');\n                }\n            } else {\n                super.enterKeyPressed(e);\n            }\n        }\n    }\n\n    getSplittedText(offset: number, target: Node): { left: string, right: string } {\n        const nodeTreeSplit = new NodeTreeSplit(this.editor.nativeElement, target, offset);\n\n        return {\n            left: nodeTreeSplit.leftTree.innerHTML,\n            right: nodeTreeSplit.rightTree.innerHTML\n        };\n    }\n\n    escapeKeyPressed(e: KeyboardEvent) {\n        if (this.brickSelectionModalRef) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.hideBricksList();\n        }\n    }\n\n    onTextChange() {\n        super.onTextChange();\n\n        if (this.brickSelectionModalRef) {\n            if (!this.scope.text.length) {\n                this.hideBricksList();\n            }\n        } else if (this.scope.text[0] === '/' && this.scope.text.length === 1) {\n            this.editor.nativeElement.blur();\n\n            const elementBoundingRect = this.el.nativeElement.getBoundingClientRect();\n\n            this.brickSelectionModalRef = this.ngxStickyModalService.open({\n                component: BricksListComponent,\n                data: {\n                    text$: this.textChange,\n                    up$: this.up$,\n                    down$: this.down$,\n                    enter$: this.enter$,\n                    selectedTag$: this.selectedTag$\n                },\n                positionStrategy: {\n                    name: StickyPositionStrategy.coordinate,\n                    options: {\n                        clientX: elementBoundingRect.x,\n                        clientY: elementBoundingRect.y + 35\n                    }\n                },\n                componentFactoryResolver: this.componentFactoryResolver\n            });\n\n            setTimeout(() => {\n                this.editor.nativeElement.focus();\n            });\n        }\n    }\n\n    onPaste(e: ClipboardEvent) {\n        const imageDataTransferItem = this.extractImageDataTransferItem(e.clipboardData.items);\n\n        if (imageDataTransferItem) {\n            e.preventDefault();\n\n            (new ImgEncoder(imageDataTransferItem.getAsFile())).getBase64Representation().then((imgBase64) => {\n                this.wallModel.api.core.turnBrickInto(this.id, 'image', {\n                    src: imgBase64\n                });\n            });\n        } else {\n            super.onPaste(e);\n        }\n    }\n\n    onTextSelection() {\n        if (!this.contextMenuModalRef) {\n            const selection = window.getSelection();\n\n            if (!selection.isCollapsed) {\n                this.showContextModal();\n            }\n        }\n    }\n\n    // API\n    bold(): void {\n        document.execCommand('bold', false);\n    }\n\n    italic(): void {\n        document.execCommand('italic', false);\n    }\n\n    createLink(url: string): void {\n        document.execCommand('createLink', false, url);\n    }\n\n    getSelectedLinkHref(): string {\n        if (this.selectionInfo.selectedLink) {\n            return this.selectionInfo.selectedLink.getAttribute('href');\n        }\n    }\n\n    unlink(): void {\n        document.execCommand('unlink', false);\n    }\n\n    changeLinkUrl(url: string): void {\n        if (this.selectionInfo.selectedLink) {\n            this.selectionInfo.selectedLink.setAttribute('href', url);\n\n            this.triggerEditorChange();\n        }\n    }\n\n    isLinkSelected(): boolean {\n        return Boolean(this.selectionInfo && this.selectionInfo.selectedLink);\n    }\n\n    saveSelection() {\n        this.selectionInfo = {\n            selectedLink: this.getSelectedLink(),\n            ranges: this.getSelectedRanges()\n        };\n    }\n\n    restoreSelection() {\n        const sel = window.getSelection();\n\n        sel.removeAllRanges();\n\n        for (let i = 0, len = this.selectionInfo.ranges.length; i < len; ++i) {\n            sel.addRange(this.selectionInfo.ranges[i]);\n        }\n    }\n\n    // end API\n\n    private getSelectedLink(): HTMLElement {\n        const selection = window.getSelection();\n\n        let anchorNodeLink;\n        let focusNodeLink;\n\n        const isAnchorNodeBelongToBrick = this.el.nativeElement.contains(selection.anchorNode);\n        const isFocusNodeBelongToBrick = this.el.nativeElement.contains(selection.focusNode);\n\n        if (isAnchorNodeBelongToBrick) {\n            anchorNodeLink = this.findParentLink(selection.anchorNode);\n        }\n\n        if (isFocusNodeBelongToBrick) {\n            focusNodeLink = this.findParentLink(selection.focusNode);\n        }\n\n        if (anchorNodeLink) {\n            return anchorNodeLink;\n        } else if (focusNodeLink) {\n            return focusNodeLink;\n        } else if (selection.anchorNode !== selection.focusNode &&\n            isFocusNodeBelongToBrick && isAnchorNodeBelongToBrick) {\n            return this.findLinkBetweenNodes(selection.anchorNode, selection.focusNode);\n        }\n    }\n\n    private triggerEditorChange() {\n        this.editor.nativeElement.dispatchEvent(new Event('input'));\n    }\n\n    private showContextModal() {\n        this.editor.nativeElement.blur();\n\n        const sel = window.getSelection();\n\n        const elementBoundingRect = sel.getRangeAt(0).getBoundingClientRect();\n\n        this.contextMenuModalRef = this.ngxStickyModalService.open({\n            component: TextContextMenuComponent,\n            data: {\n                api: this.api\n            },\n            positionStrategy: {\n                name: StickyPositionStrategy.coordinate,\n                options: {\n                    clientX: elementBoundingRect.left + ((elementBoundingRect.right - elementBoundingRect.left) / 2.5),\n                    clientY: elementBoundingRect.top - 35\n                }\n            },\n            overlayConfig: {\n                hasBackdrop: false\n            },\n            componentFactoryResolver: this.componentFactoryResolver\n        });\n\n        this.contextMenuModalRef.result.then(() => {\n            this.hideContextMenuModal();\n        }, () => {\n            this.hideContextMenuModal();\n        });\n\n        setTimeout(() => {\n            this.editor.nativeElement.focus();\n        });\n    }\n\n    // todo: might be as util method\n    private getSelectedRanges(): Range[] {\n        const sel = window.getSelection();\n        const ranges = [];\n\n        for (let i = 0, len = sel.rangeCount; i < len; ++i) {\n            ranges.push(sel.getRangeAt(i));\n        }\n\n        return ranges;\n    }\n\n    private extractImageDataTransferItem(items: DataTransferItemList): DataTransferItem {\n        let index;\n\n        for (index in items) {\n            if (items.hasOwnProperty(index)) {\n                const item = items[index];\n\n                if (item.kind === 'file') {\n                    return item;\n                }\n            }\n        }\n    }\n\n    private isTag() {\n        return this.scope.text && this.scope.text[0] === '/' &&\n            this.wallModel.api.core.isRegisteredBrick(this.scope.text.slice(1));\n    }\n\n    private hideBricksList() {\n        if (this.brickSelectionModalRef) {\n            this.brickSelectionModalRef.close();\n\n            this.brickSelectionModalRef = null;\n        }\n    }\n\n    private hideContextMenuModal() {\n        if (this.contextMenuModalRef) {\n            this.contextMenuModalRef.close();\n\n            this.contextMenuModalRef = null;\n        }\n    }\n\n    private findParentLink(node: Node): HTMLElement {\n        let currentNode: Node = node;\n        let linkNode = null;\n\n        while (!linkNode && currentNode !== this.el.nativeElement) {\n            if ((currentNode as HTMLElement).tagName === 'A') {\n                linkNode = currentNode;\n            }\n\n            currentNode = currentNode.parentElement;\n        }\n\n        return linkNode;\n    }\n\n    private findLinkBetweenNodes(nodeA: Node, nodeB: Node): HTMLElement {\n        const treeNodeTraverse = new TreeNodeTraverse(this.editor.nativeElement);\n\n        const orderedNodes = treeNodeTraverse.getPostPreOrderNodes();\n\n        let nodeAIndex = orderedNodes.indexOf(nodeA);\n        let nodeBIndex = orderedNodes.indexOf(nodeB);\n\n        if (nodeBIndex < nodeAIndex) {\n            const temp = nodeBIndex;\n\n            nodeBIndex = nodeAIndex;\n            nodeAIndex = temp;\n        }\n\n        const orderedNodesBetweenNodes = orderedNodes.slice(nodeAIndex, nodeBIndex);\n\n        const linkNodes = orderedNodesBetweenNodes.filter((node) => {\n            if (this.isHTMLElement(node)) {\n                return node.tagName === 'A';\n            }\n        });\n\n        return linkNodes[0] as HTMLElement;\n    }\n\n    private isHTMLElement(node: Node | HTMLElement): node is HTMLElement {\n        return (node as HTMLElement).querySelector !== undefined;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {StickyModalModule} from 'ngx-sticky-modal';\nimport {TextRepresentation} from '../base-text-brick/base-text-representation.class';\nimport {BricksListComponent} from './bricks-list/bricks-list.component';\nimport {TextBrickComponent} from './component/text-brick.component';\nimport {TextContextMenuComponent} from './text-context-menu/text-context-menu.component';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatListModule} from '@angular/material';\nimport {HelperComponentsModule} from '../../modules/helper-components/helper-components.module';\nimport {ContenteditableModule} from '../../modules/contenteditable/contenteditable.module';\nimport {BrickRegistry} from '../../wall/registry/brick-registry.service';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ContenteditableModule,\n        HelperComponentsModule,\n        StickyModalModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatListModule\n    ],\n    exports: [\n        TextBrickComponent,\n        BricksListComponent,\n        TextContextMenuComponent\n    ],\n    declarations: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ],\n    entryComponents: [\n        TextBrickComponent,\n        BricksListComponent,\n\n        // context menu\n        TextContextMenuComponent\n    ]\n})\nexport class TextBrickModule {\n    constructor(private brickRegistry: BrickRegistry) {\n        this.brickRegistry.register({\n            tag: 'text',\n            component: TextBrickComponent,\n            supportText: true,\n            textRepresentation: TextRepresentation,\n            name: 'Text',\n            description: 'Just start writing with plain text'\n        });\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToTopLeftPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n","import {IDistanceToSpot} from '../interfaces/distance-to-spot.interface';\n\nexport class LocationToLeftCenterPointEvent {\n    constructor(public spots: IDistanceToSpot[]) {\n    }\n}\n"],"names":["InputContextComponent"],"mappings":"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"}